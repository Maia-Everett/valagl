/* gl.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "GL", gir_namespace = "GL", gir_version = "1.0", lower_case_cprefix = "gl_")]
namespace GL {
	[CCode (cheader_filename = "GL/gl.h", cname = "GLsync")]
	[Compact]
	public class GLsync {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLDEBUGPROCAMD")]
	[SimpleType]
	public struct GLDEBUGPROCAMD : int {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLDEBUGPROCARB")]
	[SimpleType]
	public struct GLDEBUGPROCARB : int {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLbitfield")]
	[SimpleType]
	public struct GLbitfield : uint {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLboolean")]
	[SimpleType]
	public struct GLboolean : uint8 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLbyte")]
	[SimpleType]
	public struct GLbyte : int8 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLchar")]
	[SimpleType]
	public struct GLchar : char {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLcharARB")]
	[SimpleType]
	public struct GLcharARB : char {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLclampd")]
	[SimpleType]
	public struct GLclampd : double {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLclampf")]
	[SimpleType]
	public struct GLclampf : float {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLdouble")]
	[SimpleType]
	public struct GLdouble : double {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLenum")]
	[SimpleType]
	public struct GLenum : uint {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLfloat")]
	[SimpleType]
	public struct GLfloat : float {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLhalfNV")]
	[SimpleType]
	public struct GLhalfNV : ushort {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLhandleARB")]
	[SimpleType]
	public struct GLhandleARB : uint {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLint")]
	[SimpleType]
	public struct GLint : int {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLint64")]
	[SimpleType]
	public struct GLint64 : int64 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLint64EXT")]
	[SimpleType]
	public struct GLint64EXT : int64 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLintptr")]
	[SimpleType]
	public struct GLintptr : size_t {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLintptrARB")]
	[SimpleType]
	public struct GLintptrARB : size_t {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLshort")]
	[SimpleType]
	public struct GLshort : short {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLsizei")]
	[SimpleType]
	public struct GLsizei : int {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLsizeiptr")]
	[SimpleType]
	public struct GLsizeiptr : size_t {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLsizeiptrARB")]
	[SimpleType]
	public struct GLsizeiptrARB : size_t {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLubyte")]
	[SimpleType]
	public struct GLubyte : uint8 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLuint")]
	[SimpleType]
	public struct GLuint : uint {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLuint64")]
	[SimpleType]
	public struct GLuint64 : uint64 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLuint64EXT")]
	[SimpleType]
	public struct GLuint64EXT : uint64 {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLushort")]
	[SimpleType]
	public struct GLushort : ushort {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLvdpauSurfaceNV")]
	[SimpleType]
	public struct GLvdpauSurfaceNV : GL.GLintptr {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GLvoid")]
	[SimpleType]
	public struct GLvoid {
	}
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_1PASS_EXT")]
	public const int GL_1PASS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_1PASS_SGIS")]
	public const int GL_1PASS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2D")]
	public const int GL_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2PASS_0_EXT")]
	public const int GL_2PASS_0_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2PASS_0_SGIS")]
	public const int GL_2PASS_0_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2PASS_1_EXT")]
	public const int GL_2PASS_1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2PASS_1_SGIS")]
	public const int GL_2PASS_1_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2X_BIT_ATI")]
	public const int GL_2X_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_2_BYTES")]
	public const int GL_2_BYTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3D")]
	public const int GL_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3DC_XY_AMD")]
	public const int GL_3DC_XY_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3DC_X_AMD")]
	public const int GL_3DC_X_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3D_COLOR")]
	public const int GL_3D_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3D_COLOR_TEXTURE")]
	public const int GL_3D_COLOR_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_3_BYTES")]
	public const int GL_3_BYTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_422_AVERAGE_EXT")]
	public const int GL_422_AVERAGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_422_EXT")]
	public const int GL_422_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_422_REV_AVERAGE_EXT")]
	public const int GL_422_REV_AVERAGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_422_REV_EXT")]
	public const int GL_422_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4D_COLOR_TEXTURE")]
	public const int GL_4D_COLOR_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_0_EXT")]
	public const int GL_4PASS_0_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_0_SGIS")]
	public const int GL_4PASS_0_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_1_EXT")]
	public const int GL_4PASS_1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_1_SGIS")]
	public const int GL_4PASS_1_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_2_EXT")]
	public const int GL_4PASS_2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_2_SGIS")]
	public const int GL_4PASS_2_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_3_EXT")]
	public const int GL_4PASS_3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4PASS_3_SGIS")]
	public const int GL_4PASS_3_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4X_BIT_ATI")]
	public const int GL_4X_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_4_BYTES")]
	public const int GL_4_BYTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_8X_BIT_ATI")]
	public const int GL_8X_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ABGR_EXT")]
	public const int GL_ABGR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM")]
	public const int GL_ACCUM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_ALPHA_BITS")]
	public const int GL_ACCUM_ALPHA_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_BLUE_BITS")]
	public const int GL_ACCUM_BLUE_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_BUFFER_BIT")]
	public const int GL_ACCUM_BUFFER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_CLEAR_VALUE")]
	public const int GL_ACCUM_CLEAR_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_GREEN_BITS")]
	public const int GL_ACCUM_GREEN_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACCUM_RED_BITS")]
	public const int GL_ACCUM_RED_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_ACTIVE_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_ATTRIBUTES")]
	public const int GL_ACTIVE_ATTRIBUTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH")]
	public const int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_PROGRAM")]
	public const int GL_ACTIVE_PROGRAM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_PROGRAM_EXT")]
	public const int GL_ACTIVE_PROGRAM_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_STENCIL_FACE_EXT")]
	public const int GL_ACTIVE_STENCIL_FACE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_SUBROUTINES")]
	public const int GL_ACTIVE_SUBROUTINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_SUBROUTINE_MAX_LENGTH")]
	public const int GL_ACTIVE_SUBROUTINE_MAX_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_SUBROUTINE_UNIFORMS")]
	public const int GL_ACTIVE_SUBROUTINE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS")]
	public const int GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH")]
	public const int GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_TEXTURE")]
	public const int GL_ACTIVE_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_TEXTURE_ARB")]
	public const int GL_ACTIVE_TEXTURE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_UNIFORMS")]
	public const int GL_ACTIVE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_UNIFORM_BLOCKS")]
	public const int GL_ACTIVE_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH")]
	public const int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_UNIFORM_MAX_LENGTH")]
	public const int GL_ACTIVE_UNIFORM_MAX_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_VARYINGS_NV")]
	public const int GL_ACTIVE_VARYINGS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_VARYING_MAX_LENGTH_NV")]
	public const int GL_ACTIVE_VARYING_MAX_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ACTIVE_VERTEX_UNITS_ARB")]
	public const int GL_ACTIVE_VERTEX_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ADD")]
	public const int GL_ADD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ADD_ATI")]
	public const int GL_ADD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ADD_BLEND_IMG")]
	public const int GL_ADD_BLEND_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ADD_SIGNED")]
	public const int GL_ADD_SIGNED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ADD_SIGNED_EXT")]
	public const int GL_ADD_SIGNED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALIASED_LINE_WIDTH_RANGE")]
	public const int GL_ALIASED_LINE_WIDTH_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALIASED_POINT_SIZE_RANGE")]
	public const int GL_ALIASED_POINT_SIZE_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALL_ATTRIB_BITS")]
	public const int GL_ALL_ATTRIB_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALL_BARRIER_BITS")]
	public const int GL_ALL_BARRIER_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALL_BARRIER_BITS_EXT")]
	public const int GL_ALL_BARRIER_BITS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALL_COMPLETED_NV")]
	public const int GL_ALL_COMPLETED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALL_SHADER_BITS")]
	public const int GL_ALL_SHADER_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA")]
	public const int GL_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA12")]
	public const int GL_ALPHA12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA12_EXT")]
	public const int GL_ALPHA12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16")]
	public const int GL_ALPHA16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16F_ARB")]
	public const int GL_ALPHA16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16I_EXT")]
	public const int GL_ALPHA16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16UI_EXT")]
	public const int GL_ALPHA16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16_EXT")]
	public const int GL_ALPHA16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA16_SNORM")]
	public const int GL_ALPHA16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA32F_ARB")]
	public const int GL_ALPHA32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA32I_EXT")]
	public const int GL_ALPHA32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA32UI_EXT")]
	public const int GL_ALPHA32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA4")]
	public const int GL_ALPHA4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA4_EXT")]
	public const int GL_ALPHA4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA8")]
	public const int GL_ALPHA8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA8I_EXT")]
	public const int GL_ALPHA8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA8UI_EXT")]
	public const int GL_ALPHA8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA8_EXT")]
	public const int GL_ALPHA8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA8_SNORM")]
	public const int GL_ALPHA8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_BIAS")]
	public const int GL_ALPHA_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_BITS")]
	public const int GL_ALPHA_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_FLOAT16_APPLE")]
	public const int GL_ALPHA_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_FLOAT16_ATI")]
	public const int GL_ALPHA_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_FLOAT32_APPLE")]
	public const int GL_ALPHA_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_FLOAT32_ATI")]
	public const int GL_ALPHA_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_INTEGER")]
	public const int GL_ALPHA_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_INTEGER_EXT")]
	public const int GL_ALPHA_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_MAX_CLAMP_INGR")]
	public const int GL_ALPHA_MAX_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_MAX_SGIX")]
	public const int GL_ALPHA_MAX_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_MIN_CLAMP_INGR")]
	public const int GL_ALPHA_MIN_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_MIN_SGIX")]
	public const int GL_ALPHA_MIN_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_SCALE")]
	public const int GL_ALPHA_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_SNORM")]
	public const int GL_ALPHA_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST")]
	public const int GL_ALPHA_TEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST_FUNC")]
	public const int GL_ALPHA_TEST_FUNC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST_FUNC_QCOM")]
	public const int GL_ALPHA_TEST_FUNC_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST_QCOM")]
	public const int GL_ALPHA_TEST_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST_REF")]
	public const int GL_ALPHA_TEST_REF;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALPHA_TEST_REF_QCOM")]
	public const int GL_ALPHA_TEST_REF_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALREADY_SIGNALED")]
	public const int GL_ALREADY_SIGNALED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ALWAYS")]
	public const int GL_ALWAYS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AMBIENT")]
	public const int GL_AMBIENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AMBIENT_AND_DIFFUSE")]
	public const int GL_AMBIENT_AND_DIFFUSE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AND")]
	public const int GL_AND;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AND_INVERTED")]
	public const int GL_AND_INVERTED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AND_REVERSE")]
	public const int GL_AND_REVERSE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ANY_SAMPLES_PASSED")]
	public const int GL_ANY_SAMPLES_PASSED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARB_imaging")]
	public const int GL_ARB_imaging;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_BUFFER")]
	public const int GL_ARRAY_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_BUFFER_ARB")]
	public const int GL_ARRAY_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_BUFFER_BINDING")]
	public const int GL_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT")]
	public const int GL_ARRAY_ELEMENT_LOCK_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT")]
	public const int GL_ARRAY_ELEMENT_LOCK_FIRST_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_OBJECT_BUFFER_ATI")]
	public const int GL_ARRAY_OBJECT_BUFFER_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ARRAY_OBJECT_OFFSET_ATI")]
	public const int GL_ARRAY_OBJECT_OFFSET_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ASYNC_DRAW_PIXELS_SGIX")]
	public const int GL_ASYNC_DRAW_PIXELS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ASYNC_HISTOGRAM_SGIX")]
	public const int GL_ASYNC_HISTOGRAM_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ASYNC_MARKER_SGIX")]
	public const int GL_ASYNC_MARKER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ASYNC_READ_PIXELS_SGIX")]
	public const int GL_ASYNC_READ_PIXELS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ASYNC_TEX_IMAGE_SGIX")]
	public const int GL_ASYNC_TEX_IMAGE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD")]
	public const int GL_ATC_RGBA_EXPLICIT_ALPHA_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD")]
	public const int GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATC_RGB_AMD")]
	public const int GL_ATC_RGB_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BARRIER_BIT")]
	public const int GL_ATOMIC_COUNTER_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BARRIER_BIT_EXT")]
	public const int GL_ATOMIC_COUNTER_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER")]
	public const int GL_ATOMIC_COUNTER_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS")]
	public const int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES")]
	public const int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_BINDING")]
	public const int GL_ATOMIC_COUNTER_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE")]
	public const int GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER")]
	public const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER")]
	public const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER")]
	public const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER")]
	public const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER")]
	public const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_SIZE")]
	public const int GL_ATOMIC_COUNTER_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATOMIC_COUNTER_BUFFER_START")]
	public const int GL_ATOMIC_COUNTER_BUFFER_START;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTACHED_SHADERS")]
	public const int GL_ATTACHED_SHADERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTENUATION_EXT")]
	public const int GL_ATTENUATION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTRIB_ARRAY_POINTER_NV")]
	public const int GL_ATTRIB_ARRAY_POINTER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTRIB_ARRAY_SIZE_NV")]
	public const int GL_ATTRIB_ARRAY_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTRIB_ARRAY_STRIDE_NV")]
	public const int GL_ATTRIB_ARRAY_STRIDE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTRIB_ARRAY_TYPE_NV")]
	public const int GL_ATTRIB_ARRAY_TYPE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ATTRIB_STACK_DEPTH")]
	public const int GL_ATTRIB_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUTO_NORMAL")]
	public const int GL_AUTO_NORMAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX0")]
	public const int GL_AUX0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX1")]
	public const int GL_AUX1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX2")]
	public const int GL_AUX2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX3")]
	public const int GL_AUX3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX_BUFFERS")]
	public const int GL_AUX_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AUX_DEPTH_STENCIL_APPLE")]
	public const int GL_AUX_DEPTH_STENCIL_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_AVERAGE_EXT")]
	public const int GL_AVERAGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BACK")]
	public const int GL_BACK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BACK_LEFT")]
	public const int GL_BACK_LEFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BACK_PRIMARY_COLOR_NV")]
	public const int GL_BACK_PRIMARY_COLOR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BACK_RIGHT")]
	public const int GL_BACK_RIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BACK_SECONDARY_COLOR_NV")]
	public const int GL_BACK_SECONDARY_COLOR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGR")]
	public const int GL_BGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGRA")]
	public const int GL_BGRA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGRA_EXT")]
	public const int GL_BGRA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGRA_INTEGER")]
	public const int GL_BGRA_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGRA_INTEGER_EXT")]
	public const int GL_BGRA_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGR_EXT")]
	public const int GL_BGR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGR_INTEGER")]
	public const int GL_BGR_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BGR_INTEGER_EXT")]
	public const int GL_BGR_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BIAS_BIT_ATI")]
	public const int GL_BIAS_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV")]
	public const int GL_BIAS_BY_NEGATIVE_ONE_HALF_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BITMAP")]
	public const int GL_BITMAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BITMAP_TOKEN")]
	public const int GL_BITMAP_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND")]
	public const int GL_BLEND;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_COLOR")]
	public const int GL_BLEND_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_COLOR_EXT")]
	public const int GL_BLEND_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST")]
	public const int GL_BLEND_DST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_ALPHA")]
	public const int GL_BLEND_DST_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_ALPHA_EXT")]
	public const int GL_BLEND_DST_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_ALPHA_OES")]
	public const int GL_BLEND_DST_ALPHA_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_RGB")]
	public const int GL_BLEND_DST_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_RGB_EXT")]
	public const int GL_BLEND_DST_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_DST_RGB_OES")]
	public const int GL_BLEND_DST_RGB_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION")]
	public const int GL_BLEND_EQUATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_ALPHA")]
	public const int GL_BLEND_EQUATION_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_ALPHA_EXT")]
	public const int GL_BLEND_EQUATION_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_ALPHA_OES")]
	public const int GL_BLEND_EQUATION_ALPHA_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_EXT")]
	public const int GL_BLEND_EQUATION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_OES")]
	public const int GL_BLEND_EQUATION_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_RGB")]
	public const int GL_BLEND_EQUATION_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_RGB_EXT")]
	public const int GL_BLEND_EQUATION_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_EQUATION_RGB_OES")]
	public const int GL_BLEND_EQUATION_RGB_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC")]
	public const int GL_BLEND_SRC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_ALPHA")]
	public const int GL_BLEND_SRC_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_ALPHA_EXT")]
	public const int GL_BLEND_SRC_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_ALPHA_OES")]
	public const int GL_BLEND_SRC_ALPHA_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_RGB")]
	public const int GL_BLEND_SRC_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_RGB_EXT")]
	public const int GL_BLEND_SRC_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLEND_SRC_RGB_OES")]
	public const int GL_BLEND_SRC_RGB_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE")]
	public const int GL_BLUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_BIAS")]
	public const int GL_BLUE_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_BITS")]
	public const int GL_BLUE_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_BIT_ATI")]
	public const int GL_BLUE_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_INTEGER")]
	public const int GL_BLUE_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_INTEGER_EXT")]
	public const int GL_BLUE_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_MAX_CLAMP_INGR")]
	public const int GL_BLUE_MAX_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_MIN_CLAMP_INGR")]
	public const int GL_BLUE_MIN_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BLUE_SCALE")]
	public const int GL_BLUE_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL")]
	public const int GL_BOOL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_ARB")]
	public const int GL_BOOL_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC2")]
	public const int GL_BOOL_VEC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC2_ARB")]
	public const int GL_BOOL_VEC2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC3")]
	public const int GL_BOOL_VEC3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC3_ARB")]
	public const int GL_BOOL_VEC3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC4")]
	public const int GL_BOOL_VEC4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BOOL_VEC4_ARB")]
	public const int GL_BOOL_VEC4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_ACCESS")]
	public const int GL_BUFFER_ACCESS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_ACCESS_ARB")]
	public const int GL_BUFFER_ACCESS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_ACCESS_FLAGS")]
	public const int GL_BUFFER_ACCESS_FLAGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_ACCESS_OES")]
	public const int GL_BUFFER_ACCESS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_FLUSHING_UNMAP_APPLE")]
	public const int GL_BUFFER_FLUSHING_UNMAP_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_GPU_ADDRESS_NV")]
	public const int GL_BUFFER_GPU_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAPPED")]
	public const int GL_BUFFER_MAPPED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAPPED_ARB")]
	public const int GL_BUFFER_MAPPED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAPPED_OES")]
	public const int GL_BUFFER_MAPPED_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAP_LENGTH")]
	public const int GL_BUFFER_MAP_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAP_OFFSET")]
	public const int GL_BUFFER_MAP_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAP_POINTER")]
	public const int GL_BUFFER_MAP_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAP_POINTER_ARB")]
	public const int GL_BUFFER_MAP_POINTER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_MAP_POINTER_OES")]
	public const int GL_BUFFER_MAP_POINTER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_OBJECT_APPLE")]
	public const int GL_BUFFER_OBJECT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_SERIALIZED_MODIFY_APPLE")]
	public const int GL_BUFFER_SERIALIZED_MODIFY_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_SIZE")]
	public const int GL_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_SIZE_ARB")]
	public const int GL_BUFFER_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_UPDATE_BARRIER_BIT")]
	public const int GL_BUFFER_UPDATE_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_UPDATE_BARRIER_BIT_EXT")]
	public const int GL_BUFFER_UPDATE_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_USAGE")]
	public const int GL_BUFFER_USAGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUFFER_USAGE_ARB")]
	public const int GL_BUFFER_USAGE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_ENVMAP_ATI")]
	public const int GL_BUMP_ENVMAP_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_NUM_TEX_UNITS_ATI")]
	public const int GL_BUMP_NUM_TEX_UNITS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_ROT_MATRIX_ATI")]
	public const int GL_BUMP_ROT_MATRIX_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_ROT_MATRIX_SIZE_ATI")]
	public const int GL_BUMP_ROT_MATRIX_SIZE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_TARGET_ATI")]
	public const int GL_BUMP_TARGET_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BUMP_TEX_UNITS_ATI")]
	public const int GL_BUMP_TEX_UNITS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_BYTE")]
	public const int GL_BYTE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_C3F_V3F")]
	public const int GL_C3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_C4F_N3F_V3F")]
	public const int GL_C4F_N3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_C4UB_V2F")]
	public const int GL_C4UB_V2F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_C4UB_V3F")]
	public const int GL_C4UB_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CALLIGRAPHIC_FRAGMENT_SGIX")]
	public const int GL_CALLIGRAPHIC_FRAGMENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CCW")]
	public const int GL_CCW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP")]
	public const int GL_CLAMP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_FRAGMENT_COLOR")]
	public const int GL_CLAMP_FRAGMENT_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_FRAGMENT_COLOR_ARB")]
	public const int GL_CLAMP_FRAGMENT_COLOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_READ_COLOR")]
	public const int GL_CLAMP_READ_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_READ_COLOR_ARB")]
	public const int GL_CLAMP_READ_COLOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_TO_BORDER")]
	public const int GL_CLAMP_TO_BORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_TO_BORDER_ARB")]
	public const int GL_CLAMP_TO_BORDER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_TO_BORDER_SGIS")]
	public const int GL_CLAMP_TO_BORDER_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_TO_EDGE")]
	public const int GL_CLAMP_TO_EDGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_TO_EDGE_SGIS")]
	public const int GL_CLAMP_TO_EDGE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_VERTEX_COLOR")]
	public const int GL_CLAMP_VERTEX_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLAMP_VERTEX_COLOR_ARB")]
	public const int GL_CLAMP_VERTEX_COLOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLEAR")]
	public const int GL_CLEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_ACTIVE_TEXTURE")]
	public const int GL_CLIENT_ACTIVE_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_ACTIVE_TEXTURE_ARB")]
	public const int GL_CLIENT_ACTIVE_TEXTURE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_ALL_ATTRIB_BITS")]
	public const int GL_CLIENT_ALL_ATTRIB_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_ATTRIB_STACK_DEPTH")]
	public const int GL_CLIENT_ATTRIB_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_PIXEL_STORE_BIT")]
	public const int GL_CLIENT_PIXEL_STORE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIENT_VERTEX_ARRAY_BIT")]
	public const int GL_CLIENT_VERTEX_ARRAY_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE0")]
	public const int GL_CLIP_DISTANCE0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE1")]
	public const int GL_CLIP_DISTANCE1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE2")]
	public const int GL_CLIP_DISTANCE2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE3")]
	public const int GL_CLIP_DISTANCE3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE4")]
	public const int GL_CLIP_DISTANCE4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE5")]
	public const int GL_CLIP_DISTANCE5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE6")]
	public const int GL_CLIP_DISTANCE6;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE7")]
	public const int GL_CLIP_DISTANCE7;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_DISTANCE_NV")]
	public const int GL_CLIP_DISTANCE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE0")]
	public const int GL_CLIP_PLANE0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE1")]
	public const int GL_CLIP_PLANE1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE2")]
	public const int GL_CLIP_PLANE2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE3")]
	public const int GL_CLIP_PLANE3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE4")]
	public const int GL_CLIP_PLANE4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CLIP_PLANE5")]
	public const int GL_CLIP_PLANE5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CMYKA_EXT")]
	public const int GL_CMYKA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CMYK_EXT")]
	public const int GL_CMYK_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CND0_ATI")]
	public const int GL_CND0_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CND_ATI")]
	public const int GL_CND_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COEFF")]
	public const int GL_COEFF;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR")]
	public const int GL_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ALPHA_PAIRING_ATI")]
	public const int GL_COLOR_ALPHA_PAIRING_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY")]
	public const int GL_COLOR_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_ADDRESS_NV")]
	public const int GL_COLOR_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_BUFFER_BINDING")]
	public const int GL_COLOR_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_COLOR_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_COUNT_EXT")]
	public const int GL_COLOR_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_EXT")]
	public const int GL_COLOR_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_LENGTH_NV")]
	public const int GL_COLOR_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL")]
	public const int GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_POINTER")]
	public const int GL_COLOR_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_POINTER_EXT")]
	public const int GL_COLOR_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_SIZE")]
	public const int GL_COLOR_ARRAY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_SIZE_EXT")]
	public const int GL_COLOR_ARRAY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_STRIDE")]
	public const int GL_COLOR_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_STRIDE_EXT")]
	public const int GL_COLOR_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_TYPE")]
	public const int GL_COLOR_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ARRAY_TYPE_EXT")]
	public const int GL_COLOR_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT0")]
	public const int GL_COLOR_ATTACHMENT0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT0_EXT")]
	public const int GL_COLOR_ATTACHMENT0_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT0_NV")]
	public const int GL_COLOR_ATTACHMENT0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT0_OES")]
	public const int GL_COLOR_ATTACHMENT0_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT1")]
	public const int GL_COLOR_ATTACHMENT1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT10")]
	public const int GL_COLOR_ATTACHMENT10;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT10_EXT")]
	public const int GL_COLOR_ATTACHMENT10_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT10_NV")]
	public const int GL_COLOR_ATTACHMENT10_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT11")]
	public const int GL_COLOR_ATTACHMENT11;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT11_EXT")]
	public const int GL_COLOR_ATTACHMENT11_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT11_NV")]
	public const int GL_COLOR_ATTACHMENT11_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT12")]
	public const int GL_COLOR_ATTACHMENT12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT12_EXT")]
	public const int GL_COLOR_ATTACHMENT12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT12_NV")]
	public const int GL_COLOR_ATTACHMENT12_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT13")]
	public const int GL_COLOR_ATTACHMENT13;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT13_EXT")]
	public const int GL_COLOR_ATTACHMENT13_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT13_NV")]
	public const int GL_COLOR_ATTACHMENT13_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT14")]
	public const int GL_COLOR_ATTACHMENT14;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT14_EXT")]
	public const int GL_COLOR_ATTACHMENT14_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT14_NV")]
	public const int GL_COLOR_ATTACHMENT14_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT15")]
	public const int GL_COLOR_ATTACHMENT15;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT15_EXT")]
	public const int GL_COLOR_ATTACHMENT15_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT15_NV")]
	public const int GL_COLOR_ATTACHMENT15_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT1_EXT")]
	public const int GL_COLOR_ATTACHMENT1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT1_NV")]
	public const int GL_COLOR_ATTACHMENT1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT2")]
	public const int GL_COLOR_ATTACHMENT2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT2_EXT")]
	public const int GL_COLOR_ATTACHMENT2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT2_NV")]
	public const int GL_COLOR_ATTACHMENT2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT3")]
	public const int GL_COLOR_ATTACHMENT3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT3_EXT")]
	public const int GL_COLOR_ATTACHMENT3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT3_NV")]
	public const int GL_COLOR_ATTACHMENT3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT4")]
	public const int GL_COLOR_ATTACHMENT4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT4_EXT")]
	public const int GL_COLOR_ATTACHMENT4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT4_NV")]
	public const int GL_COLOR_ATTACHMENT4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT5")]
	public const int GL_COLOR_ATTACHMENT5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT5_EXT")]
	public const int GL_COLOR_ATTACHMENT5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT5_NV")]
	public const int GL_COLOR_ATTACHMENT5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT6")]
	public const int GL_COLOR_ATTACHMENT6;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT6_EXT")]
	public const int GL_COLOR_ATTACHMENT6_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT6_NV")]
	public const int GL_COLOR_ATTACHMENT6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT7")]
	public const int GL_COLOR_ATTACHMENT7;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT7_EXT")]
	public const int GL_COLOR_ATTACHMENT7_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT7_NV")]
	public const int GL_COLOR_ATTACHMENT7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT8")]
	public const int GL_COLOR_ATTACHMENT8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT8_EXT")]
	public const int GL_COLOR_ATTACHMENT8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT8_NV")]
	public const int GL_COLOR_ATTACHMENT8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT9")]
	public const int GL_COLOR_ATTACHMENT9;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT9_EXT")]
	public const int GL_COLOR_ATTACHMENT9_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_ATTACHMENT9_NV")]
	public const int GL_COLOR_ATTACHMENT9_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_BUFFER_BIT")]
	public const int GL_COLOR_BUFFER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI")]
	public const int GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_CLEAR_VALUE")]
	public const int GL_COLOR_CLEAR_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_EXT")]
	public const int GL_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_FLOAT_APPLE")]
	public const int GL_COLOR_FLOAT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_INDEX")]
	public const int GL_COLOR_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_INDEXES")]
	public const int GL_COLOR_INDEXES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_LOGIC_OP")]
	public const int GL_COLOR_LOGIC_OP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATERIAL")]
	public const int GL_COLOR_MATERIAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATERIAL_FACE")]
	public const int GL_COLOR_MATERIAL_FACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATERIAL_PARAMETER")]
	public const int GL_COLOR_MATERIAL_PARAMETER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATRIX")]
	public const int GL_COLOR_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATRIX_SGI")]
	public const int GL_COLOR_MATRIX_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATRIX_STACK_DEPTH")]
	public const int GL_COLOR_MATRIX_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_MATRIX_STACK_DEPTH_SGI")]
	public const int GL_COLOR_MATRIX_STACK_DEPTH_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_SAMPLES_NV")]
	public const int GL_COLOR_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_SUM")]
	public const int GL_COLOR_SUM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_SUM_ARB")]
	public const int GL_COLOR_SUM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_SUM_CLAMP_NV")]
	public const int GL_COLOR_SUM_CLAMP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_SUM_EXT")]
	public const int GL_COLOR_SUM_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE")]
	public const int GL_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_ALPHA_SIZE")]
	public const int GL_COLOR_TABLE_ALPHA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_ALPHA_SIZE_SGI")]
	public const int GL_COLOR_TABLE_ALPHA_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_BIAS")]
	public const int GL_COLOR_TABLE_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_BIAS_SGI")]
	public const int GL_COLOR_TABLE_BIAS_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_BLUE_SIZE")]
	public const int GL_COLOR_TABLE_BLUE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_BLUE_SIZE_SGI")]
	public const int GL_COLOR_TABLE_BLUE_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_FORMAT")]
	public const int GL_COLOR_TABLE_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_FORMAT_SGI")]
	public const int GL_COLOR_TABLE_FORMAT_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_GREEN_SIZE")]
	public const int GL_COLOR_TABLE_GREEN_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_GREEN_SIZE_SGI")]
	public const int GL_COLOR_TABLE_GREEN_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_INTENSITY_SIZE")]
	public const int GL_COLOR_TABLE_INTENSITY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_INTENSITY_SIZE_SGI")]
	public const int GL_COLOR_TABLE_INTENSITY_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_LUMINANCE_SIZE")]
	public const int GL_COLOR_TABLE_LUMINANCE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI")]
	public const int GL_COLOR_TABLE_LUMINANCE_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_RED_SIZE")]
	public const int GL_COLOR_TABLE_RED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_RED_SIZE_SGI")]
	public const int GL_COLOR_TABLE_RED_SIZE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_SCALE")]
	public const int GL_COLOR_TABLE_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_SCALE_SGI")]
	public const int GL_COLOR_TABLE_SCALE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_SGI")]
	public const int GL_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_WIDTH")]
	public const int GL_COLOR_TABLE_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_TABLE_WIDTH_SGI")]
	public const int GL_COLOR_TABLE_WIDTH_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COLOR_WRITEMASK")]
	public const int GL_COLOR_WRITEMASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE")]
	public const int GL_COMBINE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE4_NV")]
	public const int GL_COMBINE4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER0_NV")]
	public const int GL_COMBINER0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER1_NV")]
	public const int GL_COMBINER1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER2_NV")]
	public const int GL_COMBINER2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER3_NV")]
	public const int GL_COMBINER3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER4_NV")]
	public const int GL_COMBINER4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER5_NV")]
	public const int GL_COMBINER5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER6_NV")]
	public const int GL_COMBINER6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER7_NV")]
	public const int GL_COMBINER7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_AB_DOT_PRODUCT_NV")]
	public const int GL_COMBINER_AB_DOT_PRODUCT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_AB_OUTPUT_NV")]
	public const int GL_COMBINER_AB_OUTPUT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_BIAS_NV")]
	public const int GL_COMBINER_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_CD_DOT_PRODUCT_NV")]
	public const int GL_COMBINER_CD_DOT_PRODUCT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_CD_OUTPUT_NV")]
	public const int GL_COMBINER_CD_OUTPUT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_COMPONENT_USAGE_NV")]
	public const int GL_COMBINER_COMPONENT_USAGE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_INPUT_NV")]
	public const int GL_COMBINER_INPUT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_MAPPING_NV")]
	public const int GL_COMBINER_MAPPING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_MUX_SUM_NV")]
	public const int GL_COMBINER_MUX_SUM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_SCALE_NV")]
	public const int GL_COMBINER_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINER_SUM_OUTPUT_NV")]
	public const int GL_COMBINER_SUM_OUTPUT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE_ALPHA")]
	public const int GL_COMBINE_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE_ALPHA_EXT")]
	public const int GL_COMBINE_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE_EXT")]
	public const int GL_COMBINE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE_RGB")]
	public const int GL_COMBINE_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMBINE_RGB_EXT")]
	public const int GL_COMBINE_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMMAND_BARRIER_BIT")]
	public const int GL_COMMAND_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMMAND_BARRIER_BIT_EXT")]
	public const int GL_COMMAND_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT")]
	public const int GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPARE_REF_TO_TEXTURE")]
	public const int GL_COMPARE_REF_TO_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPARE_R_TO_TEXTURE")]
	public const int GL_COMPARE_R_TO_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPARE_R_TO_TEXTURE_ARB")]
	public const int GL_COMPARE_R_TO_TEXTURE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPATIBLE_SUBROUTINES")]
	public const int GL_COMPATIBLE_SUBROUTINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPILE")]
	public const int GL_COMPILE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPILE_AND_EXECUTE")]
	public const int GL_COMPILE_AND_EXECUTE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPILE_STATUS")]
	public const int GL_COMPILE_STATUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_ALPHA")]
	public const int GL_COMPRESSED_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_ALPHA_ARB")]
	public const int GL_COMPRESSED_ALPHA_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_INTENSITY")]
	public const int GL_COMPRESSED_INTENSITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_INTENSITY_ARB")]
	public const int GL_COMPRESSED_INTENSITY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE")]
	public const int GL_COMPRESSED_LUMINANCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE_ALPHA")]
	public const int GL_COMPRESSED_LUMINANCE_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE_ALPHA_ARB")]
	public const int GL_COMPRESSED_LUMINANCE_ALPHA_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT")]
	public const int GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE_ARB")]
	public const int GL_COMPRESSED_LUMINANCE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_LUMINANCE_LATC1_EXT")]
	public const int GL_COMPRESSED_LUMINANCE_LATC1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RED")]
	public const int GL_COMPRESSED_RED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RED_GREEN_RGTC2_EXT")]
	public const int GL_COMPRESSED_RED_GREEN_RGTC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RED_RGTC1")]
	public const int GL_COMPRESSED_RED_RGTC1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RED_RGTC1_EXT")]
	public const int GL_COMPRESSED_RED_RGTC1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RG")]
	public const int GL_COMPRESSED_RG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB")]
	public const int GL_COMPRESSED_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA")]
	public const int GL_COMPRESSED_RGBA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_ARB")]
	public const int GL_COMPRESSED_RGBA_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_BPTC_UNORM_ARB")]
	public const int GL_COMPRESSED_RGBA_BPTC_UNORM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_FXT1_3DFX")]
	public const int GL_COMPRESSED_RGBA_FXT1_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG")]
	public const int GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG")]
	public const int GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT")]
	public const int GL_COMPRESSED_RGBA_S3TC_DXT1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT")]
	public const int GL_COMPRESSED_RGBA_S3TC_DXT3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT")]
	public const int GL_COMPRESSED_RGBA_S3TC_DXT5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_ARB")]
	public const int GL_COMPRESSED_RGB_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB")]
	public const int GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB")]
	public const int GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_FXT1_3DFX")]
	public const int GL_COMPRESSED_RGB_FXT1_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG")]
	public const int GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG")]
	public const int GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RGB_S3TC_DXT1_EXT")]
	public const int GL_COMPRESSED_RGB_S3TC_DXT1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_RG_RGTC2")]
	public const int GL_COMPRESSED_RG_RGTC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT")]
	public const int GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT")]
	public const int GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT")]
	public const int GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_RED_RGTC1")]
	public const int GL_COMPRESSED_SIGNED_RED_RGTC1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT")]
	public const int GL_COMPRESSED_SIGNED_RED_RGTC1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SIGNED_RG_RGTC2")]
	public const int GL_COMPRESSED_SIGNED_RG_RGTC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SLUMINANCE")]
	public const int GL_COMPRESSED_SLUMINANCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SLUMINANCE_ALPHA")]
	public const int GL_COMPRESSED_SLUMINANCE_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SLUMINANCE_ALPHA_EXT")]
	public const int GL_COMPRESSED_SLUMINANCE_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SLUMINANCE_EXT")]
	public const int GL_COMPRESSED_SLUMINANCE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB")]
	public const int GL_COMPRESSED_SRGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA")]
	public const int GL_COMPRESSED_SRGB_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB")]
	public const int GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA_EXT")]
	public const int GL_COMPRESSED_SRGB_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT")]
	public const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT")]
	public const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT")]
	public const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_EXT")]
	public const int GL_COMPRESSED_SRGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT")]
	public const int GL_COMPRESSED_SRGB_S3TC_DXT1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_TEXTURE_FORMATS")]
	public const int GL_COMPRESSED_TEXTURE_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMPRESSED_TEXTURE_FORMATS_ARB")]
	public const int GL_COMPRESSED_TEXTURE_FORMATS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COMP_BIT_ATI")]
	public const int GL_COMP_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONDITION_SATISFIED")]
	public const int GL_CONDITION_SATISFIED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT")]
	public const int GL_CONSTANT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_ALPHA")]
	public const int GL_CONSTANT_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_ALPHA_EXT")]
	public const int GL_CONSTANT_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_ATTENUATION")]
	public const int GL_CONSTANT_ATTENUATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_BORDER")]
	public const int GL_CONSTANT_BORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_BORDER_HP")]
	public const int GL_CONSTANT_BORDER_HP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_COLOR")]
	public const int GL_CONSTANT_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_COLOR0_NV")]
	public const int GL_CONSTANT_COLOR0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_COLOR1_NV")]
	public const int GL_CONSTANT_COLOR1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_COLOR_EXT")]
	public const int GL_CONSTANT_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONSTANT_EXT")]
	public const int GL_CONSTANT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONST_EYE_NV")]
	public const int GL_CONST_EYE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT")]
	public const int GL_CONTEXT_COMPATIBILITY_PROFILE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_CORE_PROFILE_BIT")]
	public const int GL_CONTEXT_CORE_PROFILE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_FLAGS")]
	public const int GL_CONTEXT_FLAGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT")]
	public const int GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB")]
	public const int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTEXT_PROFILE_MASK")]
	public const int GL_CONTEXT_PROFILE_MASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONTINUOUS_AMD")]
	public const int GL_CONTINUOUS_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_1D")]
	public const int GL_CONVOLUTION_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_1D_EXT")]
	public const int GL_CONVOLUTION_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_2D")]
	public const int GL_CONVOLUTION_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_2D_EXT")]
	public const int GL_CONVOLUTION_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_BORDER_COLOR")]
	public const int GL_CONVOLUTION_BORDER_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_BORDER_COLOR_HP")]
	public const int GL_CONVOLUTION_BORDER_COLOR_HP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_BORDER_MODE")]
	public const int GL_CONVOLUTION_BORDER_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_BORDER_MODE_EXT")]
	public const int GL_CONVOLUTION_BORDER_MODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FILTER_BIAS")]
	public const int GL_CONVOLUTION_FILTER_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FILTER_BIAS_EXT")]
	public const int GL_CONVOLUTION_FILTER_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FILTER_SCALE")]
	public const int GL_CONVOLUTION_FILTER_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FILTER_SCALE_EXT")]
	public const int GL_CONVOLUTION_FILTER_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FORMAT")]
	public const int GL_CONVOLUTION_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_FORMAT_EXT")]
	public const int GL_CONVOLUTION_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_HEIGHT")]
	public const int GL_CONVOLUTION_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_HEIGHT_EXT")]
	public const int GL_CONVOLUTION_HEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_HINT_SGIX")]
	public const int GL_CONVOLUTION_HINT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_WIDTH")]
	public const int GL_CONVOLUTION_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CONVOLUTION_WIDTH_EXT")]
	public const int GL_CONVOLUTION_WIDTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_0_ATI")]
	public const int GL_CON_0_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_10_ATI")]
	public const int GL_CON_10_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_11_ATI")]
	public const int GL_CON_11_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_12_ATI")]
	public const int GL_CON_12_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_13_ATI")]
	public const int GL_CON_13_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_14_ATI")]
	public const int GL_CON_14_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_15_ATI")]
	public const int GL_CON_15_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_16_ATI")]
	public const int GL_CON_16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_17_ATI")]
	public const int GL_CON_17_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_18_ATI")]
	public const int GL_CON_18_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_19_ATI")]
	public const int GL_CON_19_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_1_ATI")]
	public const int GL_CON_1_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_20_ATI")]
	public const int GL_CON_20_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_21_ATI")]
	public const int GL_CON_21_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_22_ATI")]
	public const int GL_CON_22_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_23_ATI")]
	public const int GL_CON_23_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_24_ATI")]
	public const int GL_CON_24_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_25_ATI")]
	public const int GL_CON_25_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_26_ATI")]
	public const int GL_CON_26_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_27_ATI")]
	public const int GL_CON_27_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_28_ATI")]
	public const int GL_CON_28_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_29_ATI")]
	public const int GL_CON_29_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_2_ATI")]
	public const int GL_CON_2_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_30_ATI")]
	public const int GL_CON_30_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_31_ATI")]
	public const int GL_CON_31_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_3_ATI")]
	public const int GL_CON_3_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_4_ATI")]
	public const int GL_CON_4_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_5_ATI")]
	public const int GL_CON_5_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_6_ATI")]
	public const int GL_CON_6_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_7_ATI")]
	public const int GL_CON_7_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_8_ATI")]
	public const int GL_CON_8_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CON_9_ATI")]
	public const int GL_CON_9_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COORD_REPLACE")]
	public const int GL_COORD_REPLACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COORD_REPLACE_ARB")]
	public const int GL_COORD_REPLACE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COORD_REPLACE_NV")]
	public const int GL_COORD_REPLACE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COPY")]
	public const int GL_COPY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COPY_INVERTED")]
	public const int GL_COPY_INVERTED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COPY_PIXEL_TOKEN")]
	public const int GL_COPY_PIXEL_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COPY_READ_BUFFER")]
	public const int GL_COPY_READ_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COPY_WRITE_BUFFER")]
	public const int GL_COPY_WRITE_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COUNTER_RANGE_AMD")]
	public const int GL_COUNTER_RANGE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COUNTER_TYPE_AMD")]
	public const int GL_COUNTER_TYPE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_ALL_FRAGMENTS_NV")]
	public const int GL_COVERAGE_ALL_FRAGMENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_ATTACHMENT_NV")]
	public const int GL_COVERAGE_ATTACHMENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_AUTOMATIC_NV")]
	public const int GL_COVERAGE_AUTOMATIC_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_BUFFERS_NV")]
	public const int GL_COVERAGE_BUFFERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_BUFFER_BIT_NV")]
	public const int GL_COVERAGE_BUFFER_BIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_COMPONENT4_NV")]
	public const int GL_COVERAGE_COMPONENT4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_COMPONENT_NV")]
	public const int GL_COVERAGE_COMPONENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_EDGE_FRAGMENTS_NV")]
	public const int GL_COVERAGE_EDGE_FRAGMENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_COVERAGE_SAMPLES_NV")]
	public const int GL_COVERAGE_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CUBIC_EXT")]
	public const int GL_CUBIC_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_FACE")]
	public const int GL_CULL_FACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_FACE_MODE")]
	public const int GL_CULL_FACE_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_FRAGMENT_NV")]
	public const int GL_CULL_FRAGMENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_MODES_NV")]
	public const int GL_CULL_MODES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_VERTEX_EXT")]
	public const int GL_CULL_VERTEX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_VERTEX_EYE_POSITION_EXT")]
	public const int GL_CULL_VERTEX_EYE_POSITION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CULL_VERTEX_OBJECT_POSITION_EXT")]
	public const int GL_CULL_VERTEX_OBJECT_POSITION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_ATTRIB_NV")]
	public const int GL_CURRENT_ATTRIB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_BIT")]
	public const int GL_CURRENT_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_COLOR")]
	public const int GL_CURRENT_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_FOG_COORD")]
	public const int GL_CURRENT_FOG_COORD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_FOG_COORDINATE")]
	public const int GL_CURRENT_FOG_COORDINATE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_FOG_COORDINATE_EXT")]
	public const int GL_CURRENT_FOG_COORDINATE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_INDEX")]
	public const int GL_CURRENT_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_MATRIX_ARB")]
	public const int GL_CURRENT_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_MATRIX_INDEX_ARB")]
	public const int GL_CURRENT_MATRIX_INDEX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_MATRIX_NV")]
	public const int GL_CURRENT_MATRIX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_MATRIX_STACK_DEPTH_ARB")]
	public const int GL_CURRENT_MATRIX_STACK_DEPTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_MATRIX_STACK_DEPTH_NV")]
	public const int GL_CURRENT_MATRIX_STACK_DEPTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_NORMAL")]
	public const int GL_CURRENT_NORMAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_OCCLUSION_QUERY_ID_NV")]
	public const int GL_CURRENT_OCCLUSION_QUERY_ID_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_PALETTE_MATRIX_ARB")]
	public const int GL_CURRENT_PALETTE_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_PALETTE_MATRIX_OES")]
	public const int GL_CURRENT_PALETTE_MATRIX_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_PROGRAM")]
	public const int GL_CURRENT_PROGRAM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_QUERY")]
	public const int GL_CURRENT_QUERY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_QUERY_ARB")]
	public const int GL_CURRENT_QUERY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_COLOR")]
	public const int GL_CURRENT_RASTER_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_DISTANCE")]
	public const int GL_CURRENT_RASTER_DISTANCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_INDEX")]
	public const int GL_CURRENT_RASTER_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_NORMAL_SGIX")]
	public const int GL_CURRENT_RASTER_NORMAL_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_POSITION")]
	public const int GL_CURRENT_RASTER_POSITION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_POSITION_VALID")]
	public const int GL_CURRENT_RASTER_POSITION_VALID;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_SECONDARY_COLOR")]
	public const int GL_CURRENT_RASTER_SECONDARY_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_RASTER_TEXTURE_COORDS")]
	public const int GL_CURRENT_RASTER_TEXTURE_COORDS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_SECONDARY_COLOR")]
	public const int GL_CURRENT_SECONDARY_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_SECONDARY_COLOR_EXT")]
	public const int GL_CURRENT_SECONDARY_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_TEXTURE_COORDS")]
	public const int GL_CURRENT_TEXTURE_COORDS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_TIME_NV")]
	public const int GL_CURRENT_TIME_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_VERTEX_ATTRIB")]
	public const int GL_CURRENT_VERTEX_ATTRIB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_VERTEX_ATTRIB_ARB")]
	public const int GL_CURRENT_VERTEX_ATTRIB_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_VERTEX_EXT")]
	public const int GL_CURRENT_VERTEX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_VERTEX_WEIGHT_EXT")]
	public const int GL_CURRENT_VERTEX_WEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CURRENT_WEIGHT_ARB")]
	public const int GL_CURRENT_WEIGHT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_CW")]
	public const int GL_CW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DATA_BUFFER_AMD")]
	public const int GL_DATA_BUFFER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_ASSERT_MESA")]
	public const int GL_DEBUG_ASSERT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CALLBACK_FUNCTION_ARB")]
	public const int GL_DEBUG_CALLBACK_FUNCTION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CALLBACK_USER_PARAM_ARB")]
	public const int GL_DEBUG_CALLBACK_USER_PARAM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_API_ERROR_AMD")]
	public const int GL_DEBUG_CATEGORY_API_ERROR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_APPLICATION_AMD")]
	public const int GL_DEBUG_CATEGORY_APPLICATION_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_DEPRECATION_AMD")]
	public const int GL_DEBUG_CATEGORY_DEPRECATION_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_OTHER_AMD")]
	public const int GL_DEBUG_CATEGORY_OTHER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_PERFORMANCE_AMD")]
	public const int GL_DEBUG_CATEGORY_PERFORMANCE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD")]
	public const int GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD")]
	public const int GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD")]
	public const int GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_LOGGED_MESSAGES_AMD")]
	public const int GL_DEBUG_LOGGED_MESSAGES_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_LOGGED_MESSAGES_ARB")]
	public const int GL_DEBUG_LOGGED_MESSAGES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB")]
	public const int GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_OBJECT_MESA")]
	public const int GL_DEBUG_OBJECT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB")]
	public const int GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_PRINT_MESA")]
	public const int GL_DEBUG_PRINT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_HIGH_AMD")]
	public const int GL_DEBUG_SEVERITY_HIGH_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_HIGH_ARB")]
	public const int GL_DEBUG_SEVERITY_HIGH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_LOW_AMD")]
	public const int GL_DEBUG_SEVERITY_LOW_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_LOW_ARB")]
	public const int GL_DEBUG_SEVERITY_LOW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_MEDIUM_AMD")]
	public const int GL_DEBUG_SEVERITY_MEDIUM_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SEVERITY_MEDIUM_ARB")]
	public const int GL_DEBUG_SEVERITY_MEDIUM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_API_ARB")]
	public const int GL_DEBUG_SOURCE_API_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_APPLICATION_ARB")]
	public const int GL_DEBUG_SOURCE_APPLICATION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_OTHER_ARB")]
	public const int GL_DEBUG_SOURCE_OTHER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_SHADER_COMPILER_ARB")]
	public const int GL_DEBUG_SOURCE_SHADER_COMPILER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_THIRD_PARTY_ARB")]
	public const int GL_DEBUG_SOURCE_THIRD_PARTY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB")]
	public const int GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB")]
	public const int GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_ERROR_ARB")]
	public const int GL_DEBUG_TYPE_ERROR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_OTHER_ARB")]
	public const int GL_DEBUG_TYPE_OTHER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_PERFORMANCE_ARB")]
	public const int GL_DEBUG_TYPE_PERFORMANCE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_PORTABILITY_ARB")]
	public const int GL_DEBUG_TYPE_PORTABILITY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB")]
	public const int GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECAL")]
	public const int GL_DECAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECODE_EXT")]
	public const int GL_DECODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECR")]
	public const int GL_DECR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECR_WRAP")]
	public const int GL_DECR_WRAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECR_WRAP_EXT")]
	public const int GL_DECR_WRAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DECR_WRAP_OES")]
	public const int GL_DECR_WRAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEFORMATIONS_MASK_SGIX")]
	public const int GL_DEFORMATIONS_MASK_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DELETE_STATUS")]
	public const int GL_DELETE_STATUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPENDENT_AR_TEXTURE_2D_NV")]
	public const int GL_DEPENDENT_AR_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPENDENT_GB_TEXTURE_2D_NV")]
	public const int GL_DEPENDENT_GB_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPENDENT_HILO_TEXTURE_2D_NV")]
	public const int GL_DEPENDENT_HILO_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPENDENT_RGB_TEXTURE_3D_NV")]
	public const int GL_DEPENDENT_RGB_TEXTURE_3D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV")]
	public const int GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH")]
	public const int GL_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH24_STENCIL8")]
	public const int GL_DEPTH24_STENCIL8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH24_STENCIL8_EXT")]
	public const int GL_DEPTH24_STENCIL8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH24_STENCIL8_OES")]
	public const int GL_DEPTH24_STENCIL8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH32F_STENCIL8")]
	public const int GL_DEPTH32F_STENCIL8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH32F_STENCIL8_NV")]
	public const int GL_DEPTH32F_STENCIL8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_ATTACHMENT")]
	public const int GL_DEPTH_ATTACHMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_ATTACHMENT_EXT")]
	public const int GL_DEPTH_ATTACHMENT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_ATTACHMENT_OES")]
	public const int GL_DEPTH_ATTACHMENT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BIAS")]
	public const int GL_DEPTH_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BITS")]
	public const int GL_DEPTH_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BOUNDS_EXT")]
	public const int GL_DEPTH_BOUNDS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BOUNDS_TEST_EXT")]
	public const int GL_DEPTH_BOUNDS_TEST_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BUFFER")]
	public const int GL_DEPTH_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BUFFER_BIT")]
	public const int GL_DEPTH_BUFFER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_BUFFER_FLOAT_MODE_NV")]
	public const int GL_DEPTH_BUFFER_FLOAT_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_CLAMP")]
	public const int GL_DEPTH_CLAMP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_CLAMP_FAR_AMD")]
	public const int GL_DEPTH_CLAMP_FAR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_CLAMP_NEAR_AMD")]
	public const int GL_DEPTH_CLAMP_NEAR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_CLAMP_NV")]
	public const int GL_DEPTH_CLAMP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_CLEAR_VALUE")]
	public const int GL_DEPTH_CLEAR_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT")]
	public const int GL_DEPTH_COMPONENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT16")]
	public const int GL_DEPTH_COMPONENT16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT16_ARB")]
	public const int GL_DEPTH_COMPONENT16_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT16_NONLINEAR_NV")]
	public const int GL_DEPTH_COMPONENT16_NONLINEAR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT16_OES")]
	public const int GL_DEPTH_COMPONENT16_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT16_SGIX")]
	public const int GL_DEPTH_COMPONENT16_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT24")]
	public const int GL_DEPTH_COMPONENT24;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT24_ARB")]
	public const int GL_DEPTH_COMPONENT24_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT24_OES")]
	public const int GL_DEPTH_COMPONENT24_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT24_SGIX")]
	public const int GL_DEPTH_COMPONENT24_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32")]
	public const int GL_DEPTH_COMPONENT32;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32F")]
	public const int GL_DEPTH_COMPONENT32F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32F_NV")]
	public const int GL_DEPTH_COMPONENT32F_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32_ARB")]
	public const int GL_DEPTH_COMPONENT32_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32_OES")]
	public const int GL_DEPTH_COMPONENT32_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_COMPONENT32_SGIX")]
	public const int GL_DEPTH_COMPONENT32_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_EXT")]
	public const int GL_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_FUNC")]
	public const int GL_DEPTH_FUNC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX")]
	public const int GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX")]
	public const int GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_PASS_INSTRUMENT_SGIX")]
	public const int GL_DEPTH_PASS_INSTRUMENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_RANGE")]
	public const int GL_DEPTH_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_SCALE")]
	public const int GL_DEPTH_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL")]
	public const int GL_DEPTH_STENCIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_ATTACHMENT")]
	public const int GL_DEPTH_STENCIL_ATTACHMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_EXT")]
	public const int GL_DEPTH_STENCIL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_MESA")]
	public const int GL_DEPTH_STENCIL_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_NV")]
	public const int GL_DEPTH_STENCIL_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_OES")]
	public const int GL_DEPTH_STENCIL_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_TO_BGRA_NV")]
	public const int GL_DEPTH_STENCIL_TO_BGRA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_STENCIL_TO_RGBA_NV")]
	public const int GL_DEPTH_STENCIL_TO_RGBA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_TEST")]
	public const int GL_DEPTH_TEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_TEXTURE_MODE")]
	public const int GL_DEPTH_TEXTURE_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_TEXTURE_MODE_ARB")]
	public const int GL_DEPTH_TEXTURE_MODE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DEPTH_WRITEMASK")]
	public const int GL_DEPTH_WRITEMASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DETAIL_TEXTURE_2D_BINDING_SGIS")]
	public const int GL_DETAIL_TEXTURE_2D_BINDING_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DETAIL_TEXTURE_2D_SGIS")]
	public const int GL_DETAIL_TEXTURE_2D_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS")]
	public const int GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DETAIL_TEXTURE_LEVEL_SGIS")]
	public const int GL_DETAIL_TEXTURE_LEVEL_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DETAIL_TEXTURE_MODE_SGIS")]
	public const int GL_DETAIL_TEXTURE_MODE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DIFFUSE")]
	public const int GL_DIFFUSE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DISCARD_ATI")]
	public const int GL_DISCARD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DISCARD_NV")]
	public const int GL_DISCARD_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DISCRETE_AMD")]
	public const int GL_DISCRETE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DISTANCE_ATTENUATION_EXT")]
	public const int GL_DISTANCE_ATTENUATION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DISTANCE_ATTENUATION_SGIS")]
	public const int GL_DISTANCE_ATTENUATION_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DITHER")]
	public const int GL_DITHER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOMAIN")]
	public const int GL_DOMAIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DONT_CARE")]
	public const int GL_DONT_CARE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT2_ADD_ATI")]
	public const int GL_DOT2_ADD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_ATI")]
	public const int GL_DOT3_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGB")]
	public const int GL_DOT3_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGBA")]
	public const int GL_DOT3_RGBA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGBA_ARB")]
	public const int GL_DOT3_RGBA_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGBA_EXT")]
	public const int GL_DOT3_RGBA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGBA_IMG")]
	public const int GL_DOT3_RGBA_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGB_ARB")]
	public const int GL_DOT3_RGB_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT3_RGB_EXT")]
	public const int GL_DOT3_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT4_ATI")]
	public const int GL_DOT4_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV")]
	public const int GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV")]
	public const int GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_DEPTH_REPLACE_NV")]
	public const int GL_DOT_PRODUCT_DEPTH_REPLACE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV")]
	public const int GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_NV")]
	public const int GL_DOT_PRODUCT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_PASS_THROUGH_NV")]
	public const int GL_DOT_PRODUCT_PASS_THROUGH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV")]
	public const int GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_TEXTURE_1D_NV")]
	public const int GL_DOT_PRODUCT_TEXTURE_1D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_TEXTURE_2D_NV")]
	public const int GL_DOT_PRODUCT_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_TEXTURE_3D_NV")]
	public const int GL_DOT_PRODUCT_TEXTURE_3D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV")]
	public const int GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV")]
	public const int GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE")]
	public const int GL_DOUBLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLEBUFFER")]
	public const int GL_DOUBLEBUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_EXT")]
	public const int GL_DOUBLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT2")]
	public const int GL_DOUBLE_MAT2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT2_EXT")]
	public const int GL_DOUBLE_MAT2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT3")]
	public const int GL_DOUBLE_MAT3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT3_EXT")]
	public const int GL_DOUBLE_MAT3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT4")]
	public const int GL_DOUBLE_MAT4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_MAT4_EXT")]
	public const int GL_DOUBLE_MAT4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC2")]
	public const int GL_DOUBLE_VEC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC2_EXT")]
	public const int GL_DOUBLE_VEC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC3")]
	public const int GL_DOUBLE_VEC3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC3_EXT")]
	public const int GL_DOUBLE_VEC3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC4")]
	public const int GL_DOUBLE_VEC4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DOUBLE_VEC4_EXT")]
	public const int GL_DOUBLE_VEC4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER")]
	public const int GL_DRAW_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER0")]
	public const int GL_DRAW_BUFFER0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER0_ARB")]
	public const int GL_DRAW_BUFFER0_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER0_ATI")]
	public const int GL_DRAW_BUFFER0_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER0_NV")]
	public const int GL_DRAW_BUFFER0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER1")]
	public const int GL_DRAW_BUFFER1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER10")]
	public const int GL_DRAW_BUFFER10;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER10_ARB")]
	public const int GL_DRAW_BUFFER10_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER10_ATI")]
	public const int GL_DRAW_BUFFER10_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER10_NV")]
	public const int GL_DRAW_BUFFER10_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER11")]
	public const int GL_DRAW_BUFFER11;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER11_ARB")]
	public const int GL_DRAW_BUFFER11_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER11_ATI")]
	public const int GL_DRAW_BUFFER11_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER11_NV")]
	public const int GL_DRAW_BUFFER11_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER12")]
	public const int GL_DRAW_BUFFER12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER12_ARB")]
	public const int GL_DRAW_BUFFER12_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER12_ATI")]
	public const int GL_DRAW_BUFFER12_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER12_NV")]
	public const int GL_DRAW_BUFFER12_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER13")]
	public const int GL_DRAW_BUFFER13;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER13_ARB")]
	public const int GL_DRAW_BUFFER13_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER13_ATI")]
	public const int GL_DRAW_BUFFER13_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER13_NV")]
	public const int GL_DRAW_BUFFER13_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER14")]
	public const int GL_DRAW_BUFFER14;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER14_ARB")]
	public const int GL_DRAW_BUFFER14_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER14_ATI")]
	public const int GL_DRAW_BUFFER14_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER14_NV")]
	public const int GL_DRAW_BUFFER14_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER15")]
	public const int GL_DRAW_BUFFER15;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER15_ARB")]
	public const int GL_DRAW_BUFFER15_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER15_ATI")]
	public const int GL_DRAW_BUFFER15_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER15_NV")]
	public const int GL_DRAW_BUFFER15_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER1_ARB")]
	public const int GL_DRAW_BUFFER1_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER1_ATI")]
	public const int GL_DRAW_BUFFER1_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER1_NV")]
	public const int GL_DRAW_BUFFER1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER2")]
	public const int GL_DRAW_BUFFER2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER2_ARB")]
	public const int GL_DRAW_BUFFER2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER2_ATI")]
	public const int GL_DRAW_BUFFER2_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER2_NV")]
	public const int GL_DRAW_BUFFER2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER3")]
	public const int GL_DRAW_BUFFER3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER3_ARB")]
	public const int GL_DRAW_BUFFER3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER3_ATI")]
	public const int GL_DRAW_BUFFER3_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER3_NV")]
	public const int GL_DRAW_BUFFER3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER4")]
	public const int GL_DRAW_BUFFER4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER4_ARB")]
	public const int GL_DRAW_BUFFER4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER4_ATI")]
	public const int GL_DRAW_BUFFER4_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER4_NV")]
	public const int GL_DRAW_BUFFER4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER5")]
	public const int GL_DRAW_BUFFER5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER5_ARB")]
	public const int GL_DRAW_BUFFER5_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER5_ATI")]
	public const int GL_DRAW_BUFFER5_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER5_NV")]
	public const int GL_DRAW_BUFFER5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER6")]
	public const int GL_DRAW_BUFFER6;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER6_ARB")]
	public const int GL_DRAW_BUFFER6_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER6_ATI")]
	public const int GL_DRAW_BUFFER6_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER6_NV")]
	public const int GL_DRAW_BUFFER6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER7")]
	public const int GL_DRAW_BUFFER7;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER7_ARB")]
	public const int GL_DRAW_BUFFER7_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER7_ATI")]
	public const int GL_DRAW_BUFFER7_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER7_NV")]
	public const int GL_DRAW_BUFFER7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER8")]
	public const int GL_DRAW_BUFFER8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER8_ARB")]
	public const int GL_DRAW_BUFFER8_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER8_ATI")]
	public const int GL_DRAW_BUFFER8_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER8_NV")]
	public const int GL_DRAW_BUFFER8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER9")]
	public const int GL_DRAW_BUFFER9;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER9_ARB")]
	public const int GL_DRAW_BUFFER9_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER9_ATI")]
	public const int GL_DRAW_BUFFER9_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_BUFFER9_NV")]
	public const int GL_DRAW_BUFFER9_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_FRAMEBUFFER")]
	public const int GL_DRAW_FRAMEBUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_FRAMEBUFFER_ANGLE")]
	public const int GL_DRAW_FRAMEBUFFER_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_FRAMEBUFFER_BINDING")]
	public const int GL_DRAW_FRAMEBUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_FRAMEBUFFER_BINDING_EXT")]
	public const int GL_DRAW_FRAMEBUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_FRAMEBUFFER_EXT")]
	public const int GL_DRAW_FRAMEBUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_INDIRECT_ADDRESS_NV")]
	public const int GL_DRAW_INDIRECT_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_INDIRECT_BUFFER")]
	public const int GL_DRAW_INDIRECT_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_INDIRECT_BUFFER_BINDING")]
	public const int GL_DRAW_INDIRECT_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_INDIRECT_LENGTH_NV")]
	public const int GL_DRAW_INDIRECT_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_INDIRECT_UNIFIED_NV")]
	public const int GL_DRAW_INDIRECT_UNIFIED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_PIXELS_APPLE")]
	public const int GL_DRAW_PIXELS_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DRAW_PIXEL_TOKEN")]
	public const int GL_DRAW_PIXEL_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT8_MAG8_INTENSITY8_NV")]
	public const int GL_DSDT8_MAG8_INTENSITY8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT8_MAG8_NV")]
	public const int GL_DSDT8_MAG8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT8_NV")]
	public const int GL_DSDT8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT_MAG_INTENSITY_NV")]
	public const int GL_DSDT_MAG_INTENSITY_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT_MAG_NV")]
	public const int GL_DSDT_MAG_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT_MAG_VIB_NV")]
	public const int GL_DSDT_MAG_VIB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DSDT_NV")]
	public const int GL_DSDT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DST_ALPHA")]
	public const int GL_DST_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DST_COLOR")]
	public const int GL_DST_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DS_BIAS_NV")]
	public const int GL_DS_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DS_SCALE_NV")]
	public const int GL_DS_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DT_BIAS_NV")]
	public const int GL_DT_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DT_SCALE_NV")]
	public const int GL_DT_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DU8DV8_ATI")]
	public const int GL_DU8DV8_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_ALPHA12_SGIS")]
	public const int GL_DUAL_ALPHA12_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_ALPHA16_SGIS")]
	public const int GL_DUAL_ALPHA16_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_ALPHA4_SGIS")]
	public const int GL_DUAL_ALPHA4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_ALPHA8_SGIS")]
	public const int GL_DUAL_ALPHA8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_INTENSITY12_SGIS")]
	public const int GL_DUAL_INTENSITY12_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_INTENSITY16_SGIS")]
	public const int GL_DUAL_INTENSITY16_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_INTENSITY4_SGIS")]
	public const int GL_DUAL_INTENSITY4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_INTENSITY8_SGIS")]
	public const int GL_DUAL_INTENSITY8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE12_SGIS")]
	public const int GL_DUAL_LUMINANCE12_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE16_SGIS")]
	public const int GL_DUAL_LUMINANCE16_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE4_SGIS")]
	public const int GL_DUAL_LUMINANCE4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE8_SGIS")]
	public const int GL_DUAL_LUMINANCE8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE_ALPHA4_SGIS")]
	public const int GL_DUAL_LUMINANCE_ALPHA4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_LUMINANCE_ALPHA8_SGIS")]
	public const int GL_DUAL_LUMINANCE_ALPHA8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUAL_TEXTURE_SELECT_SGIS")]
	public const int GL_DUAL_TEXTURE_SELECT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DUDV_ATI")]
	public const int GL_DUDV_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_ATI")]
	public const int GL_DYNAMIC_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_COPY")]
	public const int GL_DYNAMIC_COPY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_COPY_ARB")]
	public const int GL_DYNAMIC_COPY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_DRAW")]
	public const int GL_DYNAMIC_DRAW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_DRAW_ARB")]
	public const int GL_DYNAMIC_DRAW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_READ")]
	public const int GL_DYNAMIC_READ;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_DYNAMIC_READ_ARB")]
	public const int GL_DYNAMIC_READ_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG")]
	public const int GL_EDGE_FLAG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY")]
	public const int GL_EDGE_FLAG_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_ADDRESS_NV")]
	public const int GL_EDGE_FLAG_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING")]
	public const int GL_EDGE_FLAG_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_COUNT_EXT")]
	public const int GL_EDGE_FLAG_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_EXT")]
	public const int GL_EDGE_FLAG_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_LENGTH_NV")]
	public const int GL_EDGE_FLAG_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_POINTER")]
	public const int GL_EDGE_FLAG_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_POINTER_EXT")]
	public const int GL_EDGE_FLAG_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_STRIDE")]
	public const int GL_EDGE_FLAG_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EDGE_FLAG_ARRAY_STRIDE_EXT")]
	public const int GL_EDGE_FLAG_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EIGHTH_BIT_ATI")]
	public const int GL_EIGHTH_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_ADDRESS_NV")]
	public const int GL_ELEMENT_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_APPLE")]
	public const int GL_ELEMENT_ARRAY_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_ATI")]
	public const int GL_ELEMENT_ARRAY_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BARRIER_BIT")]
	public const int GL_ELEMENT_ARRAY_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BARRIER_BIT_EXT")]
	public const int GL_ELEMENT_ARRAY_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BUFFER")]
	public const int GL_ELEMENT_ARRAY_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BUFFER_ARB")]
	public const int GL_ELEMENT_ARRAY_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BUFFER_BINDING")]
	public const int GL_ELEMENT_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_LENGTH_NV")]
	public const int GL_ELEMENT_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_POINTER_APPLE")]
	public const int GL_ELEMENT_ARRAY_POINTER_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_POINTER_ATI")]
	public const int GL_ELEMENT_ARRAY_POINTER_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_TYPE_APPLE")]
	public const int GL_ELEMENT_ARRAY_TYPE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_TYPE_ATI")]
	public const int GL_ELEMENT_ARRAY_TYPE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ELEMENT_ARRAY_UNIFIED_NV")]
	public const int GL_ELEMENT_ARRAY_UNIFIED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EMBOSS_CONSTANT_NV")]
	public const int GL_EMBOSS_CONSTANT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EMBOSS_LIGHT_NV")]
	public const int GL_EMBOSS_LIGHT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EMBOSS_MAP_NV")]
	public const int GL_EMBOSS_MAP_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EMISSION")]
	public const int GL_EMISSION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ENABLE_BIT")]
	public const int GL_ENABLE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EQUAL")]
	public const int GL_EQUAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EQUIV")]
	public const int GL_EQUIV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ETC1_RGB8_OES")]
	public const int GL_ETC1_RGB8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_2D_NV")]
	public const int GL_EVAL_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_BIT")]
	public const int GL_EVAL_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_FRACTIONAL_TESSELLATION_NV")]
	public const int GL_EVAL_FRACTIONAL_TESSELLATION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_TRIANGULAR_2D_NV")]
	public const int GL_EVAL_TRIANGULAR_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB0_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB10_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB10_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB11_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB11_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB12_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB12_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB13_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB13_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB14_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB14_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB15_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB15_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB1_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB2_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB3_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB4_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB5_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB6_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB7_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB8_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EVAL_VERTEX_ATRRIB9_NV")]
	public const int GL_EVAL_VERTEX_ATRRIB9_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXP")]
	public const int GL_EXP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXP2")]
	public const int GL_EXP2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXPAND_NEGATE_NV")]
	public const int GL_EXPAND_NEGATE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXPAND_NORMAL_NV")]
	public const int GL_EXPAND_NORMAL_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXTENSIONS")]
	public const int GL_EXTENSIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_abgr")]
	public const int GL_EXT_abgr;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_blend_color")]
	public const int GL_EXT_blend_color;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_blend_logic_op")]
	public const int GL_EXT_blend_logic_op;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_blend_minmax")]
	public const int GL_EXT_blend_minmax;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_blend_subtract")]
	public const int GL_EXT_blend_subtract;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_cmyka")]
	public const int GL_EXT_cmyka;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_convolution")]
	public const int GL_EXT_convolution;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_copy_texture")]
	public const int GL_EXT_copy_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_histogram")]
	public const int GL_EXT_histogram;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_packed_pixels")]
	public const int GL_EXT_packed_pixels;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_point_parameters")]
	public const int GL_EXT_point_parameters;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_polygon_offset")]
	public const int GL_EXT_polygon_offset;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_rescale_normal")]
	public const int GL_EXT_rescale_normal;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_shared_texture_palette")]
	public const int GL_EXT_shared_texture_palette;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_subtexture")]
	public const int GL_EXT_subtexture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_texture")]
	public const int GL_EXT_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_texture3D")]
	public const int GL_EXT_texture3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_texture_object")]
	public const int GL_EXT_texture_object;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EXT_vertex_array")]
	public const int GL_EXT_vertex_array;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_DISTANCE_TO_LINE_SGIS")]
	public const int GL_EYE_DISTANCE_TO_LINE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_DISTANCE_TO_POINT_SGIS")]
	public const int GL_EYE_DISTANCE_TO_POINT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_LINEAR")]
	public const int GL_EYE_LINEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_LINE_SGIS")]
	public const int GL_EYE_LINE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_PLANE")]
	public const int GL_EYE_PLANE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_PLANE_ABSOLUTE_NV")]
	public const int GL_EYE_PLANE_ABSOLUTE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_POINT_SGIS")]
	public const int GL_EYE_POINT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_EYE_RADIAL_NV")]
	public const int GL_EYE_RADIAL_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_E_TIMES_F_NV")]
	public const int GL_E_TIMES_F_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FACTOR_ALPHA_MODULATE_IMG")]
	public const int GL_FACTOR_ALPHA_MODULATE_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FACTOR_MAX_AMD")]
	public const int GL_FACTOR_MAX_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FACTOR_MIN_AMD")]
	public const int GL_FACTOR_MIN_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FAILURE_NV")]
	public const int GL_FAILURE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FALSE")]
	public const int GL_FALSE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FASTEST")]
	public const int GL_FASTEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FEEDBACK")]
	public const int GL_FEEDBACK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FEEDBACK_BUFFER_POINTER")]
	public const int GL_FEEDBACK_BUFFER_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FEEDBACK_BUFFER_SIZE")]
	public const int GL_FEEDBACK_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FEEDBACK_BUFFER_TYPE")]
	public const int GL_FEEDBACK_BUFFER_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FENCE_APPLE")]
	public const int GL_FENCE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FENCE_CONDITION_NV")]
	public const int GL_FENCE_CONDITION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FENCE_STATUS_NV")]
	public const int GL_FENCE_STATUS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIELDS_NV")]
	public const int GL_FIELDS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIELD_LOWER_NV")]
	public const int GL_FIELD_LOWER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIELD_UPPER_NV")]
	public const int GL_FIELD_UPPER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FILL")]
	public const int GL_FILL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FILTER4_SGIS")]
	public const int GL_FILTER4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIRST_VERTEX_CONVENTION")]
	public const int GL_FIRST_VERTEX_CONVENTION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIRST_VERTEX_CONVENTION_EXT")]
	public const int GL_FIRST_VERTEX_CONVENTION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIXED")]
	public const int GL_FIXED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIXED_OES")]
	public const int GL_FIXED_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIXED_ONLY")]
	public const int GL_FIXED_ONLY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FIXED_ONLY_ARB")]
	public const int GL_FIXED_ONLY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLAT")]
	public const int GL_FLAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT")]
	public const int GL_FLOAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT16_NV")]
	public const int GL_FLOAT16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT16_VEC2_NV")]
	public const int GL_FLOAT16_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT16_VEC3_NV")]
	public const int GL_FLOAT16_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT16_VEC4_NV")]
	public const int GL_FLOAT16_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_32_UNSIGNED_INT_24_8_REV")]
	public const int GL_FLOAT_32_UNSIGNED_INT_24_8_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV")]
	public const int GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_CLEAR_COLOR_VALUE_NV")]
	public const int GL_FLOAT_CLEAR_COLOR_VALUE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT2")]
	public const int GL_FLOAT_MAT2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT2_ARB")]
	public const int GL_FLOAT_MAT2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT3")]
	public const int GL_FLOAT_MAT3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT3_ARB")]
	public const int GL_FLOAT_MAT3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT4")]
	public const int GL_FLOAT_MAT4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_MAT4_ARB")]
	public const int GL_FLOAT_MAT4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_R16_NV")]
	public const int GL_FLOAT_R16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_R32_NV")]
	public const int GL_FLOAT_R32_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RG16_NV")]
	public const int GL_FLOAT_RG16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RG32_NV")]
	public const int GL_FLOAT_RG32_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGB16_NV")]
	public const int GL_FLOAT_RGB16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGB32_NV")]
	public const int GL_FLOAT_RGB32_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGBA16_NV")]
	public const int GL_FLOAT_RGBA16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGBA32_NV")]
	public const int GL_FLOAT_RGBA32_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGBA_MODE_NV")]
	public const int GL_FLOAT_RGBA_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGBA_NV")]
	public const int GL_FLOAT_RGBA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RGB_NV")]
	public const int GL_FLOAT_RGB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_RG_NV")]
	public const int GL_FLOAT_RG_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_R_NV")]
	public const int GL_FLOAT_R_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC2")]
	public const int GL_FLOAT_VEC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC2_ARB")]
	public const int GL_FLOAT_VEC2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC3")]
	public const int GL_FLOAT_VEC3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC3_ARB")]
	public const int GL_FLOAT_VEC3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC4")]
	public const int GL_FLOAT_VEC4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FLOAT_VEC4_ARB")]
	public const int GL_FLOAT_VEC4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG")]
	public const int GL_FOG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_BIT")]
	public const int GL_FOG_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COLOR")]
	public const int GL_FOG_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD")]
	public const int GL_FOG_COORD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE")]
	public const int GL_FOG_COORDINATE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY")]
	public const int GL_FOG_COORDINATE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING")]
	public const int GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_EXT")]
	public const int GL_FOG_COORDINATE_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_POINTER")]
	public const int GL_FOG_COORDINATE_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_POINTER_EXT")]
	public const int GL_FOG_COORDINATE_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_STRIDE")]
	public const int GL_FOG_COORDINATE_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_STRIDE_EXT")]
	public const int GL_FOG_COORDINATE_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_TYPE")]
	public const int GL_FOG_COORDINATE_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_ARRAY_TYPE_EXT")]
	public const int GL_FOG_COORDINATE_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_EXT")]
	public const int GL_FOG_COORDINATE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_SOURCE")]
	public const int GL_FOG_COORDINATE_SOURCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORDINATE_SOURCE_EXT")]
	public const int GL_FOG_COORDINATE_SOURCE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY")]
	public const int GL_FOG_COORD_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_ADDRESS_NV")]
	public const int GL_FOG_COORD_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_BUFFER_BINDING")]
	public const int GL_FOG_COORD_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_LENGTH_NV")]
	public const int GL_FOG_COORD_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_POINTER")]
	public const int GL_FOG_COORD_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_STRIDE")]
	public const int GL_FOG_COORD_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_ARRAY_TYPE")]
	public const int GL_FOG_COORD_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_COORD_SRC")]
	public const int GL_FOG_COORD_SRC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_DENSITY")]
	public const int GL_FOG_DENSITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_END")]
	public const int GL_FOG_END;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_FACTOR_TO_ALPHA_SGIX")]
	public const int GL_FOG_FACTOR_TO_ALPHA_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_FUNC_POINTS_SGIS")]
	public const int GL_FOG_FUNC_POINTS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_FUNC_SGIS")]
	public const int GL_FOG_FUNC_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_GEN_MODE_NV")]
	public const int GL_FOG_GEN_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_HINT")]
	public const int GL_FOG_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_INDEX")]
	public const int GL_FOG_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_MODE")]
	public const int GL_FOG_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_OFFSET_SGIX")]
	public const int GL_FOG_OFFSET_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_OFFSET_VALUE_SGIX")]
	public const int GL_FOG_OFFSET_VALUE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FOG_START")]
	public const int GL_FOG_START;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FORCE_BLUE_TO_ONE_NV")]
	public const int GL_FORCE_BLUE_TO_ONE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FORMAT_SUBSAMPLE_244_244_OML")]
	public const int GL_FORMAT_SUBSAMPLE_244_244_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FORMAT_SUBSAMPLE_24_24_OML")]
	public const int GL_FORMAT_SUBSAMPLE_24_24_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRACTIONAL_EVEN")]
	public const int GL_FRACTIONAL_EVEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRACTIONAL_ODD")]
	public const int GL_FRACTIONAL_ODD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX")]
	public const int GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENTS_INSTRUMENT_MAX_SGIX")]
	public const int GL_FRAGMENTS_INSTRUMENT_MAX_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENTS_INSTRUMENT_SGIX")]
	public const int GL_FRAGMENTS_INSTRUMENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_ALPHA_MODULATE_IMG")]
	public const int GL_FRAGMENT_ALPHA_MODULATE_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_COLOR_EXT")]
	public const int GL_FRAGMENT_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX")]
	public const int GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX")]
	public const int GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_COLOR_MATERIAL_SGIX")]
	public const int GL_FRAGMENT_COLOR_MATERIAL_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_DEPTH")]
	public const int GL_FRAGMENT_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_DEPTH_EXT")]
	public const int GL_FRAGMENT_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS")]
	public const int GL_FRAGMENT_INTERPOLATION_OFFSET_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT0_SGIX")]
	public const int GL_FRAGMENT_LIGHT0_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT1_SGIX")]
	public const int GL_FRAGMENT_LIGHT1_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT2_SGIX")]
	public const int GL_FRAGMENT_LIGHT2_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT3_SGIX")]
	public const int GL_FRAGMENT_LIGHT3_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT4_SGIX")]
	public const int GL_FRAGMENT_LIGHT4_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT5_SGIX")]
	public const int GL_FRAGMENT_LIGHT5_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT6_SGIX")]
	public const int GL_FRAGMENT_LIGHT6_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT7_SGIX")]
	public const int GL_FRAGMENT_LIGHT7_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHTING_SGIX")]
	public const int GL_FRAGMENT_LIGHTING_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX")]
	public const int GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX")]
	public const int GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX")]
	public const int GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX")]
	public const int GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_MATERIAL_EXT")]
	public const int GL_FRAGMENT_MATERIAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_NORMAL_EXT")]
	public const int GL_FRAGMENT_NORMAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_ARB")]
	public const int GL_FRAGMENT_PROGRAM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_BINDING_NV")]
	public const int GL_FRAGMENT_PROGRAM_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA")]
	public const int GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA")]
	public const int GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_CALLBACK_MESA")]
	public const int GL_FRAGMENT_PROGRAM_CALLBACK_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV")]
	public const int GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_NV")]
	public const int GL_FRAGMENT_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV")]
	public const int GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_PROGRAM_POSITION_MESA")]
	public const int GL_FRAGMENT_PROGRAM_POSITION_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER")]
	public const int GL_FRAGMENT_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_ARB")]
	public const int GL_FRAGMENT_SHADER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_ATI")]
	public const int GL_FRAGMENT_SHADER_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_BIT")]
	public const int GL_FRAGMENT_SHADER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_DERIVATIVE_HINT")]
	public const int GL_FRAGMENT_SHADER_DERIVATIVE_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB")]
	public const int GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES")]
	public const int GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER")]
	public const int GL_FRAMEBUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_LAYERED")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES")]
	public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BARRIER_BIT")]
	public const int GL_FRAMEBUFFER_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BARRIER_BIT_EXT")]
	public const int GL_FRAMEBUFFER_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BINDING")]
	public const int GL_FRAMEBUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BINDING_ANGLE")]
	public const int GL_FRAMEBUFFER_BINDING_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BINDING_EXT")]
	public const int GL_FRAMEBUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_BINDING_OES")]
	public const int GL_FRAMEBUFFER_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_COMPLETE")]
	public const int GL_FRAMEBUFFER_COMPLETE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_COMPLETE_EXT")]
	public const int GL_FRAMEBUFFER_COMPLETE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_COMPLETE_OES")]
	public const int GL_FRAMEBUFFER_COMPLETE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_DEFAULT")]
	public const int GL_FRAMEBUFFER_DEFAULT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_EXT")]
	public const int GL_FRAMEBUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES")]
	public const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_OES")]
	public const int GL_FRAMEBUFFER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_SRGB")]
	public const int GL_FRAMEBUFFER_SRGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT")]
	public const int GL_FRAMEBUFFER_SRGB_CAPABLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_SRGB_EXT")]
	public const int GL_FRAMEBUFFER_SRGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_UNDEFINED")]
	public const int GL_FRAMEBUFFER_UNDEFINED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_UNSUPPORTED")]
	public const int GL_FRAMEBUFFER_UNSUPPORTED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_UNSUPPORTED_EXT")]
	public const int GL_FRAMEBUFFER_UNSUPPORTED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEBUFFER_UNSUPPORTED_OES")]
	public const int GL_FRAMEBUFFER_UNSUPPORTED_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEZOOM_FACTOR_SGIX")]
	public const int GL_FRAMEZOOM_FACTOR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAMEZOOM_SGIX")]
	public const int GL_FRAMEZOOM_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRAME_NV")]
	public const int GL_FRAME_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRONT")]
	public const int GL_FRONT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRONT_AND_BACK")]
	public const int GL_FRONT_AND_BACK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRONT_FACE")]
	public const int GL_FRONT_FACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRONT_LEFT")]
	public const int GL_FRONT_LEFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FRONT_RIGHT")]
	public const int GL_FRONT_RIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FULL_RANGE_EXT")]
	public const int GL_FULL_RANGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_ADD")]
	public const int GL_FUNC_ADD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_ADD_EXT")]
	public const int GL_FUNC_ADD_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_ADD_OES")]
	public const int GL_FUNC_ADD_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_REVERSE_SUBTRACT")]
	public const int GL_FUNC_REVERSE_SUBTRACT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_REVERSE_SUBTRACT_EXT")]
	public const int GL_FUNC_REVERSE_SUBTRACT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_REVERSE_SUBTRACT_OES")]
	public const int GL_FUNC_REVERSE_SUBTRACT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_SUBTRACT")]
	public const int GL_FUNC_SUBTRACT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_SUBTRACT_EXT")]
	public const int GL_FUNC_SUBTRACT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_FUNC_SUBTRACT_OES")]
	public const int GL_FUNC_SUBTRACT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GENERATE_MIPMAP")]
	public const int GL_GENERATE_MIPMAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GENERATE_MIPMAP_HINT")]
	public const int GL_GENERATE_MIPMAP_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GENERATE_MIPMAP_HINT_SGIS")]
	public const int GL_GENERATE_MIPMAP_HINT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GENERATE_MIPMAP_SGIS")]
	public const int GL_GENERATE_MIPMAP_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GENERIC_ATTRIB_NV")]
	public const int GL_GENERIC_ATTRIB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_DEFORMATION_BIT_SGIX")]
	public const int GL_GEOMETRY_DEFORMATION_BIT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_DEFORMATION_SGIX")]
	public const int GL_GEOMETRY_DEFORMATION_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_INPUT_TYPE")]
	public const int GL_GEOMETRY_INPUT_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_INPUT_TYPE_ARB")]
	public const int GL_GEOMETRY_INPUT_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_INPUT_TYPE_EXT")]
	public const int GL_GEOMETRY_INPUT_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_OUTPUT_TYPE")]
	public const int GL_GEOMETRY_OUTPUT_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_OUTPUT_TYPE_ARB")]
	public const int GL_GEOMETRY_OUTPUT_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_OUTPUT_TYPE_EXT")]
	public const int GL_GEOMETRY_OUTPUT_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_PROGRAM_NV")]
	public const int GL_GEOMETRY_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV")]
	public const int GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_SHADER")]
	public const int GL_GEOMETRY_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_SHADER_ARB")]
	public const int GL_GEOMETRY_SHADER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_SHADER_BIT")]
	public const int GL_GEOMETRY_SHADER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_SHADER_EXT")]
	public const int GL_GEOMETRY_SHADER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_SHADER_INVOCATIONS")]
	public const int GL_GEOMETRY_SHADER_INVOCATIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_VERTICES_OUT")]
	public const int GL_GEOMETRY_VERTICES_OUT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_VERTICES_OUT_ARB")]
	public const int GL_GEOMETRY_VERTICES_OUT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEOMETRY_VERTICES_OUT_EXT")]
	public const int GL_GEOMETRY_VERTICES_OUT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GEQUAL")]
	public const int GL_GEQUAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GLOBAL_ALPHA_FACTOR_SUN")]
	public const int GL_GLOBAL_ALPHA_FACTOR_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GLOBAL_ALPHA_SUN")]
	public const int GL_GLOBAL_ALPHA_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GPU_ADDRESS_NV")]
	public const int GL_GPU_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREATER")]
	public const int GL_GREATER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN")]
	public const int GL_GREEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_BIAS")]
	public const int GL_GREEN_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_BITS")]
	public const int GL_GREEN_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_BIT_ATI")]
	public const int GL_GREEN_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_INTEGER")]
	public const int GL_GREEN_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_INTEGER_EXT")]
	public const int GL_GREEN_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_MAX_CLAMP_INGR")]
	public const int GL_GREEN_MAX_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_MIN_CLAMP_INGR")]
	public const int GL_GREEN_MIN_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GREEN_SCALE")]
	public const int GL_GREEN_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_GUILTY_CONTEXT_RESET_ARB")]
	public const int GL_GUILTY_CONTEXT_RESET_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_APPLE")]
	public const int GL_HALF_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_BIAS_NEGATE_NV")]
	public const int GL_HALF_BIAS_NEGATE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_BIAS_NORMAL_NV")]
	public const int GL_HALF_BIAS_NORMAL_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_BIT_ATI")]
	public const int GL_HALF_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_FLOAT")]
	public const int GL_HALF_FLOAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_FLOAT_ARB")]
	public const int GL_HALF_FLOAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_FLOAT_NV")]
	public const int GL_HALF_FLOAT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HALF_FLOAT_OES")]
	public const int GL_HALF_FLOAT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HIGH_FLOAT")]
	public const int GL_HIGH_FLOAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HIGH_INT")]
	public const int GL_HIGH_INT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HILO16_NV")]
	public const int GL_HILO16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HILO8_NV")]
	public const int GL_HILO8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HILO_NV")]
	public const int GL_HILO_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HINT_BIT")]
	public const int GL_HINT_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM")]
	public const int GL_HISTOGRAM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_ALPHA_SIZE")]
	public const int GL_HISTOGRAM_ALPHA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_ALPHA_SIZE_EXT")]
	public const int GL_HISTOGRAM_ALPHA_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_BLUE_SIZE")]
	public const int GL_HISTOGRAM_BLUE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_BLUE_SIZE_EXT")]
	public const int GL_HISTOGRAM_BLUE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_EXT")]
	public const int GL_HISTOGRAM_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_FORMAT")]
	public const int GL_HISTOGRAM_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_FORMAT_EXT")]
	public const int GL_HISTOGRAM_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_GREEN_SIZE")]
	public const int GL_HISTOGRAM_GREEN_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_GREEN_SIZE_EXT")]
	public const int GL_HISTOGRAM_GREEN_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_LUMINANCE_SIZE")]
	public const int GL_HISTOGRAM_LUMINANCE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_LUMINANCE_SIZE_EXT")]
	public const int GL_HISTOGRAM_LUMINANCE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_RED_SIZE")]
	public const int GL_HISTOGRAM_RED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_RED_SIZE_EXT")]
	public const int GL_HISTOGRAM_RED_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_SINK")]
	public const int GL_HISTOGRAM_SINK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_SINK_EXT")]
	public const int GL_HISTOGRAM_SINK_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_WIDTH")]
	public const int GL_HISTOGRAM_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HISTOGRAM_WIDTH_EXT")]
	public const int GL_HISTOGRAM_WIDTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HI_BIAS_NV")]
	public const int GL_HI_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_HI_SCALE_NV")]
	public const int GL_HI_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IDENTITY_NV")]
	public const int GL_IDENTITY_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IGNORE_BORDER_HP")]
	public const int GL_IGNORE_BORDER_HP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_1D")]
	public const int GL_IMAGE_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_1D_ARRAY")]
	public const int GL_IMAGE_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_1D_ARRAY_EXT")]
	public const int GL_IMAGE_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_1D_EXT")]
	public const int GL_IMAGE_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D")]
	public const int GL_IMAGE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_ARRAY")]
	public const int GL_IMAGE_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_ARRAY_EXT")]
	public const int GL_IMAGE_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_EXT")]
	public const int GL_IMAGE_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_MULTISAMPLE")]
	public const int GL_IMAGE_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_MULTISAMPLE_ARRAY")]
	public const int GL_IMAGE_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT")]
	public const int GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_MULTISAMPLE_EXT")]
	public const int GL_IMAGE_2D_MULTISAMPLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_RECT")]
	public const int GL_IMAGE_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_2D_RECT_EXT")]
	public const int GL_IMAGE_2D_RECT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_3D")]
	public const int GL_IMAGE_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_3D_EXT")]
	public const int GL_IMAGE_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_ACCESS")]
	public const int GL_IMAGE_BINDING_ACCESS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_ACCESS_EXT")]
	public const int GL_IMAGE_BINDING_ACCESS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_FORMAT")]
	public const int GL_IMAGE_BINDING_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_FORMAT_EXT")]
	public const int GL_IMAGE_BINDING_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LAYER")]
	public const int GL_IMAGE_BINDING_LAYER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LAYERED")]
	public const int GL_IMAGE_BINDING_LAYERED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LAYERED_EXT")]
	public const int GL_IMAGE_BINDING_LAYERED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LAYER_EXT")]
	public const int GL_IMAGE_BINDING_LAYER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LEVEL")]
	public const int GL_IMAGE_BINDING_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_LEVEL_EXT")]
	public const int GL_IMAGE_BINDING_LEVEL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_NAME")]
	public const int GL_IMAGE_BINDING_NAME;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BINDING_NAME_EXT")]
	public const int GL_IMAGE_BINDING_NAME_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BUFFER")]
	public const int GL_IMAGE_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_BUFFER_EXT")]
	public const int GL_IMAGE_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_CUBE")]
	public const int GL_IMAGE_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_CUBE_EXT")]
	public const int GL_IMAGE_CUBE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_CUBE_MAP_ARRAY")]
	public const int GL_IMAGE_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_CUBE_MAP_ARRAY_EXT")]
	public const int GL_IMAGE_CUBE_MAP_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS")]
	public const int GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE")]
	public const int GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE")]
	public const int GL_IMAGE_FORMAT_COMPATIBILITY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMPLEMENTATION_COLOR_READ_FORMAT")]
	public const int GL_IMPLEMENTATION_COLOR_READ_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES")]
	public const int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMPLEMENTATION_COLOR_READ_TYPE")]
	public const int GL_IMPLEMENTATION_COLOR_READ_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IMPLEMENTATION_COLOR_READ_TYPE_OES")]
	public const int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INCR")]
	public const int GL_INCR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INCR_WRAP")]
	public const int GL_INCR_WRAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INCR_WRAP_EXT")]
	public const int GL_INCR_WRAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INCR_WRAP_OES")]
	public const int GL_INCR_WRAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX")]
	public const int GL_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY")]
	public const int GL_INDEX_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_ADDRESS_NV")]
	public const int GL_INDEX_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_BUFFER_BINDING")]
	public const int GL_INDEX_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_INDEX_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_COUNT_EXT")]
	public const int GL_INDEX_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_EXT")]
	public const int GL_INDEX_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_LENGTH_NV")]
	public const int GL_INDEX_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_POINTER")]
	public const int GL_INDEX_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_POINTER_EXT")]
	public const int GL_INDEX_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_STRIDE")]
	public const int GL_INDEX_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_STRIDE_EXT")]
	public const int GL_INDEX_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_TYPE")]
	public const int GL_INDEX_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_ARRAY_TYPE_EXT")]
	public const int GL_INDEX_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_BITS")]
	public const int GL_INDEX_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_CLEAR_VALUE")]
	public const int GL_INDEX_CLEAR_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_LOGIC_OP")]
	public const int GL_INDEX_LOGIC_OP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_MATERIAL_EXT")]
	public const int GL_INDEX_MATERIAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_MATERIAL_FACE_EXT")]
	public const int GL_INDEX_MATERIAL_FACE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_MATERIAL_PARAMETER_EXT")]
	public const int GL_INDEX_MATERIAL_PARAMETER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_MODE")]
	public const int GL_INDEX_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_OFFSET")]
	public const int GL_INDEX_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_SHIFT")]
	public const int GL_INDEX_SHIFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_TEST_EXT")]
	public const int GL_INDEX_TEST_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_TEST_FUNC_EXT")]
	public const int GL_INDEX_TEST_FUNC_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_TEST_REF_EXT")]
	public const int GL_INDEX_TEST_REF_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INDEX_WRITEMASK")]
	public const int GL_INDEX_WRITEMASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INFO_LOG_LENGTH")]
	public const int GL_INFO_LOG_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INNOCENT_CONTEXT_RESET_ARB")]
	public const int GL_INNOCENT_CONTEXT_RESET_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INSTRUMENT_BUFFER_POINTER_SGIX")]
	public const int GL_INSTRUMENT_BUFFER_POINTER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INSTRUMENT_MEASUREMENTS_SGIX")]
	public const int GL_INSTRUMENT_MEASUREMENTS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT")]
	public const int GL_INT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT16_NV")]
	public const int GL_INT16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT16_VEC2_NV")]
	public const int GL_INT16_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT16_VEC3_NV")]
	public const int GL_INT16_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT16_VEC4_NV")]
	public const int GL_INT16_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT64_NV")]
	public const int GL_INT64_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT64_VEC2_NV")]
	public const int GL_INT64_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT64_VEC3_NV")]
	public const int GL_INT64_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT64_VEC4_NV")]
	public const int GL_INT64_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT8_NV")]
	public const int GL_INT8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT8_VEC2_NV")]
	public const int GL_INT8_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT8_VEC3_NV")]
	public const int GL_INT8_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT8_VEC4_NV")]
	public const int GL_INT8_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY")]
	public const int GL_INTENSITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY12")]
	public const int GL_INTENSITY12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY12_EXT")]
	public const int GL_INTENSITY12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16")]
	public const int GL_INTENSITY16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16F_ARB")]
	public const int GL_INTENSITY16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16I_EXT")]
	public const int GL_INTENSITY16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16UI_EXT")]
	public const int GL_INTENSITY16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16_EXT")]
	public const int GL_INTENSITY16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY16_SNORM")]
	public const int GL_INTENSITY16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY32F_ARB")]
	public const int GL_INTENSITY32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY32I_EXT")]
	public const int GL_INTENSITY32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY32UI_EXT")]
	public const int GL_INTENSITY32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY4")]
	public const int GL_INTENSITY4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY4_EXT")]
	public const int GL_INTENSITY4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY8")]
	public const int GL_INTENSITY8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY8I_EXT")]
	public const int GL_INTENSITY8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY8UI_EXT")]
	public const int GL_INTENSITY8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY8_EXT")]
	public const int GL_INTENSITY8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY8_SNORM")]
	public const int GL_INTENSITY8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_EXT")]
	public const int GL_INTENSITY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_FLOAT16_APPLE")]
	public const int GL_INTENSITY_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_FLOAT16_ATI")]
	public const int GL_INTENSITY_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_FLOAT32_APPLE")]
	public const int GL_INTENSITY_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_FLOAT32_ATI")]
	public const int GL_INTENSITY_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTENSITY_SNORM")]
	public const int GL_INTENSITY_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLACE_OML")]
	public const int GL_INTERLACE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLACE_READ_INGR")]
	public const int GL_INTERLACE_READ_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLACE_READ_OML")]
	public const int GL_INTERLACE_READ_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLACE_SGIX")]
	public const int GL_INTERLACE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLEAVED_ATTRIBS")]
	public const int GL_INTERLEAVED_ATTRIBS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLEAVED_ATTRIBS_EXT")]
	public const int GL_INTERLEAVED_ATTRIBS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERLEAVED_ATTRIBS_NV")]
	public const int GL_INTERLEAVED_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERPOLATE")]
	public const int GL_INTERPOLATE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INTERPOLATE_EXT")]
	public const int GL_INTERPOLATE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_10_10_10_2_OES")]
	public const int GL_INT_10_10_10_2_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_2_10_10_10_REV")]
	public const int GL_INT_2_10_10_10_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_1D")]
	public const int GL_INT_IMAGE_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_1D_ARRAY")]
	public const int GL_INT_IMAGE_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_1D_ARRAY_EXT")]
	public const int GL_INT_IMAGE_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_1D_EXT")]
	public const int GL_INT_IMAGE_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D")]
	public const int GL_INT_IMAGE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_ARRAY")]
	public const int GL_INT_IMAGE_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_ARRAY_EXT")]
	public const int GL_INT_IMAGE_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_EXT")]
	public const int GL_INT_IMAGE_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_MULTISAMPLE")]
	public const int GL_INT_IMAGE_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY")]
	public const int GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT")]
	public const int GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_MULTISAMPLE_EXT")]
	public const int GL_INT_IMAGE_2D_MULTISAMPLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_RECT")]
	public const int GL_INT_IMAGE_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_2D_RECT_EXT")]
	public const int GL_INT_IMAGE_2D_RECT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_3D")]
	public const int GL_INT_IMAGE_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_3D_EXT")]
	public const int GL_INT_IMAGE_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_BUFFER")]
	public const int GL_INT_IMAGE_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_BUFFER_EXT")]
	public const int GL_INT_IMAGE_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_CUBE")]
	public const int GL_INT_IMAGE_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_CUBE_EXT")]
	public const int GL_INT_IMAGE_CUBE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_CUBE_MAP_ARRAY")]
	public const int GL_INT_IMAGE_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT")]
	public const int GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_1D")]
	public const int GL_INT_SAMPLER_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_1D_ARRAY")]
	public const int GL_INT_SAMPLER_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_1D_ARRAY_EXT")]
	public const int GL_INT_SAMPLER_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_1D_EXT")]
	public const int GL_INT_SAMPLER_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D")]
	public const int GL_INT_SAMPLER_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_ARRAY")]
	public const int GL_INT_SAMPLER_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_ARRAY_EXT")]
	public const int GL_INT_SAMPLER_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_EXT")]
	public const int GL_INT_SAMPLER_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_MULTISAMPLE")]
	public const int GL_INT_SAMPLER_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY")]
	public const int GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_RECT")]
	public const int GL_INT_SAMPLER_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_2D_RECT_EXT")]
	public const int GL_INT_SAMPLER_2D_RECT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_3D")]
	public const int GL_INT_SAMPLER_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_3D_EXT")]
	public const int GL_INT_SAMPLER_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_BUFFER")]
	public const int GL_INT_SAMPLER_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_BUFFER_AMD")]
	public const int GL_INT_SAMPLER_BUFFER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_BUFFER_EXT")]
	public const int GL_INT_SAMPLER_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_CUBE")]
	public const int GL_INT_SAMPLER_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_CUBE_EXT")]
	public const int GL_INT_SAMPLER_CUBE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_CUBE_MAP_ARRAY")]
	public const int GL_INT_SAMPLER_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_SAMPLER_RENDERBUFFER_NV")]
	public const int GL_INT_SAMPLER_RENDERBUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC2")]
	public const int GL_INT_VEC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC2_ARB")]
	public const int GL_INT_VEC2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC3")]
	public const int GL_INT_VEC3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC3_ARB")]
	public const int GL_INT_VEC3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC4")]
	public const int GL_INT_VEC4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INT_VEC4_ARB")]
	public const int GL_INT_VEC4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_ENUM")]
	public const int GL_INVALID_ENUM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_FRAMEBUFFER_OPERATION")]
	public const int GL_INVALID_FRAMEBUFFER_OPERATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_FRAMEBUFFER_OPERATION_EXT")]
	public const int GL_INVALID_FRAMEBUFFER_OPERATION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_FRAMEBUFFER_OPERATION_OES")]
	public const int GL_INVALID_FRAMEBUFFER_OPERATION_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_INDEX")]
	public const int GL_INVALID_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_OPERATION")]
	public const int GL_INVALID_OPERATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVALID_VALUE")]
	public const int GL_INVALID_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVARIANT_DATATYPE_EXT")]
	public const int GL_INVARIANT_DATATYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVARIANT_EXT")]
	public const int GL_INVARIANT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVARIANT_VALUE_EXT")]
	public const int GL_INVARIANT_VALUE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVERSE_NV")]
	public const int GL_INVERSE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVERSE_TRANSPOSE_NV")]
	public const int GL_INVERSE_TRANSPOSE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVERT")]
	public const int GL_INVERT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_INVERTED_SCREEN_W_REND")]
	public const int GL_INVERTED_SCREEN_W_REND;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IR_INSTRUMENT1_SGIX")]
	public const int GL_IR_INSTRUMENT1_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ISOLINES")]
	public const int GL_ISOLINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IUI_N3F_V2F_EXT")]
	public const int GL_IUI_N3F_V2F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IUI_N3F_V3F_EXT")]
	public const int GL_IUI_N3F_V3F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IUI_V2F_EXT")]
	public const int GL_IUI_V2F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_IUI_V3F_EXT")]
	public const int GL_IUI_V3F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_KEEP")]
	public const int GL_KEEP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LAST_VERTEX_CONVENTION")]
	public const int GL_LAST_VERTEX_CONVENTION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LAST_VERTEX_CONVENTION_EXT")]
	public const int GL_LAST_VERTEX_CONVENTION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LAST_VIDEO_CAPTURE_STATUS_NV")]
	public const int GL_LAST_VIDEO_CAPTURE_STATUS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LAYER_NV")]
	public const int GL_LAYER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LAYER_PROVOKING_VERTEX")]
	public const int GL_LAYER_PROVOKING_VERTEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LEFT")]
	public const int GL_LEFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LEQUAL")]
	public const int GL_LEQUAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LERP_ATI")]
	public const int GL_LERP_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LESS")]
	public const int GL_LESS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT0")]
	public const int GL_LIGHT0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT1")]
	public const int GL_LIGHT1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT2")]
	public const int GL_LIGHT2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT3")]
	public const int GL_LIGHT3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT4")]
	public const int GL_LIGHT4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT5")]
	public const int GL_LIGHT5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT6")]
	public const int GL_LIGHT6;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT7")]
	public const int GL_LIGHT7;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHTING")]
	public const int GL_LIGHTING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHTING_BIT")]
	public const int GL_LIGHTING_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_ENV_MODE_SGIX")]
	public const int GL_LIGHT_ENV_MODE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_AMBIENT")]
	public const int GL_LIGHT_MODEL_AMBIENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_COLOR_CONTROL")]
	public const int GL_LIGHT_MODEL_COLOR_CONTROL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_COLOR_CONTROL_EXT")]
	public const int GL_LIGHT_MODEL_COLOR_CONTROL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_LOCAL_VIEWER")]
	public const int GL_LIGHT_MODEL_LOCAL_VIEWER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE")]
	public const int GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIGHT_MODEL_TWO_SIDE")]
	public const int GL_LIGHT_MODEL_TWO_SIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE")]
	public const int GL_LINE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR")]
	public const int GL_LINEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_ATTENUATION")]
	public const int GL_LINEAR_ATTENUATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_CLIPMAP_LINEAR_SGIX")]
	public const int GL_LINEAR_CLIPMAP_LINEAR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_CLIPMAP_NEAREST_SGIX")]
	public const int GL_LINEAR_CLIPMAP_NEAREST_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_DETAIL_ALPHA_SGIS")]
	public const int GL_LINEAR_DETAIL_ALPHA_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_DETAIL_COLOR_SGIS")]
	public const int GL_LINEAR_DETAIL_COLOR_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_DETAIL_SGIS")]
	public const int GL_LINEAR_DETAIL_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_MIPMAP_LINEAR")]
	public const int GL_LINEAR_MIPMAP_LINEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_MIPMAP_NEAREST")]
	public const int GL_LINEAR_MIPMAP_NEAREST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_SHARPEN_ALPHA_SGIS")]
	public const int GL_LINEAR_SHARPEN_ALPHA_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_SHARPEN_COLOR_SGIS")]
	public const int GL_LINEAR_SHARPEN_COLOR_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINEAR_SHARPEN_SGIS")]
	public const int GL_LINEAR_SHARPEN_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINES")]
	public const int GL_LINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINES_ADJACENCY")]
	public const int GL_LINES_ADJACENCY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINES_ADJACENCY_ARB")]
	public const int GL_LINES_ADJACENCY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINES_ADJACENCY_EXT")]
	public const int GL_LINES_ADJACENCY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_BIT")]
	public const int GL_LINE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_LOOP")]
	public const int GL_LINE_LOOP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_QUALITY_HINT_SGIX")]
	public const int GL_LINE_QUALITY_HINT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_RESET_TOKEN")]
	public const int GL_LINE_RESET_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_SMOOTH")]
	public const int GL_LINE_SMOOTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_SMOOTH_HINT")]
	public const int GL_LINE_SMOOTH_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STIPPLE")]
	public const int GL_LINE_STIPPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STIPPLE_PATTERN")]
	public const int GL_LINE_STIPPLE_PATTERN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STIPPLE_REPEAT")]
	public const int GL_LINE_STIPPLE_REPEAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STRIP")]
	public const int GL_LINE_STRIP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STRIP_ADJACENCY")]
	public const int GL_LINE_STRIP_ADJACENCY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STRIP_ADJACENCY_ARB")]
	public const int GL_LINE_STRIP_ADJACENCY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_STRIP_ADJACENCY_EXT")]
	public const int GL_LINE_STRIP_ADJACENCY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_TOKEN")]
	public const int GL_LINE_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_WIDTH")]
	public const int GL_LINE_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_WIDTH_GRANULARITY")]
	public const int GL_LINE_WIDTH_GRANULARITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINE_WIDTH_RANGE")]
	public const int GL_LINE_WIDTH_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LINK_STATUS")]
	public const int GL_LINK_STATUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIST_BASE")]
	public const int GL_LIST_BASE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIST_BIT")]
	public const int GL_LIST_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIST_INDEX")]
	public const int GL_LIST_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIST_MODE")]
	public const int GL_LIST_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LIST_PRIORITY_SGIX")]
	public const int GL_LIST_PRIORITY_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOAD")]
	public const int GL_LOAD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOCAL_CONSTANT_DATATYPE_EXT")]
	public const int GL_LOCAL_CONSTANT_DATATYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOCAL_CONSTANT_EXT")]
	public const int GL_LOCAL_CONSTANT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOCAL_CONSTANT_VALUE_EXT")]
	public const int GL_LOCAL_CONSTANT_VALUE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOCAL_EXT")]
	public const int GL_LOCAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOGIC_OP")]
	public const int GL_LOGIC_OP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOGIC_OP_MODE")]
	public const int GL_LOGIC_OP_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOSE_CONTEXT_ON_RESET_ARB")]
	public const int GL_LOSE_CONTEXT_ON_RESET_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOWER_LEFT")]
	public const int GL_LOWER_LEFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOW_FLOAT")]
	public const int GL_LOW_FLOAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LOW_INT")]
	public const int GL_LOW_INT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LO_BIAS_NV")]
	public const int GL_LO_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LO_SCALE_NV")]
	public const int GL_LO_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE")]
	public const int GL_LUMINANCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12")]
	public const int GL_LUMINANCE12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12_ALPHA12")]
	public const int GL_LUMINANCE12_ALPHA12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12_ALPHA12_EXT")]
	public const int GL_LUMINANCE12_ALPHA12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12_ALPHA4")]
	public const int GL_LUMINANCE12_ALPHA4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12_ALPHA4_EXT")]
	public const int GL_LUMINANCE12_ALPHA4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE12_EXT")]
	public const int GL_LUMINANCE12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16")]
	public const int GL_LUMINANCE16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16F_ARB")]
	public const int GL_LUMINANCE16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16I_EXT")]
	public const int GL_LUMINANCE16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16UI_EXT")]
	public const int GL_LUMINANCE16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16_ALPHA16")]
	public const int GL_LUMINANCE16_ALPHA16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16_ALPHA16_EXT")]
	public const int GL_LUMINANCE16_ALPHA16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16_ALPHA16_SNORM")]
	public const int GL_LUMINANCE16_ALPHA16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16_EXT")]
	public const int GL_LUMINANCE16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE16_SNORM")]
	public const int GL_LUMINANCE16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE32F_ARB")]
	public const int GL_LUMINANCE32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE32I_EXT")]
	public const int GL_LUMINANCE32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE32UI_EXT")]
	public const int GL_LUMINANCE32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE4")]
	public const int GL_LUMINANCE4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE4_ALPHA4")]
	public const int GL_LUMINANCE4_ALPHA4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE4_ALPHA4_EXT")]
	public const int GL_LUMINANCE4_ALPHA4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE4_EXT")]
	public const int GL_LUMINANCE4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE6_ALPHA2")]
	public const int GL_LUMINANCE6_ALPHA2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE6_ALPHA2_EXT")]
	public const int GL_LUMINANCE6_ALPHA2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8")]
	public const int GL_LUMINANCE8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8I_EXT")]
	public const int GL_LUMINANCE8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8UI_EXT")]
	public const int GL_LUMINANCE8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8_ALPHA8")]
	public const int GL_LUMINANCE8_ALPHA8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8_ALPHA8_EXT")]
	public const int GL_LUMINANCE8_ALPHA8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8_ALPHA8_SNORM")]
	public const int GL_LUMINANCE8_ALPHA8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8_EXT")]
	public const int GL_LUMINANCE8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE8_SNORM")]
	public const int GL_LUMINANCE8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA")]
	public const int GL_LUMINANCE_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA16F_ARB")]
	public const int GL_LUMINANCE_ALPHA16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA16I_EXT")]
	public const int GL_LUMINANCE_ALPHA16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA16UI_EXT")]
	public const int GL_LUMINANCE_ALPHA16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA32F_ARB")]
	public const int GL_LUMINANCE_ALPHA32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA32I_EXT")]
	public const int GL_LUMINANCE_ALPHA32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA32UI_EXT")]
	public const int GL_LUMINANCE_ALPHA32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA8I_EXT")]
	public const int GL_LUMINANCE_ALPHA8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA8UI_EXT")]
	public const int GL_LUMINANCE_ALPHA8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_FLOAT16_APPLE")]
	public const int GL_LUMINANCE_ALPHA_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_FLOAT16_ATI")]
	public const int GL_LUMINANCE_ALPHA_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_FLOAT32_APPLE")]
	public const int GL_LUMINANCE_ALPHA_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_FLOAT32_ATI")]
	public const int GL_LUMINANCE_ALPHA_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_INTEGER_EXT")]
	public const int GL_LUMINANCE_ALPHA_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_ALPHA_SNORM")]
	public const int GL_LUMINANCE_ALPHA_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_FLOAT16_APPLE")]
	public const int GL_LUMINANCE_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_FLOAT16_ATI")]
	public const int GL_LUMINANCE_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_FLOAT32_APPLE")]
	public const int GL_LUMINANCE_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_FLOAT32_ATI")]
	public const int GL_LUMINANCE_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_INTEGER_EXT")]
	public const int GL_LUMINANCE_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_LUMINANCE_SNORM")]
	public const int GL_LUMINANCE_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAD_ATI")]
	public const int GL_MAD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAGNITUDE_BIAS_NV")]
	public const int GL_MAGNITUDE_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAGNITUDE_SCALE_NV")]
	public const int GL_MAGNITUDE_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAJOR_VERSION")]
	public const int GL_MAJOR_VERSION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MALI_SHADER_BINARY_ARM")]
	public const int GL_MALI_SHADER_BINARY_ARM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_COLOR_4")]
	public const int GL_MAP1_COLOR_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_GRID_DOMAIN")]
	public const int GL_MAP1_GRID_DOMAIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_GRID_SEGMENTS")]
	public const int GL_MAP1_GRID_SEGMENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_INDEX")]
	public const int GL_MAP1_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_NORMAL")]
	public const int GL_MAP1_NORMAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_TEXTURE_COORD_1")]
	public const int GL_MAP1_TEXTURE_COORD_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_TEXTURE_COORD_2")]
	public const int GL_MAP1_TEXTURE_COORD_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_TEXTURE_COORD_3")]
	public const int GL_MAP1_TEXTURE_COORD_3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_TEXTURE_COORD_4")]
	public const int GL_MAP1_TEXTURE_COORD_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_3")]
	public const int GL_MAP1_VERTEX_3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_4")]
	public const int GL_MAP1_VERTEX_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB0_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB0_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB10_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB10_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB11_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB11_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB12_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB12_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB13_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB13_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB14_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB14_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB15_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB15_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB1_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB1_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB2_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB2_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB3_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB3_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB4_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB4_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB5_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB5_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB6_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB6_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB7_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB7_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB8_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB8_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP1_VERTEX_ATTRIB9_4_NV")]
	public const int GL_MAP1_VERTEX_ATTRIB9_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_COLOR_4")]
	public const int GL_MAP2_COLOR_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_GRID_DOMAIN")]
	public const int GL_MAP2_GRID_DOMAIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_GRID_SEGMENTS")]
	public const int GL_MAP2_GRID_SEGMENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_INDEX")]
	public const int GL_MAP2_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_NORMAL")]
	public const int GL_MAP2_NORMAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_TEXTURE_COORD_1")]
	public const int GL_MAP2_TEXTURE_COORD_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_TEXTURE_COORD_2")]
	public const int GL_MAP2_TEXTURE_COORD_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_TEXTURE_COORD_3")]
	public const int GL_MAP2_TEXTURE_COORD_3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_TEXTURE_COORD_4")]
	public const int GL_MAP2_TEXTURE_COORD_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_3")]
	public const int GL_MAP2_VERTEX_3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_4")]
	public const int GL_MAP2_VERTEX_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB0_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB0_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB10_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB10_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB11_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB11_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB12_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB12_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB13_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB13_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB14_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB14_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB15_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB15_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB1_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB1_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB2_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB2_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB3_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB3_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB4_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB4_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB5_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB5_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB6_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB6_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB7_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB7_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB8_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB8_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP2_VERTEX_ATTRIB9_4_NV")]
	public const int GL_MAP2_VERTEX_ATTRIB9_4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_ATTRIB_U_ORDER_NV")]
	public const int GL_MAP_ATTRIB_U_ORDER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_ATTRIB_V_ORDER_NV")]
	public const int GL_MAP_ATTRIB_V_ORDER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_COLOR")]
	public const int GL_MAP_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_FLUSH_EXPLICIT_BIT")]
	public const int GL_MAP_FLUSH_EXPLICIT_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_INVALIDATE_BUFFER_BIT")]
	public const int GL_MAP_INVALIDATE_BUFFER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_INVALIDATE_RANGE_BIT")]
	public const int GL_MAP_INVALIDATE_RANGE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_READ_BIT")]
	public const int GL_MAP_READ_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_STENCIL")]
	public const int GL_MAP_STENCIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_TESSELLATION_NV")]
	public const int GL_MAP_TESSELLATION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_UNSYNCHRONIZED_BIT")]
	public const int GL_MAP_UNSYNCHRONIZED_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAP_WRITE_BIT")]
	public const int GL_MAP_WRITE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX0_ARB")]
	public const int GL_MATRIX0_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX0_NV")]
	public const int GL_MATRIX0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX10_ARB")]
	public const int GL_MATRIX10_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX11_ARB")]
	public const int GL_MATRIX11_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX12_ARB")]
	public const int GL_MATRIX12_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX13_ARB")]
	public const int GL_MATRIX13_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX14_ARB")]
	public const int GL_MATRIX14_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX15_ARB")]
	public const int GL_MATRIX15_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX16_ARB")]
	public const int GL_MATRIX16_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX17_ARB")]
	public const int GL_MATRIX17_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX18_ARB")]
	public const int GL_MATRIX18_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX19_ARB")]
	public const int GL_MATRIX19_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX1_ARB")]
	public const int GL_MATRIX1_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX1_NV")]
	public const int GL_MATRIX1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX20_ARB")]
	public const int GL_MATRIX20_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX21_ARB")]
	public const int GL_MATRIX21_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX22_ARB")]
	public const int GL_MATRIX22_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX23_ARB")]
	public const int GL_MATRIX23_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX24_ARB")]
	public const int GL_MATRIX24_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX25_ARB")]
	public const int GL_MATRIX25_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX26_ARB")]
	public const int GL_MATRIX26_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX27_ARB")]
	public const int GL_MATRIX27_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX28_ARB")]
	public const int GL_MATRIX28_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX29_ARB")]
	public const int GL_MATRIX29_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX2_ARB")]
	public const int GL_MATRIX2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX2_NV")]
	public const int GL_MATRIX2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX30_ARB")]
	public const int GL_MATRIX30_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX31_ARB")]
	public const int GL_MATRIX31_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX3_ARB")]
	public const int GL_MATRIX3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX3_NV")]
	public const int GL_MATRIX3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX4_ARB")]
	public const int GL_MATRIX4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX4_NV")]
	public const int GL_MATRIX4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX5_ARB")]
	public const int GL_MATRIX5_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX5_NV")]
	public const int GL_MATRIX5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX6_ARB")]
	public const int GL_MATRIX6_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX6_NV")]
	public const int GL_MATRIX6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX7_ARB")]
	public const int GL_MATRIX7_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX7_NV")]
	public const int GL_MATRIX7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX8_ARB")]
	public const int GL_MATRIX8_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX9_ARB")]
	public const int GL_MATRIX9_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_EXT")]
	public const int GL_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_ARB")]
	public const int GL_MATRIX_INDEX_ARRAY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_POINTER_ARB")]
	public const int GL_MATRIX_INDEX_ARRAY_POINTER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_POINTER_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_POINTER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_SIZE_ARB")]
	public const int GL_MATRIX_INDEX_ARRAY_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_SIZE_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB")]
	public const int GL_MATRIX_INDEX_ARRAY_STRIDE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_STRIDE_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_STRIDE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_TYPE_ARB")]
	public const int GL_MATRIX_INDEX_ARRAY_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_INDEX_ARRAY_TYPE_OES")]
	public const int GL_MATRIX_INDEX_ARRAY_TYPE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_MODE")]
	public const int GL_MATRIX_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_PALETTE_ARB")]
	public const int GL_MATRIX_PALETTE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MATRIX_PALETTE_OES")]
	public const int GL_MATRIX_PALETTE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX")]
	public const int GL_MAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_3D_TEXTURE_SIZE")]
	public const int GL_MAX_3D_TEXTURE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_3D_TEXTURE_SIZE_EXT")]
	public const int GL_MAX_3D_TEXTURE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_3D_TEXTURE_SIZE_OES")]
	public const int GL_MAX_3D_TEXTURE_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_4D_TEXTURE_SIZE_SGIS")]
	public const int GL_MAX_4D_TEXTURE_SIZE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ACTIVE_LIGHTS_SGIX")]
	public const int GL_MAX_ACTIVE_LIGHTS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ARRAY_TEXTURE_LAYERS")]
	public const int GL_MAX_ARRAY_TEXTURE_LAYERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT")]
	public const int GL_MAX_ARRAY_TEXTURE_LAYERS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ASYNC_DRAW_PIXELS_SGIX")]
	public const int GL_MAX_ASYNC_DRAW_PIXELS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ASYNC_HISTOGRAM_SGIX")]
	public const int GL_MAX_ASYNC_HISTOGRAM_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ASYNC_READ_PIXELS_SGIX")]
	public const int GL_MAX_ASYNC_READ_PIXELS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ASYNC_TEX_IMAGE_SGIX")]
	public const int GL_MAX_ASYNC_TEX_IMAGE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS")]
	public const int GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE")]
	public const int GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ATTRIB_STACK_DEPTH")]
	public const int GL_MAX_ATTRIB_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT")]
	public const int GL_MAX_BINDABLE_UNIFORM_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH")]
	public const int GL_MAX_CLIENT_ATTRIB_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CLIPMAP_DEPTH_SGIX")]
	public const int GL_MAX_CLIPMAP_DEPTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX")]
	public const int GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CLIP_DISTANCES")]
	public const int GL_MAX_CLIP_DISTANCES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CLIP_PLANES")]
	public const int GL_MAX_CLIP_PLANES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_ATTACHMENTS")]
	public const int GL_MAX_COLOR_ATTACHMENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_ATTACHMENTS_EXT")]
	public const int GL_MAX_COLOR_ATTACHMENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_ATTACHMENTS_NV")]
	public const int GL_MAX_COLOR_ATTACHMENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_MATRIX_STACK_DEPTH")]
	public const int GL_MAX_COLOR_MATRIX_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI")]
	public const int GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COLOR_TEXTURE_SAMPLES")]
	public const int GL_MAX_COLOR_TEXTURE_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_ATOMIC_COUNTERS")]
	public const int GL_MAX_COMBINED_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS")]
	public const int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS")]
	public const int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_IMAGE_UNIFORMS")]
	public const int GL_MAX_COMBINED_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS")]
	public const int GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT")]
	public const int GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS")]
	public const int GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS")]
	public const int GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB")]
	public const int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_UNIFORM_BLOCKS")]
	public const int GL_MAX_COMBINED_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS")]
	public const int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CONVOLUTION_HEIGHT")]
	public const int GL_MAX_CONVOLUTION_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CONVOLUTION_HEIGHT_EXT")]
	public const int GL_MAX_CONVOLUTION_HEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CONVOLUTION_WIDTH")]
	public const int GL_MAX_CONVOLUTION_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CONVOLUTION_WIDTH_EXT")]
	public const int GL_MAX_CONVOLUTION_WIDTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CUBE_MAP_TEXTURE_SIZE")]
	public const int GL_MAX_CUBE_MAP_TEXTURE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB")]
	public const int GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT")]
	public const int GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES")]
	public const int GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DEBUG_LOGGED_MESSAGES_AMD")]
	public const int GL_MAX_DEBUG_LOGGED_MESSAGES_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DEBUG_LOGGED_MESSAGES_ARB")]
	public const int GL_MAX_DEBUG_LOGGED_MESSAGES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DEBUG_MESSAGE_LENGTH_ARB")]
	public const int GL_MAX_DEBUG_MESSAGE_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DEFORMATION_ORDER_SGIX")]
	public const int GL_MAX_DEFORMATION_ORDER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DEPTH_TEXTURE_SAMPLES")]
	public const int GL_MAX_DEPTH_TEXTURE_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DRAW_BUFFERS")]
	public const int GL_MAX_DRAW_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DRAW_BUFFERS_ARB")]
	public const int GL_MAX_DRAW_BUFFERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DRAW_BUFFERS_ATI")]
	public const int GL_MAX_DRAW_BUFFERS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DRAW_BUFFERS_NV")]
	public const int GL_MAX_DRAW_BUFFERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS")]
	public const int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ELEMENTS_INDICES")]
	public const int GL_MAX_ELEMENTS_INDICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_ELEMENTS_VERTICES")]
	public const int GL_MAX_ELEMENTS_VERTICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_EVAL_ORDER")]
	public const int GL_MAX_EVAL_ORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_EXT")]
	public const int GL_MAX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FOG_FUNC_POINTS_SGIS")]
	public const int GL_MAX_FOG_FUNC_POINTS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_ATOMIC_COUNTERS")]
	public const int GL_MAX_FRAGMENT_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT")]
	public const int GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_IMAGE_UNIFORMS")]
	public const int GL_MAX_FRAGMENT_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_INPUT_COMPONENTS")]
	public const int GL_MAX_FRAGMENT_INPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET")]
	public const int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV")]
	public const int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_LIGHTS_SGIX")]
	public const int GL_MAX_FRAGMENT_LIGHTS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV")]
	public const int GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_UNIFORM_BLOCKS")]
	public const int GL_MAX_FRAGMENT_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS")]
	public const int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB")]
	public const int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAGMENT_UNIFORM_VECTORS")]
	public const int GL_MAX_FRAGMENT_UNIFORM_VECTORS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_FRAMEZOOM_FACTOR_SGIX")]
	public const int GL_MAX_FRAMEZOOM_FACTOR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GENERAL_COMBINERS_NV")]
	public const int GL_MAX_GENERAL_COMBINERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_ATOMIC_COUNTERS")]
	public const int GL_MAX_GEOMETRY_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT")]
	public const int GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_IMAGE_UNIFORMS")]
	public const int GL_MAX_GEOMETRY_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_INPUT_COMPONENTS")]
	public const int GL_MAX_GEOMETRY_INPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS")]
	public const int GL_MAX_GEOMETRY_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_OUTPUT_VERTICES")]
	public const int GL_MAX_GEOMETRY_OUTPUT_VERTICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB")]
	public const int GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT")]
	public const int GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV")]
	public const int GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_SHADER_INVOCATIONS")]
	public const int GL_MAX_GEOMETRY_SHADER_INVOCATIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB")]
	public const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT")]
	public const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS")]
	public const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB")]
	public const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT")]
	public const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_UNIFORM_BLOCKS")]
	public const int GL_MAX_GEOMETRY_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS")]
	public const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB")]
	public const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT")]
	public const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB")]
	public const int GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT")]
	public const int GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_IMAGE_SAMPLES")]
	public const int GL_MAX_IMAGE_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_IMAGE_SAMPLES_EXT")]
	public const int GL_MAX_IMAGE_SAMPLES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_IMAGE_UNITS")]
	public const int GL_MAX_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_IMAGE_UNITS_EXT")]
	public const int GL_MAX_IMAGE_UNITS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_INTEGER_SAMPLES")]
	public const int GL_MAX_INTEGER_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_LIGHTS")]
	public const int GL_MAX_LIGHTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_LIST_NESTING")]
	public const int GL_MAX_LIST_NESTING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_MAP_TESSELLATION_NV")]
	public const int GL_MAX_MAP_TESSELLATION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB")]
	public const int GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_MODELVIEW_STACK_DEPTH")]
	public const int GL_MAX_MODELVIEW_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV")]
	public const int GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_NAME_STACK_DEPTH")]
	public const int GL_MAX_NAME_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT")]
	public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT")]
	public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT")]
	public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT")]
	public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT")]
	public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PALETTE_MATRICES_ARB")]
	public const int GL_MAX_PALETTE_MATRICES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PALETTE_MATRICES_OES")]
	public const int GL_MAX_PALETTE_MATRICES_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PATCH_VERTICES")]
	public const int GL_MAX_PATCH_VERTICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PIXEL_MAP_TABLE")]
	public const int GL_MAX_PIXEL_MAP_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT")]
	public const int GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI")]
	public const int GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB")]
	public const int GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_ATTRIBS_ARB")]
	public const int GL_MAX_PROGRAM_ATTRIBS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV")]
	public const int GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_CALL_DEPTH_NV")]
	public const int GL_MAX_PROGRAM_CALL_DEPTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB")]
	public const int GL_MAX_PROGRAM_ENV_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV")]
	public const int GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV")]
	public const int GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_GENERIC_RESULTS_NV")]
	public const int GL_MAX_PROGRAM_GENERIC_RESULTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_IF_DEPTH_NV")]
	public const int GL_MAX_PROGRAM_IF_DEPTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB")]
	public const int GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_LOOP_COUNT_NV")]
	public const int GL_MAX_PROGRAM_LOOP_COUNT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_LOOP_DEPTH_NV")]
	public const int GL_MAX_PROGRAM_LOOP_DEPTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_MATRICES_ARB")]
	public const int GL_MAX_PROGRAM_MATRICES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB")]
	public const int GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV")]
	public const int GL_MAX_PROGRAM_OUTPUT_VERTICES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_PARAMETERS_ARB")]
	public const int GL_MAX_PROGRAM_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV")]
	public const int GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV")]
	public const int GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV")]
	public const int GL_MAX_PROGRAM_PATCH_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV")]
	public const int GL_MAX_PROGRAM_RESULT_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_SUBROUTINE_NUM_NV")]
	public const int GL_MAX_PROGRAM_SUBROUTINE_NUM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV")]
	public const int GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEMPORARIES_ARB")]
	public const int GL_MAX_PROGRAM_TEMPORARIES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEXEL_OFFSET")]
	public const int GL_MAX_PROGRAM_TEXEL_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEXEL_OFFSET_NV")]
	public const int GL_MAX_PROGRAM_TEXEL_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS")]
	public const int GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET")]
	public const int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV")]
	public const int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB")]
	public const int GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB")]
	public const int GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV")]
	public const int GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_PROJECTION_STACK_DEPTH")]
	public const int GL_MAX_PROJECTION_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RATIONAL_EVAL_ORDER_NV")]
	public const int GL_MAX_RATIONAL_EVAL_ORDER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RECTANGLE_TEXTURE_SIZE")]
	public const int GL_MAX_RECTANGLE_TEXTURE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB")]
	public const int GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RECTANGLE_TEXTURE_SIZE_NV")]
	public const int GL_MAX_RECTANGLE_TEXTURE_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RENDERBUFFER_SIZE")]
	public const int GL_MAX_RENDERBUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RENDERBUFFER_SIZE_EXT")]
	public const int GL_MAX_RENDERBUFFER_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_RENDERBUFFER_SIZE_OES")]
	public const int GL_MAX_RENDERBUFFER_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLES")]
	public const int GL_MAX_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLES_ANGLE")]
	public const int GL_MAX_SAMPLES_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLES_EXT")]
	public const int GL_MAX_SAMPLES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLES_IMG")]
	public const int GL_MAX_SAMPLES_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLE_MASK_WORDS")]
	public const int GL_MAX_SAMPLE_MASK_WORDS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SAMPLE_MASK_WORDS_NV")]
	public const int GL_MAX_SAMPLE_MASK_WORDS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SERVER_WAIT_TIMEOUT")]
	public const int GL_MAX_SERVER_WAIT_TIMEOUT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SHADER_BUFFER_ADDRESS_NV")]
	public const int GL_MAX_SHADER_BUFFER_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SHININESS_NV")]
	public const int GL_MAX_SHININESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SPOT_EXPONENT_NV")]
	public const int GL_MAX_SPOT_EXPONENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SUBROUTINES")]
	public const int GL_MAX_SUBROUTINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS")]
	public const int GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS")]
	public const int GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS")]
	public const int GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS")]
	public const int GL_MAX_TESS_CONTROL_INPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS")]
	public const int GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS")]
	public const int GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS")]
	public const int GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS")]
	public const int GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS")]
	public const int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS")]
	public const int GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS")]
	public const int GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS")]
	public const int GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS")]
	public const int GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS")]
	public const int GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_GEN_LEVEL")]
	public const int GL_MAX_TESS_GEN_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TESS_PATCH_COMPONENTS")]
	public const int GL_MAX_TESS_PATCH_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_BUFFER_SIZE")]
	public const int GL_MAX_TEXTURE_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_BUFFER_SIZE_ARB")]
	public const int GL_MAX_TEXTURE_BUFFER_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_BUFFER_SIZE_EXT")]
	public const int GL_MAX_TEXTURE_BUFFER_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_COORDS")]
	public const int GL_MAX_TEXTURE_COORDS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_COORDS_ARB")]
	public const int GL_MAX_TEXTURE_COORDS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_COORDS_NV")]
	public const int GL_MAX_TEXTURE_COORDS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_IMAGE_UNITS_ARB")]
	public const int GL_MAX_TEXTURE_IMAGE_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_IMAGE_UNITS_NV")]
	public const int GL_MAX_TEXTURE_IMAGE_UNITS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_LOD_BIAS")]
	public const int GL_MAX_TEXTURE_LOD_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_LOD_BIAS_EXT")]
	public const int GL_MAX_TEXTURE_LOD_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT")]
	public const int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_SIZE")]
	public const int GL_MAX_TEXTURE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_STACK_DEPTH")]
	public const int GL_MAX_TEXTURE_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_UNITS")]
	public const int GL_MAX_TEXTURE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TEXTURE_UNITS_ARB")]
	public const int GL_MAX_TEXTURE_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRACK_MATRICES_NV")]
	public const int GL_MAX_TRACK_MATRICES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV")]
	public const int GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV")]
	public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_UNIFORM_BLOCK_SIZE")]
	public const int GL_MAX_UNIFORM_BLOCK_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_UNIFORM_BUFFER_BINDINGS")]
	public const int GL_MAX_UNIFORM_BUFFER_BINDINGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VARYING_COMPONENTS")]
	public const int GL_MAX_VARYING_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VARYING_COMPONENTS_EXT")]
	public const int GL_MAX_VARYING_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VARYING_FLOATS")]
	public const int GL_MAX_VARYING_FLOATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VARYING_FLOATS_ARB")]
	public const int GL_MAX_VARYING_FLOATS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VARYING_VECTORS")]
	public const int GL_MAX_VARYING_VECTORS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV")]
	public const int GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_ATOMIC_COUNTERS")]
	public const int GL_MAX_VERTEX_ATOMIC_COUNTERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS")]
	public const int GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_ATTRIBS")]
	public const int GL_MAX_VERTEX_ATTRIBS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_ATTRIBS_ARB")]
	public const int GL_MAX_VERTEX_ATTRIBS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT")]
	public const int GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_IMAGE_UNIFORMS")]
	public const int GL_MAX_VERTEX_IMAGE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_OUTPUT_COMPONENTS")]
	public const int GL_MAX_VERTEX_OUTPUT_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT")]
	public const int GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT")]
	public const int GL_MAX_VERTEX_SHADER_INVARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_SHADER_LOCALS_EXT")]
	public const int GL_MAX_VERTEX_SHADER_LOCALS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT")]
	public const int GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_SHADER_VARIANTS_EXT")]
	public const int GL_MAX_VERTEX_SHADER_VARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_STREAMS")]
	public const int GL_MAX_VERTEX_STREAMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_STREAMS_ATI")]
	public const int GL_MAX_VERTEX_STREAMS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS")]
	public const int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB")]
	public const int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNIFORM_BLOCKS")]
	public const int GL_MAX_VERTEX_UNIFORM_BLOCKS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNIFORM_COMPONENTS")]
	public const int GL_MAX_VERTEX_UNIFORM_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB")]
	public const int GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNIFORM_VECTORS")]
	public const int GL_MAX_VERTEX_UNIFORM_VECTORS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNITS_ARB")]
	public const int GL_MAX_VERTEX_UNITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_UNITS_OES")]
	public const int GL_MAX_VERTEX_UNITS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB")]
	public const int GL_MAX_VERTEX_VARYING_COMPONENTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT")]
	public const int GL_MAX_VERTEX_VARYING_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VIEWPORTS")]
	public const int GL_MAX_VIEWPORTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MAX_VIEWPORT_DIMS")]
	public const int GL_MAX_VIEWPORT_DIMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MEDIUM_FLOAT")]
	public const int GL_MEDIUM_FLOAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MEDIUM_INT")]
	public const int GL_MEDIUM_INT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN")]
	public const int GL_MIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX")]
	public const int GL_MINMAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX_EXT")]
	public const int GL_MINMAX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX_FORMAT")]
	public const int GL_MINMAX_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX_FORMAT_EXT")]
	public const int GL_MINMAX_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX_SINK")]
	public const int GL_MINMAX_SINK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINMAX_SINK_EXT")]
	public const int GL_MINMAX_SINK_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MINOR_VERSION")]
	public const int GL_MINOR_VERSION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_EXT")]
	public const int GL_MIN_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET")]
	public const int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV")]
	public const int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_MAP_BUFFER_ALIGNMENT")]
	public const int GL_MIN_MAP_BUFFER_ALIGNMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_PROGRAM_TEXEL_OFFSET")]
	public const int GL_MIN_PROGRAM_TEXEL_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_PROGRAM_TEXEL_OFFSET_NV")]
	public const int GL_MIN_PROGRAM_TEXEL_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET")]
	public const int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV")]
	public const int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIN_SAMPLE_SHADING_VALUE_ARB")]
	public const int GL_MIN_SAMPLE_SHADING_VALUE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRRORED_REPEAT")]
	public const int GL_MIRRORED_REPEAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRRORED_REPEAT_ARB")]
	public const int GL_MIRRORED_REPEAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRRORED_REPEAT_IBM")]
	public const int GL_MIRRORED_REPEAT_IBM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRRORED_REPEAT_OES")]
	public const int GL_MIRRORED_REPEAT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRROR_CLAMP_ATI")]
	public const int GL_MIRROR_CLAMP_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRROR_CLAMP_EXT")]
	public const int GL_MIRROR_CLAMP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRROR_CLAMP_TO_BORDER_EXT")]
	public const int GL_MIRROR_CLAMP_TO_BORDER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRROR_CLAMP_TO_EDGE_ATI")]
	public const int GL_MIRROR_CLAMP_TO_EDGE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MIRROR_CLAMP_TO_EDGE_EXT")]
	public const int GL_MIRROR_CLAMP_TO_EDGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW")]
	public const int GL_MODELVIEW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW0_ARB")]
	public const int GL_MODELVIEW0_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW10_ARB")]
	public const int GL_MODELVIEW10_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW11_ARB")]
	public const int GL_MODELVIEW11_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW12_ARB")]
	public const int GL_MODELVIEW12_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW13_ARB")]
	public const int GL_MODELVIEW13_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW14_ARB")]
	public const int GL_MODELVIEW14_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW15_ARB")]
	public const int GL_MODELVIEW15_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW16_ARB")]
	public const int GL_MODELVIEW16_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW17_ARB")]
	public const int GL_MODELVIEW17_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW18_ARB")]
	public const int GL_MODELVIEW18_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW19_ARB")]
	public const int GL_MODELVIEW19_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW1_ARB")]
	public const int GL_MODELVIEW1_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW1_EXT")]
	public const int GL_MODELVIEW1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW1_STACK_DEPTH_EXT")]
	public const int GL_MODELVIEW1_STACK_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW20_ARB")]
	public const int GL_MODELVIEW20_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW21_ARB")]
	public const int GL_MODELVIEW21_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW22_ARB")]
	public const int GL_MODELVIEW22_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW23_ARB")]
	public const int GL_MODELVIEW23_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW24_ARB")]
	public const int GL_MODELVIEW24_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW25_ARB")]
	public const int GL_MODELVIEW25_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW26_ARB")]
	public const int GL_MODELVIEW26_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW27_ARB")]
	public const int GL_MODELVIEW27_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW28_ARB")]
	public const int GL_MODELVIEW28_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW29_ARB")]
	public const int GL_MODELVIEW29_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW2_ARB")]
	public const int GL_MODELVIEW2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW30_ARB")]
	public const int GL_MODELVIEW30_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW31_ARB")]
	public const int GL_MODELVIEW31_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW3_ARB")]
	public const int GL_MODELVIEW3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW4_ARB")]
	public const int GL_MODELVIEW4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW5_ARB")]
	public const int GL_MODELVIEW5_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW6_ARB")]
	public const int GL_MODELVIEW6_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW7_ARB")]
	public const int GL_MODELVIEW7_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW8_ARB")]
	public const int GL_MODELVIEW8_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW9_ARB")]
	public const int GL_MODELVIEW9_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW_MATRIX")]
	public const int GL_MODELVIEW_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW_MATRIX1_EXT")]
	public const int GL_MODELVIEW_MATRIX1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES")]
	public const int GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW_PROJECTION_NV")]
	public const int GL_MODELVIEW_PROJECTION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODELVIEW_STACK_DEPTH")]
	public const int GL_MODELVIEW_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODULATE")]
	public const int GL_MODULATE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODULATE_ADD_ATI")]
	public const int GL_MODULATE_ADD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODULATE_COLOR_IMG")]
	public const int GL_MODULATE_COLOR_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODULATE_SIGNED_ADD_ATI")]
	public const int GL_MODULATE_SIGNED_ADD_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MODULATE_SUBTRACT_ATI")]
	public const int GL_MODULATE_SUBTRACT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MOV_ATI")]
	public const int GL_MOV_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULT")]
	public const int GL_MULT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE")]
	public const int GL_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_3DFX")]
	public const int GL_MULTISAMPLE_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_ARB")]
	public const int GL_MULTISAMPLE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_BIT")]
	public const int GL_MULTISAMPLE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_BIT_3DFX")]
	public const int GL_MULTISAMPLE_BIT_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_BIT_ARB")]
	public const int GL_MULTISAMPLE_BIT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_BIT_EXT")]
	public const int GL_MULTISAMPLE_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_COVERAGE_MODES_NV")]
	public const int GL_MULTISAMPLE_COVERAGE_MODES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_EXT")]
	public const int GL_MULTISAMPLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_FILTER_HINT_NV")]
	public const int GL_MULTISAMPLE_FILTER_HINT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MULTISAMPLE_SGIS")]
	public const int GL_MULTISAMPLE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MUL_ATI")]
	public const int GL_MUL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_MVP_MATRIX_EXT")]
	public const int GL_MVP_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_N3F_V3F")]
	public const int GL_N3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NAMED_STRING_LENGTH_ARB")]
	public const int GL_NAMED_STRING_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NAMED_STRING_TYPE_ARB")]
	public const int GL_NAMED_STRING_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NAME_STACK_DEPTH")]
	public const int GL_NAME_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NAND")]
	public const int GL_NAND;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEAREST")]
	public const int GL_NEAREST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEAREST_CLIPMAP_LINEAR_SGIX")]
	public const int GL_NEAREST_CLIPMAP_LINEAR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEAREST_CLIPMAP_NEAREST_SGIX")]
	public const int GL_NEAREST_CLIPMAP_NEAREST_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEAREST_MIPMAP_LINEAR")]
	public const int GL_NEAREST_MIPMAP_LINEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEAREST_MIPMAP_NEAREST")]
	public const int GL_NEAREST_MIPMAP_NEAREST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATE_BIT_ATI")]
	public const int GL_NEGATE_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATIVE_ONE_EXT")]
	public const int GL_NEGATIVE_ONE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATIVE_W_EXT")]
	public const int GL_NEGATIVE_W_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATIVE_X_EXT")]
	public const int GL_NEGATIVE_X_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATIVE_Y_EXT")]
	public const int GL_NEGATIVE_Y_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEGATIVE_Z_EXT")]
	public const int GL_NEGATIVE_Z_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEVER")]
	public const int GL_NEVER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEXT_BUFFER_NV")]
	public const int GL_NEXT_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV")]
	public const int GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NICEST")]
	public const int GL_NICEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NONE")]
	public const int GL_NONE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NOOP")]
	public const int GL_NOOP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NOR")]
	public const int GL_NOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMALIZE")]
	public const int GL_NORMALIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMALIZED_RANGE_EXT")]
	public const int GL_NORMALIZED_RANGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY")]
	public const int GL_NORMAL_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_ADDRESS_NV")]
	public const int GL_NORMAL_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_BUFFER_BINDING")]
	public const int GL_NORMAL_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_NORMAL_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_COUNT_EXT")]
	public const int GL_NORMAL_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_EXT")]
	public const int GL_NORMAL_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_LENGTH_NV")]
	public const int GL_NORMAL_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL")]
	public const int GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_POINTER")]
	public const int GL_NORMAL_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_POINTER_EXT")]
	public const int GL_NORMAL_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_STRIDE")]
	public const int GL_NORMAL_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_STRIDE_EXT")]
	public const int GL_NORMAL_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_TYPE")]
	public const int GL_NORMAL_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_ARRAY_TYPE_EXT")]
	public const int GL_NORMAL_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_MAP")]
	public const int GL_NORMAL_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_MAP_ARB")]
	public const int GL_NORMAL_MAP_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_MAP_EXT")]
	public const int GL_NORMAL_MAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NORMAL_MAP_OES")]
	public const int GL_NORMAL_MAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NOTEQUAL")]
	public const int GL_NOTEQUAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NO_ERROR")]
	public const int GL_NO_ERROR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NO_RESET_NOTIFICATION_ARB")]
	public const int GL_NO_RESET_NOTIFICATION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_COMPATIBLE_SUBROUTINES")]
	public const int GL_NUM_COMPATIBLE_SUBROUTINES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_COMPRESSED_TEXTURE_FORMATS")]
	public const int GL_NUM_COMPRESSED_TEXTURE_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB")]
	public const int GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_EXTENSIONS")]
	public const int GL_NUM_EXTENSIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_FILL_STREAMS_NV")]
	public const int GL_NUM_FILL_STREAMS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_FRAGMENT_CONSTANTS_ATI")]
	public const int GL_NUM_FRAGMENT_CONSTANTS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_FRAGMENT_REGISTERS_ATI")]
	public const int GL_NUM_FRAGMENT_REGISTERS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_GENERAL_COMBINERS_NV")]
	public const int GL_NUM_GENERAL_COMBINERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI")]
	public const int GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_INSTRUCTIONS_PER_PASS_ATI")]
	public const int GL_NUM_INSTRUCTIONS_PER_PASS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_INSTRUCTIONS_TOTAL_ATI")]
	public const int GL_NUM_INSTRUCTIONS_TOTAL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_LOOPBACK_COMPONENTS_ATI")]
	public const int GL_NUM_LOOPBACK_COMPONENTS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_PASSES_ATI")]
	public const int GL_NUM_PASSES_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_PROGRAM_BINARY_FORMATS")]
	public const int GL_NUM_PROGRAM_BINARY_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_PROGRAM_BINARY_FORMATS_OES")]
	public const int GL_NUM_PROGRAM_BINARY_FORMATS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_SAMPLE_COUNTS")]
	public const int GL_NUM_SAMPLE_COUNTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_SHADER_BINARY_FORMATS")]
	public const int GL_NUM_SHADER_BINARY_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_NUM_VIDEO_CAPTURE_STREAMS_NV")]
	public const int GL_NUM_VIDEO_CAPTURE_STREAMS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_ACTIVE_ATTRIBUTES_ARB")]
	public const int GL_OBJECT_ACTIVE_ATTRIBUTES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB")]
	public const int GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_ACTIVE_UNIFORMS_ARB")]
	public const int GL_OBJECT_ACTIVE_UNIFORMS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB")]
	public const int GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_ATTACHED_OBJECTS_ARB")]
	public const int GL_OBJECT_ATTACHED_OBJECTS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_BUFFER_SIZE_ATI")]
	public const int GL_OBJECT_BUFFER_SIZE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_BUFFER_USAGE_ATI")]
	public const int GL_OBJECT_BUFFER_USAGE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_COMPILE_STATUS_ARB")]
	public const int GL_OBJECT_COMPILE_STATUS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_DELETE_STATUS_ARB")]
	public const int GL_OBJECT_DELETE_STATUS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_DISTANCE_TO_LINE_SGIS")]
	public const int GL_OBJECT_DISTANCE_TO_LINE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_DISTANCE_TO_POINT_SGIS")]
	public const int GL_OBJECT_DISTANCE_TO_POINT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_INFO_LOG_LENGTH_ARB")]
	public const int GL_OBJECT_INFO_LOG_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_LINEAR")]
	public const int GL_OBJECT_LINEAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_LINE_SGIS")]
	public const int GL_OBJECT_LINE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_LINK_STATUS_ARB")]
	public const int GL_OBJECT_LINK_STATUS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_PLANE")]
	public const int GL_OBJECT_PLANE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_POINT_SGIS")]
	public const int GL_OBJECT_POINT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_SHADER_SOURCE_LENGTH_ARB")]
	public const int GL_OBJECT_SHADER_SOURCE_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_SUBTYPE_ARB")]
	public const int GL_OBJECT_SUBTYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_TYPE")]
	public const int GL_OBJECT_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_TYPE_ARB")]
	public const int GL_OBJECT_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OBJECT_VALIDATE_STATUS_ARB")]
	public const int GL_OBJECT_VALIDATE_STATUS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV")]
	public const int GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV")]
	public const int GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_HILO_TEXTURE_2D_NV")]
	public const int GL_OFFSET_HILO_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV")]
	public const int GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV")]
	public const int GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV")]
	public const int GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV")]
	public const int GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV")]
	public const int GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_2D_NV")]
	public const int GL_OFFSET_TEXTURE_2D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_BIAS_NV")]
	public const int GL_OFFSET_TEXTURE_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_MATRIX_NV")]
	public const int GL_OFFSET_TEXTURE_MATRIX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_RECTANGLE_NV")]
	public const int GL_OFFSET_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV")]
	public const int GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OFFSET_TEXTURE_SCALE_NV")]
	public const int GL_OFFSET_TEXTURE_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE")]
	public const int GL_ONE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_EXT")]
	public const int GL_ONE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_CONSTANT_ALPHA")]
	public const int GL_ONE_MINUS_CONSTANT_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_CONSTANT_ALPHA_EXT")]
	public const int GL_ONE_MINUS_CONSTANT_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_CONSTANT_COLOR")]
	public const int GL_ONE_MINUS_CONSTANT_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_CONSTANT_COLOR_EXT")]
	public const int GL_ONE_MINUS_CONSTANT_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_DST_ALPHA")]
	public const int GL_ONE_MINUS_DST_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_DST_COLOR")]
	public const int GL_ONE_MINUS_DST_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_SRC1_ALPHA")]
	public const int GL_ONE_MINUS_SRC1_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_SRC1_COLOR")]
	public const int GL_ONE_MINUS_SRC1_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_SRC_ALPHA")]
	public const int GL_ONE_MINUS_SRC_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ONE_MINUS_SRC_COLOR")]
	public const int GL_ONE_MINUS_SRC_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND0_ALPHA")]
	public const int GL_OPERAND0_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND0_ALPHA_EXT")]
	public const int GL_OPERAND0_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND0_RGB")]
	public const int GL_OPERAND0_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND0_RGB_EXT")]
	public const int GL_OPERAND0_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND1_ALPHA")]
	public const int GL_OPERAND1_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND1_ALPHA_EXT")]
	public const int GL_OPERAND1_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND1_RGB")]
	public const int GL_OPERAND1_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND1_RGB_EXT")]
	public const int GL_OPERAND1_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND2_ALPHA")]
	public const int GL_OPERAND2_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND2_ALPHA_EXT")]
	public const int GL_OPERAND2_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND2_RGB")]
	public const int GL_OPERAND2_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND2_RGB_EXT")]
	public const int GL_OPERAND2_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND3_ALPHA_NV")]
	public const int GL_OPERAND3_ALPHA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OPERAND3_RGB_NV")]
	public const int GL_OPERAND3_RGB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_ADD_EXT")]
	public const int GL_OP_ADD_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_CLAMP_EXT")]
	public const int GL_OP_CLAMP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_CROSS_PRODUCT_EXT")]
	public const int GL_OP_CROSS_PRODUCT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_DOT3_EXT")]
	public const int GL_OP_DOT3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_DOT4_EXT")]
	public const int GL_OP_DOT4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_EXP_BASE_2_EXT")]
	public const int GL_OP_EXP_BASE_2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_FLOOR_EXT")]
	public const int GL_OP_FLOOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_FRAC_EXT")]
	public const int GL_OP_FRAC_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_INDEX_EXT")]
	public const int GL_OP_INDEX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_LOG_BASE_2_EXT")]
	public const int GL_OP_LOG_BASE_2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MADD_EXT")]
	public const int GL_OP_MADD_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MAX_EXT")]
	public const int GL_OP_MAX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MIN_EXT")]
	public const int GL_OP_MIN_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MOV_EXT")]
	public const int GL_OP_MOV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MULTIPLY_MATRIX_EXT")]
	public const int GL_OP_MULTIPLY_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_MUL_EXT")]
	public const int GL_OP_MUL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_NEGATE_EXT")]
	public const int GL_OP_NEGATE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_POWER_EXT")]
	public const int GL_OP_POWER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_RECIP_EXT")]
	public const int GL_OP_RECIP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_RECIP_SQRT_EXT")]
	public const int GL_OP_RECIP_SQRT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_ROUND_EXT")]
	public const int GL_OP_ROUND_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_SET_GE_EXT")]
	public const int GL_OP_SET_GE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_SET_LT_EXT")]
	public const int GL_OP_SET_LT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OP_SUB_EXT")]
	public const int GL_OP_SUB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OR")]
	public const int GL_OR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ORDER")]
	public const int GL_ORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OR_INVERTED")]
	public const int GL_OR_INVERTED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OR_REVERSE")]
	public const int GL_OR_REVERSE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_COLOR0_EXT")]
	public const int GL_OUTPUT_COLOR0_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_COLOR1_EXT")]
	public const int GL_OUTPUT_COLOR1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_FOG_EXT")]
	public const int GL_OUTPUT_FOG_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD0_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD0_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD10_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD10_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD11_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD11_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD12_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD13_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD13_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD14_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD14_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD15_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD15_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD16_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD17_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD17_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD18_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD18_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD19_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD19_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD1_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD20_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD20_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD21_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD21_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD22_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD22_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD23_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD23_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD24_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD24_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD25_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD25_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD26_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD26_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD27_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD27_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD28_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD28_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD29_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD29_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD2_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD30_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD30_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD31_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD31_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD3_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD4_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD5_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD6_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD6_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD7_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD7_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD8_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_TEXTURE_COORD9_EXT")]
	public const int GL_OUTPUT_TEXTURE_COORD9_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUTPUT_VERTEX_EXT")]
	public const int GL_OUTPUT_VERTEX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_OUT_OF_MEMORY")]
	public const int GL_OUT_OF_MEMORY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_ALIGNMENT")]
	public const int GL_PACK_ALIGNMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_CMYK_HINT_EXT")]
	public const int GL_PACK_CMYK_HINT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_COMPRESSED_BLOCK_DEPTH")]
	public const int GL_PACK_COMPRESSED_BLOCK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_COMPRESSED_BLOCK_HEIGHT")]
	public const int GL_PACK_COMPRESSED_BLOCK_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_COMPRESSED_BLOCK_SIZE")]
	public const int GL_PACK_COMPRESSED_BLOCK_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_COMPRESSED_BLOCK_WIDTH")]
	public const int GL_PACK_COMPRESSED_BLOCK_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_COMPRESSED_SIZE_SGIX")]
	public const int GL_PACK_COMPRESSED_SIZE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_IMAGE_DEPTH_SGIS")]
	public const int GL_PACK_IMAGE_DEPTH_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_IMAGE_HEIGHT")]
	public const int GL_PACK_IMAGE_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_IMAGE_HEIGHT_EXT")]
	public const int GL_PACK_IMAGE_HEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_INVERT_MESA")]
	public const int GL_PACK_INVERT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_LSB_FIRST")]
	public const int GL_PACK_LSB_FIRST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_MAX_COMPRESSED_SIZE_SGIX")]
	public const int GL_PACK_MAX_COMPRESSED_SIZE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_RESAMPLE_OML")]
	public const int GL_PACK_RESAMPLE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_RESAMPLE_SGIX")]
	public const int GL_PACK_RESAMPLE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_ROW_BYTES_APPLE")]
	public const int GL_PACK_ROW_BYTES_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_ROW_LENGTH")]
	public const int GL_PACK_ROW_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SKIP_IMAGES")]
	public const int GL_PACK_SKIP_IMAGES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SKIP_IMAGES_EXT")]
	public const int GL_PACK_SKIP_IMAGES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SKIP_PIXELS")]
	public const int GL_PACK_SKIP_PIXELS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SKIP_ROWS")]
	public const int GL_PACK_SKIP_ROWS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SKIP_VOLUMES_SGIS")]
	public const int GL_PACK_SKIP_VOLUMES_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SUBSAMPLE_RATE_SGIX")]
	public const int GL_PACK_SUBSAMPLE_RATE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PACK_SWAP_BYTES")]
	public const int GL_PACK_SWAP_BYTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE4_R5_G6_B5_OES")]
	public const int GL_PALETTE4_R5_G6_B5_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE4_RGB5_A1_OES")]
	public const int GL_PALETTE4_RGB5_A1_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE4_RGB8_OES")]
	public const int GL_PALETTE4_RGB8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE4_RGBA4_OES")]
	public const int GL_PALETTE4_RGBA4_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE4_RGBA8_OES")]
	public const int GL_PALETTE4_RGBA8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE8_R5_G6_B5_OES")]
	public const int GL_PALETTE8_R5_G6_B5_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE8_RGB5_A1_OES")]
	public const int GL_PALETTE8_RGB5_A1_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE8_RGB8_OES")]
	public const int GL_PALETTE8_RGB8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE8_RGBA4_OES")]
	public const int GL_PALETTE8_RGBA4_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PALETTE8_RGBA8_OES")]
	public const int GL_PALETTE8_RGBA8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PARALLEL_ARRAYS_INTEL")]
	public const int GL_PARALLEL_ARRAYS_INTEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PARTIAL_SUCCESS_NV")]
	public const int GL_PARTIAL_SUCCESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PASS_THROUGH_NV")]
	public const int GL_PASS_THROUGH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PASS_THROUGH_TOKEN")]
	public const int GL_PASS_THROUGH_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PATCHES")]
	public const int GL_PATCHES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PATCH_DEFAULT_INNER_LEVEL")]
	public const int GL_PATCH_DEFAULT_INNER_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PATCH_DEFAULT_OUTER_LEVEL")]
	public const int GL_PATCH_DEFAULT_OUTER_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PATCH_VERTICES")]
	public const int GL_PATCH_VERTICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERCENTAGE_AMD")]
	public const int GL_PERCENTAGE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERFMON_GLOBAL_MODE_QCOM")]
	public const int GL_PERFMON_GLOBAL_MODE_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERFMON_RESULT_AMD")]
	public const int GL_PERFMON_RESULT_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERFMON_RESULT_AVAILABLE_AMD")]
	public const int GL_PERFMON_RESULT_AVAILABLE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERFMON_RESULT_SIZE_AMD")]
	public const int GL_PERFMON_RESULT_SIZE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERFORMANCE_MONITOR_AMD")]
	public const int GL_PERFORMANCE_MONITOR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERSPECTIVE_CORRECTION_HINT")]
	public const int GL_PERSPECTIVE_CORRECTION_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PERTURB_EXT")]
	public const int GL_PERTURB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PER_STAGE_CONSTANTS_NV")]
	public const int GL_PER_STAGE_CONSTANTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_BUFFER_BARRIER_BIT")]
	public const int GL_PIXEL_BUFFER_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_BUFFER_BARRIER_BIT_EXT")]
	public const int GL_PIXEL_BUFFER_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_COUNTER_BITS_NV")]
	public const int GL_PIXEL_COUNTER_BITS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_COUNT_AVAILABLE_NV")]
	public const int GL_PIXEL_COUNT_AVAILABLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_COUNT_NV")]
	public const int GL_PIXEL_COUNT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_CUBIC_WEIGHT_EXT")]
	public const int GL_PIXEL_CUBIC_WEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS")]
	public const int GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS")]
	public const int GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_GROUP_COLOR_SGIS")]
	public const int GL_PIXEL_GROUP_COLOR_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAG_FILTER_EXT")]
	public const int GL_PIXEL_MAG_FILTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_A_TO_A")]
	public const int GL_PIXEL_MAP_A_TO_A;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_A_TO_A_SIZE")]
	public const int GL_PIXEL_MAP_A_TO_A_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_B_TO_B")]
	public const int GL_PIXEL_MAP_B_TO_B;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_B_TO_B_SIZE")]
	public const int GL_PIXEL_MAP_B_TO_B_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_G_TO_G")]
	public const int GL_PIXEL_MAP_G_TO_G;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_G_TO_G_SIZE")]
	public const int GL_PIXEL_MAP_G_TO_G_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_A")]
	public const int GL_PIXEL_MAP_I_TO_A;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_A_SIZE")]
	public const int GL_PIXEL_MAP_I_TO_A_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_B")]
	public const int GL_PIXEL_MAP_I_TO_B;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_B_SIZE")]
	public const int GL_PIXEL_MAP_I_TO_B_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_G")]
	public const int GL_PIXEL_MAP_I_TO_G;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_G_SIZE")]
	public const int GL_PIXEL_MAP_I_TO_G_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_I")]
	public const int GL_PIXEL_MAP_I_TO_I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_I_SIZE")]
	public const int GL_PIXEL_MAP_I_TO_I_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_R")]
	public const int GL_PIXEL_MAP_I_TO_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_I_TO_R_SIZE")]
	public const int GL_PIXEL_MAP_I_TO_R_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_R_TO_R")]
	public const int GL_PIXEL_MAP_R_TO_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_R_TO_R_SIZE")]
	public const int GL_PIXEL_MAP_R_TO_R_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_S_TO_S")]
	public const int GL_PIXEL_MAP_S_TO_S;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MAP_S_TO_S_SIZE")]
	public const int GL_PIXEL_MAP_S_TO_S_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MIN_FILTER_EXT")]
	public const int GL_PIXEL_MIN_FILTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_MODE_BIT")]
	public const int GL_PIXEL_MODE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER")]
	public const int GL_PIXEL_PACK_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER_ARB")]
	public const int GL_PIXEL_PACK_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER_BINDING")]
	public const int GL_PIXEL_PACK_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER_BINDING_ARB")]
	public const int GL_PIXEL_PACK_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER_BINDING_EXT")]
	public const int GL_PIXEL_PACK_BUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_PACK_BUFFER_EXT")]
	public const int GL_PIXEL_PACK_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_SUBSAMPLE_2424_SGIX")]
	public const int GL_PIXEL_SUBSAMPLE_2424_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_SUBSAMPLE_4242_SGIX")]
	public const int GL_PIXEL_SUBSAMPLE_4242_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_SUBSAMPLE_4444_SGIX")]
	public const int GL_PIXEL_SUBSAMPLE_4444_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEXTURE_SGIS")]
	public const int GL_PIXEL_TEXTURE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX")]
	public const int GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX")]
	public const int GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX")]
	public const int GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX")]
	public const int GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_MODE_SGIX")]
	public const int GL_PIXEL_TEX_GEN_MODE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX")]
	public const int GL_PIXEL_TEX_GEN_Q_CEILING_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX")]
	public const int GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX")]
	public const int GL_PIXEL_TEX_GEN_Q_ROUND_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TEX_GEN_SGIX")]
	public const int GL_PIXEL_TEX_GEN_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX")]
	public const int GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX")]
	public const int GL_PIXEL_TILE_CACHE_INCREMENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_CACHE_SIZE_SGIX")]
	public const int GL_PIXEL_TILE_CACHE_SIZE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_GRID_DEPTH_SGIX")]
	public const int GL_PIXEL_TILE_GRID_DEPTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_GRID_HEIGHT_SGIX")]
	public const int GL_PIXEL_TILE_GRID_HEIGHT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_GRID_WIDTH_SGIX")]
	public const int GL_PIXEL_TILE_GRID_WIDTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_HEIGHT_SGIX")]
	public const int GL_PIXEL_TILE_HEIGHT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TILE_WIDTH_SGIX")]
	public const int GL_PIXEL_TILE_WIDTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TRANSFORM_2D_EXT")]
	public const int GL_PIXEL_TRANSFORM_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT")]
	public const int GL_PIXEL_TRANSFORM_2D_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT")]
	public const int GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER")]
	public const int GL_PIXEL_UNPACK_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER_ARB")]
	public const int GL_PIXEL_UNPACK_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER_BINDING")]
	public const int GL_PIXEL_UNPACK_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER_BINDING_ARB")]
	public const int GL_PIXEL_UNPACK_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER_BINDING_EXT")]
	public const int GL_PIXEL_UNPACK_BUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PIXEL_UNPACK_BUFFER_EXT")]
	public const int GL_PIXEL_UNPACK_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_ATI")]
	public const int GL_PN_TRIANGLES_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_NORMAL_MODE_ATI")]
	public const int GL_PN_TRIANGLES_NORMAL_MODE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI")]
	public const int GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI")]
	public const int GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_POINT_MODE_ATI")]
	public const int GL_PN_TRIANGLES_POINT_MODE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI")]
	public const int GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI")]
	public const int GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI")]
	public const int GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT")]
	public const int GL_POINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINTS")]
	public const int GL_POINTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_BIT")]
	public const int GL_POINT_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_DISTANCE_ATTENUATION")]
	public const int GL_POINT_DISTANCE_ATTENUATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_DISTANCE_ATTENUATION_ARB")]
	public const int GL_POINT_DISTANCE_ATTENUATION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_FADE_THRESHOLD_SIZE")]
	public const int GL_POINT_FADE_THRESHOLD_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_FADE_THRESHOLD_SIZE_ARB")]
	public const int GL_POINT_FADE_THRESHOLD_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_FADE_THRESHOLD_SIZE_EXT")]
	public const int GL_POINT_FADE_THRESHOLD_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_FADE_THRESHOLD_SIZE_SGIS")]
	public const int GL_POINT_FADE_THRESHOLD_SIZE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE")]
	public const int GL_POINT_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES")]
	public const int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_ARRAY_OES")]
	public const int GL_POINT_SIZE_ARRAY_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_ARRAY_POINTER_OES")]
	public const int GL_POINT_SIZE_ARRAY_POINTER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_ARRAY_STRIDE_OES")]
	public const int GL_POINT_SIZE_ARRAY_STRIDE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_ARRAY_TYPE_OES")]
	public const int GL_POINT_SIZE_ARRAY_TYPE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_GRANULARITY")]
	public const int GL_POINT_SIZE_GRANULARITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MAX")]
	public const int GL_POINT_SIZE_MAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MAX_ARB")]
	public const int GL_POINT_SIZE_MAX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MAX_EXT")]
	public const int GL_POINT_SIZE_MAX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MAX_SGIS")]
	public const int GL_POINT_SIZE_MAX_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MIN")]
	public const int GL_POINT_SIZE_MIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MIN_ARB")]
	public const int GL_POINT_SIZE_MIN_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MIN_EXT")]
	public const int GL_POINT_SIZE_MIN_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_MIN_SGIS")]
	public const int GL_POINT_SIZE_MIN_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SIZE_RANGE")]
	public const int GL_POINT_SIZE_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SMOOTH")]
	public const int GL_POINT_SMOOTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SMOOTH_HINT")]
	public const int GL_POINT_SMOOTH_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SPRITE")]
	public const int GL_POINT_SPRITE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SPRITE_ARB")]
	public const int GL_POINT_SPRITE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SPRITE_COORD_ORIGIN")]
	public const int GL_POINT_SPRITE_COORD_ORIGIN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SPRITE_NV")]
	public const int GL_POINT_SPRITE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_SPRITE_R_MODE_NV")]
	public const int GL_POINT_SPRITE_R_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POINT_TOKEN")]
	public const int GL_POINT_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON")]
	public const int GL_POLYGON;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_BIT")]
	public const int GL_POLYGON_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_MODE")]
	public const int GL_POLYGON_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_BIAS_EXT")]
	public const int GL_POLYGON_OFFSET_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_EXT")]
	public const int GL_POLYGON_OFFSET_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_FACTOR")]
	public const int GL_POLYGON_OFFSET_FACTOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_FACTOR_EXT")]
	public const int GL_POLYGON_OFFSET_FACTOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_FILL")]
	public const int GL_POLYGON_OFFSET_FILL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_LINE")]
	public const int GL_POLYGON_OFFSET_LINE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_POINT")]
	public const int GL_POLYGON_OFFSET_POINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_OFFSET_UNITS")]
	public const int GL_POLYGON_OFFSET_UNITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_SMOOTH")]
	public const int GL_POLYGON_SMOOTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_SMOOTH_HINT")]
	public const int GL_POLYGON_SMOOTH_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_STIPPLE")]
	public const int GL_POLYGON_STIPPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_STIPPLE_BIT")]
	public const int GL_POLYGON_STIPPLE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POLYGON_TOKEN")]
	public const int GL_POLYGON_TOKEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POSITION")]
	public const int GL_POSITION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_ALPHA_BIAS")]
	public const int GL_POST_COLOR_MATRIX_ALPHA_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI")]
	public const int GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_ALPHA_SCALE")]
	public const int GL_POST_COLOR_MATRIX_ALPHA_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI")]
	public const int GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_BLUE_BIAS")]
	public const int GL_POST_COLOR_MATRIX_BLUE_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI")]
	public const int GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_BLUE_SCALE")]
	public const int GL_POST_COLOR_MATRIX_BLUE_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI")]
	public const int GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_COLOR_TABLE")]
	public const int GL_POST_COLOR_MATRIX_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI")]
	public const int GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_GREEN_BIAS")]
	public const int GL_POST_COLOR_MATRIX_GREEN_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI")]
	public const int GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_GREEN_SCALE")]
	public const int GL_POST_COLOR_MATRIX_GREEN_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI")]
	public const int GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_RED_BIAS")]
	public const int GL_POST_COLOR_MATRIX_RED_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_RED_BIAS_SGI")]
	public const int GL_POST_COLOR_MATRIX_RED_BIAS_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_RED_SCALE")]
	public const int GL_POST_COLOR_MATRIX_RED_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_COLOR_MATRIX_RED_SCALE_SGI")]
	public const int GL_POST_COLOR_MATRIX_RED_SCALE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_ALPHA_BIAS")]
	public const int GL_POST_CONVOLUTION_ALPHA_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT")]
	public const int GL_POST_CONVOLUTION_ALPHA_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_ALPHA_SCALE")]
	public const int GL_POST_CONVOLUTION_ALPHA_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT")]
	public const int GL_POST_CONVOLUTION_ALPHA_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_BLUE_BIAS")]
	public const int GL_POST_CONVOLUTION_BLUE_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_BLUE_BIAS_EXT")]
	public const int GL_POST_CONVOLUTION_BLUE_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_BLUE_SCALE")]
	public const int GL_POST_CONVOLUTION_BLUE_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_BLUE_SCALE_EXT")]
	public const int GL_POST_CONVOLUTION_BLUE_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_COLOR_TABLE")]
	public const int GL_POST_CONVOLUTION_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_COLOR_TABLE_SGI")]
	public const int GL_POST_CONVOLUTION_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_GREEN_BIAS")]
	public const int GL_POST_CONVOLUTION_GREEN_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_GREEN_BIAS_EXT")]
	public const int GL_POST_CONVOLUTION_GREEN_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_GREEN_SCALE")]
	public const int GL_POST_CONVOLUTION_GREEN_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_GREEN_SCALE_EXT")]
	public const int GL_POST_CONVOLUTION_GREEN_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_RED_BIAS")]
	public const int GL_POST_CONVOLUTION_RED_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_RED_BIAS_EXT")]
	public const int GL_POST_CONVOLUTION_RED_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_RED_SCALE")]
	public const int GL_POST_CONVOLUTION_RED_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_CONVOLUTION_RED_SCALE_EXT")]
	public const int GL_POST_CONVOLUTION_RED_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX")]
	public const int GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_TEXTURE_FILTER_BIAS_SGIX")]
	public const int GL_POST_TEXTURE_FILTER_BIAS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX")]
	public const int GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_POST_TEXTURE_FILTER_SCALE_SGIX")]
	public const int GL_POST_TEXTURE_FILTER_SCALE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRESENT_DURATION_NV")]
	public const int GL_PRESENT_DURATION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRESENT_TIME_NV")]
	public const int GL_PRESENT_TIME_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRESERVE_ATI")]
	public const int GL_PRESERVE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PREVIOUS")]
	public const int GL_PREVIOUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PREVIOUS_EXT")]
	public const int GL_PREVIOUS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PREVIOUS_TEXTURE_INPUT_NV")]
	public const int GL_PREVIOUS_TEXTURE_INPUT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMARY_COLOR")]
	public const int GL_PRIMARY_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMARY_COLOR_EXT")]
	public const int GL_PRIMARY_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMARY_COLOR_NV")]
	public const int GL_PRIMARY_COLOR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVES_GENERATED")]
	public const int GL_PRIMITIVES_GENERATED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVES_GENERATED_EXT")]
	public const int GL_PRIMITIVES_GENERATED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVES_GENERATED_NV")]
	public const int GL_PRIMITIVES_GENERATED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVE_ID_NV")]
	public const int GL_PRIMITIVE_ID_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVE_RESTART")]
	public const int GL_PRIMITIVE_RESTART;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVE_RESTART_INDEX")]
	public const int GL_PRIMITIVE_RESTART_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVE_RESTART_INDEX_NV")]
	public const int GL_PRIMITIVE_RESTART_INDEX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PRIMITIVE_RESTART_NV")]
	public const int GL_PRIMITIVE_RESTART_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ADDRESS_REGISTERS_ARB")]
	public const int GL_PROGRAM_ADDRESS_REGISTERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ALU_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_ALU_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ATTRIBS_ARB")]
	public const int GL_PROGRAM_ATTRIBS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ATTRIB_COMPONENTS_NV")]
	public const int GL_PROGRAM_ATTRIB_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINARY_FORMATS")]
	public const int GL_PROGRAM_BINARY_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINARY_FORMATS_OES")]
	public const int GL_PROGRAM_BINARY_FORMATS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINARY_LENGTH")]
	public const int GL_PROGRAM_BINARY_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINARY_LENGTH_OES")]
	public const int GL_PROGRAM_BINARY_LENGTH_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINARY_RETRIEVABLE_HINT")]
	public const int GL_PROGRAM_BINARY_RETRIEVABLE_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_BINDING_ARB")]
	public const int GL_PROGRAM_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ERROR_POSITION_ARB")]
	public const int GL_PROGRAM_ERROR_POSITION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ERROR_POSITION_NV")]
	public const int GL_PROGRAM_ERROR_POSITION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ERROR_STRING_ARB")]
	public const int GL_PROGRAM_ERROR_STRING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_ERROR_STRING_NV")]
	public const int GL_PROGRAM_ERROR_STRING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_FORMAT_ARB")]
	public const int GL_PROGRAM_FORMAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_FORMAT_ASCII_ARB")]
	public const int GL_PROGRAM_FORMAT_ASCII_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_LENGTH_ARB")]
	public const int GL_PROGRAM_LENGTH_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_LENGTH_NV")]
	public const int GL_PROGRAM_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_MATRIX_EXT")]
	public const int GL_PROGRAM_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT")]
	public const int GL_PROGRAM_MATRIX_STACK_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB")]
	public const int GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_ATTRIBS_ARB")]
	public const int GL_PROGRAM_NATIVE_ATTRIBS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_PARAMETERS_ARB")]
	public const int GL_PROGRAM_NATIVE_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_TEMPORARIES_ARB")]
	public const int GL_PROGRAM_NATIVE_TEMPORARIES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB")]
	public const int GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_OBJECT_ARB")]
	public const int GL_PROGRAM_OBJECT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_PARAMETERS_ARB")]
	public const int GL_PROGRAM_PARAMETERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_PARAMETER_NV")]
	public const int GL_PROGRAM_PARAMETER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_PIPELINE_BINDING")]
	public const int GL_PROGRAM_PIPELINE_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_POINT_SIZE")]
	public const int GL_PROGRAM_POINT_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_POINT_SIZE_ARB")]
	public const int GL_PROGRAM_POINT_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_POINT_SIZE_EXT")]
	public const int GL_PROGRAM_POINT_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_RESIDENT_NV")]
	public const int GL_PROGRAM_RESIDENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_RESULT_COMPONENTS_NV")]
	public const int GL_PROGRAM_RESULT_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_SEPARABLE")]
	public const int GL_PROGRAM_SEPARABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_STRING_ARB")]
	public const int GL_PROGRAM_STRING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_STRING_NV")]
	public const int GL_PROGRAM_STRING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_TARGET_NV")]
	public const int GL_PROGRAM_TARGET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_TEMPORARIES_ARB")]
	public const int GL_PROGRAM_TEMPORARIES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_TEX_INDIRECTIONS_ARB")]
	public const int GL_PROGRAM_TEX_INDIRECTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_TEX_INSTRUCTIONS_ARB")]
	public const int GL_PROGRAM_TEX_INSTRUCTIONS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB")]
	public const int GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROJECTION")]
	public const int GL_PROJECTION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROJECTION_MATRIX")]
	public const int GL_PROJECTION_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES")]
	public const int GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROJECTION_STACK_DEPTH")]
	public const int GL_PROJECTION_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROVOKING_VERTEX")]
	public const int GL_PROVOKING_VERTEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROVOKING_VERTEX_EXT")]
	public const int GL_PROVOKING_VERTEX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_COLOR_TABLE")]
	public const int GL_PROXY_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_COLOR_TABLE_SGI")]
	public const int GL_PROXY_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_HISTOGRAM")]
	public const int GL_PROXY_HISTOGRAM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_HISTOGRAM_EXT")]
	public const int GL_PROXY_HISTOGRAM_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE")]
	public const int GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI")]
	public const int GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE")]
	public const int GL_PROXY_POST_CONVOLUTION_COLOR_TABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI")]
	public const int GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_1D")]
	public const int GL_PROXY_TEXTURE_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_1D_ARRAY")]
	public const int GL_PROXY_TEXTURE_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_1D_ARRAY_EXT")]
	public const int GL_PROXY_TEXTURE_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_1D_EXT")]
	public const int GL_PROXY_TEXTURE_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_1D_STACK_MESAX")]
	public const int GL_PROXY_TEXTURE_1D_STACK_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D")]
	public const int GL_PROXY_TEXTURE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_ARRAY")]
	public const int GL_PROXY_TEXTURE_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_ARRAY_EXT")]
	public const int GL_PROXY_TEXTURE_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_EXT")]
	public const int GL_PROXY_TEXTURE_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_MULTISAMPLE")]
	public const int GL_PROXY_TEXTURE_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY")]
	public const int GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_2D_STACK_MESAX")]
	public const int GL_PROXY_TEXTURE_2D_STACK_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_3D")]
	public const int GL_PROXY_TEXTURE_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_3D_EXT")]
	public const int GL_PROXY_TEXTURE_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_4D_SGIS")]
	public const int GL_PROXY_TEXTURE_4D_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_COLOR_TABLE_SGI")]
	public const int GL_PROXY_TEXTURE_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_CUBE_MAP")]
	public const int GL_PROXY_TEXTURE_CUBE_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_CUBE_MAP_ARB")]
	public const int GL_PROXY_TEXTURE_CUBE_MAP_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY")]
	public const int GL_PROXY_TEXTURE_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_CUBE_MAP_EXT")]
	public const int GL_PROXY_TEXTURE_CUBE_MAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_RECTANGLE")]
	public const int GL_PROXY_TEXTURE_RECTANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_RECTANGLE_ARB")]
	public const int GL_PROXY_TEXTURE_RECTANGLE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PROXY_TEXTURE_RECTANGLE_NV")]
	public const int GL_PROXY_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_PURGEABLE_APPLE")]
	public const int GL_PURGEABLE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Q")]
	public const int GL_Q;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUADRATIC_ATTENUATION")]
	public const int GL_QUADRATIC_ATTENUATION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUADS")]
	public const int GL_QUADS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION")]
	public const int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT")]
	public const int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_ALPHA4_SGIS")]
	public const int GL_QUAD_ALPHA4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_ALPHA8_SGIS")]
	public const int GL_QUAD_ALPHA8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_INTENSITY4_SGIS")]
	public const int GL_QUAD_INTENSITY4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_INTENSITY8_SGIS")]
	public const int GL_QUAD_INTENSITY8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_LUMINANCE4_SGIS")]
	public const int GL_QUAD_LUMINANCE4_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_LUMINANCE8_SGIS")]
	public const int GL_QUAD_LUMINANCE8_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_MESH_SUN")]
	public const int GL_QUAD_MESH_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_STRIP")]
	public const int GL_QUAD_STRIP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUAD_TEXTURE_SELECT_SGIS")]
	public const int GL_QUAD_TEXTURE_SELECT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUARTER_BIT_ATI")]
	public const int GL_QUARTER_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_BY_REGION_NO_WAIT")]
	public const int GL_QUERY_BY_REGION_NO_WAIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_BY_REGION_NO_WAIT_NV")]
	public const int GL_QUERY_BY_REGION_NO_WAIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_BY_REGION_WAIT")]
	public const int GL_QUERY_BY_REGION_WAIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_BY_REGION_WAIT_NV")]
	public const int GL_QUERY_BY_REGION_WAIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_COUNTER_BITS")]
	public const int GL_QUERY_COUNTER_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_COUNTER_BITS_ARB")]
	public const int GL_QUERY_COUNTER_BITS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_NO_WAIT")]
	public const int GL_QUERY_NO_WAIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_NO_WAIT_NV")]
	public const int GL_QUERY_NO_WAIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_OBJECT_AMD")]
	public const int GL_QUERY_OBJECT_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_RESULT")]
	public const int GL_QUERY_RESULT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_RESULT_ARB")]
	public const int GL_QUERY_RESULT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_RESULT_AVAILABLE")]
	public const int GL_QUERY_RESULT_AVAILABLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_RESULT_AVAILABLE_ARB")]
	public const int GL_QUERY_RESULT_AVAILABLE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_WAIT")]
	public const int GL_QUERY_WAIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_QUERY_WAIT_NV")]
	public const int GL_QUERY_WAIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R")]
	public const int GL_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R11F_G11F_B10F")]
	public const int GL_R11F_G11F_B10F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R11F_G11F_B10F_EXT")]
	public const int GL_R11F_G11F_B10F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R16")]
	public const int GL_R16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R16F")]
	public const int GL_R16F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R16I")]
	public const int GL_R16I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R16UI")]
	public const int GL_R16UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R16_SNORM")]
	public const int GL_R16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_C3F_V3F_SUN")]
	public const int GL_R1UI_C3F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_C4F_N3F_V3F_SUN")]
	public const int GL_R1UI_C4F_N3F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_C4UB_V3F_SUN")]
	public const int GL_R1UI_C4UB_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_N3F_V3F_SUN")]
	public const int GL_R1UI_N3F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_T2F_C4F_N3F_V3F_SUN")]
	public const int GL_R1UI_T2F_C4F_N3F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_T2F_N3F_V3F_SUN")]
	public const int GL_R1UI_T2F_N3F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_T2F_V3F_SUN")]
	public const int GL_R1UI_T2F_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R1UI_V3F_SUN")]
	public const int GL_R1UI_V3F_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R32F")]
	public const int GL_R32F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R32I")]
	public const int GL_R32I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R32UI")]
	public const int GL_R32UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R3_G3_B2")]
	public const int GL_R3_G3_B2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R8")]
	public const int GL_R8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R8I")]
	public const int GL_R8I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R8UI")]
	public const int GL_R8UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_R8_SNORM")]
	public const int GL_R8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RASTERIZER_DISCARD")]
	public const int GL_RASTERIZER_DISCARD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RASTERIZER_DISCARD_EXT")]
	public const int GL_RASTERIZER_DISCARD_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RASTERIZER_DISCARD_NV")]
	public const int GL_RASTERIZER_DISCARD_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_BUFFER")]
	public const int GL_READ_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_BUFFER_NV")]
	public const int GL_READ_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_FRAMEBUFFER")]
	public const int GL_READ_FRAMEBUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_FRAMEBUFFER_ANGLE")]
	public const int GL_READ_FRAMEBUFFER_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_FRAMEBUFFER_BINDING")]
	public const int GL_READ_FRAMEBUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_FRAMEBUFFER_BINDING_EXT")]
	public const int GL_READ_FRAMEBUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_FRAMEBUFFER_EXT")]
	public const int GL_READ_FRAMEBUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_ONLY")]
	public const int GL_READ_ONLY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_ONLY_ARB")]
	public const int GL_READ_ONLY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV")]
	public const int GL_READ_PIXEL_DATA_RANGE_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_PIXEL_DATA_RANGE_NV")]
	public const int GL_READ_PIXEL_DATA_RANGE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_PIXEL_DATA_RANGE_POINTER_NV")]
	public const int GL_READ_PIXEL_DATA_RANGE_POINTER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_WRITE")]
	public const int GL_READ_WRITE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_READ_WRITE_ARB")]
	public const int GL_READ_WRITE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RECIP_ADD_SIGNED_ALPHA_IMG")]
	public const int GL_RECIP_ADD_SIGNED_ALPHA_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED")]
	public const int GL_RED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REDUCE")]
	public const int GL_REDUCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REDUCE_EXT")]
	public const int GL_REDUCE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_BIAS")]
	public const int GL_RED_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_BITS")]
	public const int GL_RED_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_BIT_ATI")]
	public const int GL_RED_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_INTEGER")]
	public const int GL_RED_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_INTEGER_EXT")]
	public const int GL_RED_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_MAX_CLAMP_INGR")]
	public const int GL_RED_MAX_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_MIN_CLAMP_INGR")]
	public const int GL_RED_MIN_CLAMP_INGR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_SCALE")]
	public const int GL_RED_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RED_SNORM")]
	public const int GL_RED_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFERENCE_PLANE_EQUATION_SGIX")]
	public const int GL_REFERENCE_PLANE_EQUATION_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFERENCE_PLANE_SGIX")]
	public const int GL_REFERENCE_PLANE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFLECTION_MAP")]
	public const int GL_REFLECTION_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFLECTION_MAP_ARB")]
	public const int GL_REFLECTION_MAP_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFLECTION_MAP_EXT")]
	public const int GL_REFLECTION_MAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REFLECTION_MAP_OES")]
	public const int GL_REFLECTION_MAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REGISTER_COMBINERS_NV")]
	public const int GL_REGISTER_COMBINERS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_0_ATI")]
	public const int GL_REG_0_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_10_ATI")]
	public const int GL_REG_10_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_11_ATI")]
	public const int GL_REG_11_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_12_ATI")]
	public const int GL_REG_12_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_13_ATI")]
	public const int GL_REG_13_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_14_ATI")]
	public const int GL_REG_14_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_15_ATI")]
	public const int GL_REG_15_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_16_ATI")]
	public const int GL_REG_16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_17_ATI")]
	public const int GL_REG_17_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_18_ATI")]
	public const int GL_REG_18_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_19_ATI")]
	public const int GL_REG_19_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_1_ATI")]
	public const int GL_REG_1_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_20_ATI")]
	public const int GL_REG_20_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_21_ATI")]
	public const int GL_REG_21_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_22_ATI")]
	public const int GL_REG_22_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_23_ATI")]
	public const int GL_REG_23_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_24_ATI")]
	public const int GL_REG_24_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_25_ATI")]
	public const int GL_REG_25_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_26_ATI")]
	public const int GL_REG_26_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_27_ATI")]
	public const int GL_REG_27_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_28_ATI")]
	public const int GL_REG_28_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_29_ATI")]
	public const int GL_REG_29_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_2_ATI")]
	public const int GL_REG_2_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_30_ATI")]
	public const int GL_REG_30_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_31_ATI")]
	public const int GL_REG_31_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_3_ATI")]
	public const int GL_REG_3_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_4_ATI")]
	public const int GL_REG_4_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_5_ATI")]
	public const int GL_REG_5_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_6_ATI")]
	public const int GL_REG_6_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_7_ATI")]
	public const int GL_REG_7_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_8_ATI")]
	public const int GL_REG_8_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REG_9_ATI")]
	public const int GL_REG_9_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RELEASED_APPLE")]
	public const int GL_RELEASED_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDER")]
	public const int GL_RENDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER")]
	public const int GL_RENDERBUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_ALPHA_SIZE")]
	public const int GL_RENDERBUFFER_ALPHA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_ALPHA_SIZE_EXT")]
	public const int GL_RENDERBUFFER_ALPHA_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_ALPHA_SIZE_OES")]
	public const int GL_RENDERBUFFER_ALPHA_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BINDING")]
	public const int GL_RENDERBUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BINDING_ANGLE")]
	public const int GL_RENDERBUFFER_BINDING_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BINDING_EXT")]
	public const int GL_RENDERBUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BINDING_OES")]
	public const int GL_RENDERBUFFER_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BLUE_SIZE")]
	public const int GL_RENDERBUFFER_BLUE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BLUE_SIZE_EXT")]
	public const int GL_RENDERBUFFER_BLUE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_BLUE_SIZE_OES")]
	public const int GL_RENDERBUFFER_BLUE_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_COLOR_SAMPLES_NV")]
	public const int GL_RENDERBUFFER_COLOR_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV")]
	public const int GL_RENDERBUFFER_COVERAGE_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_DEPTH_SIZE")]
	public const int GL_RENDERBUFFER_DEPTH_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_DEPTH_SIZE_EXT")]
	public const int GL_RENDERBUFFER_DEPTH_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_DEPTH_SIZE_OES")]
	public const int GL_RENDERBUFFER_DEPTH_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_EXT")]
	public const int GL_RENDERBUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_FREE_MEMORY_ATI")]
	public const int GL_RENDERBUFFER_FREE_MEMORY_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_GREEN_SIZE")]
	public const int GL_RENDERBUFFER_GREEN_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_GREEN_SIZE_EXT")]
	public const int GL_RENDERBUFFER_GREEN_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_GREEN_SIZE_OES")]
	public const int GL_RENDERBUFFER_GREEN_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_HEIGHT")]
	public const int GL_RENDERBUFFER_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_HEIGHT_EXT")]
	public const int GL_RENDERBUFFER_HEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_HEIGHT_OES")]
	public const int GL_RENDERBUFFER_HEIGHT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_INTERNAL_FORMAT")]
	public const int GL_RENDERBUFFER_INTERNAL_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT")]
	public const int GL_RENDERBUFFER_INTERNAL_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_INTERNAL_FORMAT_OES")]
	public const int GL_RENDERBUFFER_INTERNAL_FORMAT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_OES")]
	public const int GL_RENDERBUFFER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_RED_SIZE")]
	public const int GL_RENDERBUFFER_RED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_RED_SIZE_EXT")]
	public const int GL_RENDERBUFFER_RED_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_RED_SIZE_OES")]
	public const int GL_RENDERBUFFER_RED_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_SAMPLES")]
	public const int GL_RENDERBUFFER_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_SAMPLES_ANGLE")]
	public const int GL_RENDERBUFFER_SAMPLES_ANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_SAMPLES_EXT")]
	public const int GL_RENDERBUFFER_SAMPLES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_SAMPLES_IMG")]
	public const int GL_RENDERBUFFER_SAMPLES_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_STENCIL_SIZE")]
	public const int GL_RENDERBUFFER_STENCIL_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_STENCIL_SIZE_EXT")]
	public const int GL_RENDERBUFFER_STENCIL_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_STENCIL_SIZE_OES")]
	public const int GL_RENDERBUFFER_STENCIL_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_WIDTH")]
	public const int GL_RENDERBUFFER_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_WIDTH_EXT")]
	public const int GL_RENDERBUFFER_WIDTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERBUFFER_WIDTH_OES")]
	public const int GL_RENDERBUFFER_WIDTH_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDERER")]
	public const int GL_RENDERER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RENDER_MODE")]
	public const int GL_RENDER_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPEAT")]
	public const int GL_REPEAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACE")]
	public const int GL_REPLACE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN")]
	public const int GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN")]
	public const int GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACEMENT_CODE_ARRAY_SUN")]
	public const int GL_REPLACEMENT_CODE_ARRAY_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN")]
	public const int GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACEMENT_CODE_SUN")]
	public const int GL_REPLACEMENT_CODE_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACE_EXT")]
	public const int GL_REPLACE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACE_MIDDLE_SUN")]
	public const int GL_REPLACE_MIDDLE_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLACE_OLDEST_SUN")]
	public const int GL_REPLACE_OLDEST_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLICATE_BORDER")]
	public const int GL_REPLICATE_BORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REPLICATE_BORDER_HP")]
	public const int GL_REPLICATE_BORDER_HP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES")]
	public const int GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_AVERAGE_OML")]
	public const int GL_RESAMPLE_AVERAGE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_DECIMATE_OML")]
	public const int GL_RESAMPLE_DECIMATE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_DECIMATE_SGIX")]
	public const int GL_RESAMPLE_DECIMATE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_REPLICATE_OML")]
	public const int GL_RESAMPLE_REPLICATE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_REPLICATE_SGIX")]
	public const int GL_RESAMPLE_REPLICATE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_ZERO_FILL_OML")]
	public const int GL_RESAMPLE_ZERO_FILL_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESAMPLE_ZERO_FILL_SGIX")]
	public const int GL_RESAMPLE_ZERO_FILL_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESCALE_NORMAL")]
	public const int GL_RESCALE_NORMAL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESCALE_NORMAL_EXT")]
	public const int GL_RESCALE_NORMAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESET_NOTIFICATION_STRATEGY_ARB")]
	public const int GL_RESET_NOTIFICATION_STRATEGY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RESTART_SUN")]
	public const int GL_RESTART_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RETAINED_APPLE")]
	public const int GL_RETAINED_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RETURN")]
	public const int GL_RETURN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG")]
	public const int GL_RG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG16")]
	public const int GL_RG16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG16F")]
	public const int GL_RG16F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG16I")]
	public const int GL_RG16I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG16UI")]
	public const int GL_RG16UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG16_SNORM")]
	public const int GL_RG16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG32F")]
	public const int GL_RG32F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG32I")]
	public const int GL_RG32I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG32UI")]
	public const int GL_RG32UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG8")]
	public const int GL_RG8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG8I")]
	public const int GL_RG8I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG8UI")]
	public const int GL_RG8UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG8_SNORM")]
	public const int GL_RG8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB")]
	public const int GL_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB10")]
	public const int GL_RGB10;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB10_A2")]
	public const int GL_RGB10_A2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB10_A2UI")]
	public const int GL_RGB10_A2UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB10_A2_EXT")]
	public const int GL_RGB10_A2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB10_EXT")]
	public const int GL_RGB10_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB12")]
	public const int GL_RGB12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB12_EXT")]
	public const int GL_RGB12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16")]
	public const int GL_RGB16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16F")]
	public const int GL_RGB16F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16F_ARB")]
	public const int GL_RGB16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16I")]
	public const int GL_RGB16I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16I_EXT")]
	public const int GL_RGB16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16UI")]
	public const int GL_RGB16UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16UI_EXT")]
	public const int GL_RGB16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16_EXT")]
	public const int GL_RGB16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB16_SNORM")]
	public const int GL_RGB16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB2_EXT")]
	public const int GL_RGB2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32F")]
	public const int GL_RGB32F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32F_ARB")]
	public const int GL_RGB32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32I")]
	public const int GL_RGB32I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32I_EXT")]
	public const int GL_RGB32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32UI")]
	public const int GL_RGB32UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB32UI_EXT")]
	public const int GL_RGB32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB4")]
	public const int GL_RGB4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB4_EXT")]
	public const int GL_RGB4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB4_S3TC")]
	public const int GL_RGB4_S3TC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB5")]
	public const int GL_RGB5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB565_OES")]
	public const int GL_RGB565_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB5_A1")]
	public const int GL_RGB5_A1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB5_A1_EXT")]
	public const int GL_RGB5_A1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB5_A1_OES")]
	public const int GL_RGB5_A1_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB5_EXT")]
	public const int GL_RGB5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8")]
	public const int GL_RGB8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8I")]
	public const int GL_RGB8I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8I_EXT")]
	public const int GL_RGB8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8UI")]
	public const int GL_RGB8UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8UI_EXT")]
	public const int GL_RGB8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8_EXT")]
	public const int GL_RGB8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB8_SNORM")]
	public const int GL_RGB8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB9_E5")]
	public const int GL_RGB9_E5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB9_E5_EXT")]
	public const int GL_RGB9_E5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA")]
	public const int GL_RGBA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA12")]
	public const int GL_RGBA12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA12_EXT")]
	public const int GL_RGBA12_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16")]
	public const int GL_RGBA16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16F")]
	public const int GL_RGBA16F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16F_ARB")]
	public const int GL_RGBA16F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16I")]
	public const int GL_RGBA16I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16I_EXT")]
	public const int GL_RGBA16I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16UI")]
	public const int GL_RGBA16UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16UI_EXT")]
	public const int GL_RGBA16UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16_EXT")]
	public const int GL_RGBA16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA16_SNORM")]
	public const int GL_RGBA16_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA2")]
	public const int GL_RGBA2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA2_EXT")]
	public const int GL_RGBA2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32F")]
	public const int GL_RGBA32F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32F_ARB")]
	public const int GL_RGBA32F_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32I")]
	public const int GL_RGBA32I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32I_EXT")]
	public const int GL_RGBA32I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32UI")]
	public const int GL_RGBA32UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA32UI_EXT")]
	public const int GL_RGBA32UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA4")]
	public const int GL_RGBA4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA4_EXT")]
	public const int GL_RGBA4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA4_OES")]
	public const int GL_RGBA4_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA4_S3TC")]
	public const int GL_RGBA4_S3TC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8")]
	public const int GL_RGBA8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8I")]
	public const int GL_RGBA8I;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8I_EXT")]
	public const int GL_RGBA8I_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8UI")]
	public const int GL_RGBA8UI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8UI_EXT")]
	public const int GL_RGBA8UI_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8_EXT")]
	public const int GL_RGBA8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA8_SNORM")]
	public const int GL_RGBA8_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_FLOAT16_APPLE")]
	public const int GL_RGBA_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_FLOAT16_ATI")]
	public const int GL_RGBA_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_FLOAT32_APPLE")]
	public const int GL_RGBA_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_FLOAT32_ATI")]
	public const int GL_RGBA_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_FLOAT_MODE_ARB")]
	public const int GL_RGBA_FLOAT_MODE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_INTEGER")]
	public const int GL_RGBA_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_INTEGER_EXT")]
	public const int GL_RGBA_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_INTEGER_MODE_EXT")]
	public const int GL_RGBA_INTEGER_MODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_MODE")]
	public const int GL_RGBA_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_S3TC")]
	public const int GL_RGBA_S3TC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_SIGNED_COMPONENTS_EXT")]
	public const int GL_RGBA_SIGNED_COMPONENTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_SNORM")]
	public const int GL_RGBA_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV")]
	public const int GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_422_APPLE")]
	public const int GL_RGB_422_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_FLOAT16_APPLE")]
	public const int GL_RGB_FLOAT16_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_FLOAT16_ATI")]
	public const int GL_RGB_FLOAT16_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_FLOAT32_APPLE")]
	public const int GL_RGB_FLOAT32_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_FLOAT32_ATI")]
	public const int GL_RGB_FLOAT32_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_INTEGER")]
	public const int GL_RGB_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_INTEGER_EXT")]
	public const int GL_RGB_INTEGER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_S3TC")]
	public const int GL_RGB_S3TC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_SCALE")]
	public const int GL_RGB_SCALE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_SCALE_EXT")]
	public const int GL_RGB_SCALE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RGB_SNORM")]
	public const int GL_RGB_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG_INTEGER")]
	public const int GL_RG_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RG_SNORM")]
	public const int GL_RG_SNORM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_RIGHT")]
	public const int GL_RIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_S")]
	public const int GL_S;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D")]
	public const int GL_SAMPLER_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_ARB")]
	public const int GL_SAMPLER_1D_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_ARRAY")]
	public const int GL_SAMPLER_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_ARRAY_EXT")]
	public const int GL_SAMPLER_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_ARRAY_SHADOW")]
	public const int GL_SAMPLER_1D_ARRAY_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_ARRAY_SHADOW_EXT")]
	public const int GL_SAMPLER_1D_ARRAY_SHADOW_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_SHADOW")]
	public const int GL_SAMPLER_1D_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_1D_SHADOW_ARB")]
	public const int GL_SAMPLER_1D_SHADOW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D")]
	public const int GL_SAMPLER_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_ARB")]
	public const int GL_SAMPLER_2D_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_ARRAY")]
	public const int GL_SAMPLER_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_ARRAY_EXT")]
	public const int GL_SAMPLER_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_ARRAY_SHADOW")]
	public const int GL_SAMPLER_2D_ARRAY_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_ARRAY_SHADOW_EXT")]
	public const int GL_SAMPLER_2D_ARRAY_SHADOW_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_MULTISAMPLE")]
	public const int GL_SAMPLER_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_MULTISAMPLE_ARRAY")]
	public const int GL_SAMPLER_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_RECT")]
	public const int GL_SAMPLER_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_RECT_ARB")]
	public const int GL_SAMPLER_2D_RECT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_RECT_SHADOW")]
	public const int GL_SAMPLER_2D_RECT_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_RECT_SHADOW_ARB")]
	public const int GL_SAMPLER_2D_RECT_SHADOW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_SHADOW")]
	public const int GL_SAMPLER_2D_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_2D_SHADOW_ARB")]
	public const int GL_SAMPLER_2D_SHADOW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_3D")]
	public const int GL_SAMPLER_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_3D_ARB")]
	public const int GL_SAMPLER_3D_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_3D_OES")]
	public const int GL_SAMPLER_3D_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_BINDING")]
	public const int GL_SAMPLER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_BUFFER")]
	public const int GL_SAMPLER_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_BUFFER_AMD")]
	public const int GL_SAMPLER_BUFFER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_BUFFER_EXT")]
	public const int GL_SAMPLER_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE")]
	public const int GL_SAMPLER_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE_ARB")]
	public const int GL_SAMPLER_CUBE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE_MAP_ARRAY")]
	public const int GL_SAMPLER_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW")]
	public const int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE_SHADOW")]
	public const int GL_SAMPLER_CUBE_SHADOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_CUBE_SHADOW_EXT")]
	public const int GL_SAMPLER_CUBE_SHADOW_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_EXTERNAL_OES")]
	public const int GL_SAMPLER_EXTERNAL_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_OBJECT_AMD")]
	public const int GL_SAMPLER_OBJECT_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLER_RENDERBUFFER_NV")]
	public const int GL_SAMPLER_RENDERBUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES")]
	public const int GL_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_3DFX")]
	public const int GL_SAMPLES_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_ARB")]
	public const int GL_SAMPLES_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_EXT")]
	public const int GL_SAMPLES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_PASSED")]
	public const int GL_SAMPLES_PASSED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_PASSED_ARB")]
	public const int GL_SAMPLES_PASSED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLES_SGIS")]
	public const int GL_SAMPLES_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_COVERAGE")]
	public const int GL_SAMPLE_ALPHA_TO_COVERAGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_COVERAGE_ARB")]
	public const int GL_SAMPLE_ALPHA_TO_COVERAGE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_MASK_EXT")]
	public const int GL_SAMPLE_ALPHA_TO_MASK_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_MASK_SGIS")]
	public const int GL_SAMPLE_ALPHA_TO_MASK_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_ONE")]
	public const int GL_SAMPLE_ALPHA_TO_ONE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_ONE_ARB")]
	public const int GL_SAMPLE_ALPHA_TO_ONE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_ONE_EXT")]
	public const int GL_SAMPLE_ALPHA_TO_ONE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_ALPHA_TO_ONE_SGIS")]
	public const int GL_SAMPLE_ALPHA_TO_ONE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_BUFFERS")]
	public const int GL_SAMPLE_BUFFERS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_BUFFERS_3DFX")]
	public const int GL_SAMPLE_BUFFERS_3DFX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_BUFFERS_ARB")]
	public const int GL_SAMPLE_BUFFERS_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_BUFFERS_EXT")]
	public const int GL_SAMPLE_BUFFERS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_BUFFERS_SGIS")]
	public const int GL_SAMPLE_BUFFERS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE")]
	public const int GL_SAMPLE_COVERAGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE_ARB")]
	public const int GL_SAMPLE_COVERAGE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE_INVERT")]
	public const int GL_SAMPLE_COVERAGE_INVERT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE_INVERT_ARB")]
	public const int GL_SAMPLE_COVERAGE_INVERT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE_VALUE")]
	public const int GL_SAMPLE_COVERAGE_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_COVERAGE_VALUE_ARB")]
	public const int GL_SAMPLE_COVERAGE_VALUE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK")]
	public const int GL_SAMPLE_MASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_EXT")]
	public const int GL_SAMPLE_MASK_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_INVERT_EXT")]
	public const int GL_SAMPLE_MASK_INVERT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_INVERT_SGIS")]
	public const int GL_SAMPLE_MASK_INVERT_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_NV")]
	public const int GL_SAMPLE_MASK_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_SGIS")]
	public const int GL_SAMPLE_MASK_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_VALUE")]
	public const int GL_SAMPLE_MASK_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_VALUE_EXT")]
	public const int GL_SAMPLE_MASK_VALUE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_VALUE_NV")]
	public const int GL_SAMPLE_MASK_VALUE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_MASK_VALUE_SGIS")]
	public const int GL_SAMPLE_MASK_VALUE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_PATTERN_EXT")]
	public const int GL_SAMPLE_PATTERN_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_PATTERN_SGIS")]
	public const int GL_SAMPLE_PATTERN_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_POSITION")]
	public const int GL_SAMPLE_POSITION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_POSITION_NV")]
	public const int GL_SAMPLE_POSITION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SAMPLE_SHADING_ARB")]
	public const int GL_SAMPLE_SHADING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SATURATE_BIT_ATI")]
	public const int GL_SATURATE_BIT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALAR_EXT")]
	public const int GL_SCALAR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALEBIAS_HINT_SGIX")]
	public const int GL_SCALEBIAS_HINT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALED_RESOLVE_FASTEST_EXT")]
	public const int GL_SCALED_RESOLVE_FASTEST_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALED_RESOLVE_NICEST_EXT")]
	public const int GL_SCALED_RESOLVE_NICEST_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALE_BY_FOUR_NV")]
	public const int GL_SCALE_BY_FOUR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALE_BY_ONE_HALF_NV")]
	public const int GL_SCALE_BY_ONE_HALF_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCALE_BY_TWO_NV")]
	public const int GL_SCALE_BY_TWO_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCISSOR_BIT")]
	public const int GL_SCISSOR_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCISSOR_BOX")]
	public const int GL_SCISSOR_BOX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCISSOR_TEST")]
	public const int GL_SCISSOR_TEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SCREEN_COORDINATES_REND")]
	public const int GL_SCREEN_COORDINATES_REND;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY")]
	public const int GL_SECONDARY_COLOR_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV")]
	public const int GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING")]
	public const int GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_EXT")]
	public const int GL_SECONDARY_COLOR_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV")]
	public const int GL_SECONDARY_COLOR_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_POINTER")]
	public const int GL_SECONDARY_COLOR_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_POINTER_EXT")]
	public const int GL_SECONDARY_COLOR_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_SIZE")]
	public const int GL_SECONDARY_COLOR_ARRAY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_SIZE_EXT")]
	public const int GL_SECONDARY_COLOR_ARRAY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_STRIDE")]
	public const int GL_SECONDARY_COLOR_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT")]
	public const int GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_TYPE")]
	public const int GL_SECONDARY_COLOR_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_ARRAY_TYPE_EXT")]
	public const int GL_SECONDARY_COLOR_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_COLOR_NV")]
	public const int GL_SECONDARY_COLOR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SECONDARY_INTERPOLATOR_ATI")]
	public const int GL_SECONDARY_INTERPOLATOR_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SELECT")]
	public const int GL_SELECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SELECTION_BUFFER_POINTER")]
	public const int GL_SELECTION_BUFFER_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SELECTION_BUFFER_SIZE")]
	public const int GL_SELECTION_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARABLE_2D")]
	public const int GL_SEPARABLE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARABLE_2D_EXT")]
	public const int GL_SEPARABLE_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARATE_ATTRIBS")]
	public const int GL_SEPARATE_ATTRIBS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARATE_ATTRIBS_EXT")]
	public const int GL_SEPARATE_ATTRIBS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARATE_ATTRIBS_NV")]
	public const int GL_SEPARATE_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARATE_SPECULAR_COLOR")]
	public const int GL_SEPARATE_SPECULAR_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SEPARATE_SPECULAR_COLOR_EXT")]
	public const int GL_SEPARATE_SPECULAR_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SET")]
	public const int GL_SET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_detail_texture")]
	public const int GL_SGIS_detail_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_fog_function")]
	public const int GL_SGIS_fog_function;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_generate_mipmap")]
	public const int GL_SGIS_generate_mipmap;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_multisample")]
	public const int GL_SGIS_multisample;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_pixel_texture")]
	public const int GL_SGIS_pixel_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_point_line_texgen")]
	public const int GL_SGIS_point_line_texgen;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_point_parameters")]
	public const int GL_SGIS_point_parameters;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_sharpen_texture")]
	public const int GL_SGIS_sharpen_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture4D")]
	public const int GL_SGIS_texture4D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture_border_clamp")]
	public const int GL_SGIS_texture_border_clamp;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture_edge_clamp")]
	public const int GL_SGIS_texture_edge_clamp;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture_filter4")]
	public const int GL_SGIS_texture_filter4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture_lod")]
	public const int GL_SGIS_texture_lod;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIS_texture_select")]
	public const int GL_SGIS_texture_select;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_async")]
	public const int GL_SGIX_async;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_async_histogram")]
	public const int GL_SGIX_async_histogram;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_async_pixel")]
	public const int GL_SGIX_async_pixel;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_blend_alpha_minmax")]
	public const int GL_SGIX_blend_alpha_minmax;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_calligraphic_fragment")]
	public const int GL_SGIX_calligraphic_fragment;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_clipmap")]
	public const int GL_SGIX_clipmap;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_convolution_accuracy")]
	public const int GL_SGIX_convolution_accuracy;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_depth_texture")]
	public const int GL_SGIX_depth_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_flush_raster")]
	public const int GL_SGIX_flush_raster;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_fog_offset")]
	public const int GL_SGIX_fog_offset;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_fragment_lighting")]
	public const int GL_SGIX_fragment_lighting;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_framezoom")]
	public const int GL_SGIX_framezoom;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_icc_texture")]
	public const int GL_SGIX_icc_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_impact_pixel_texture")]
	public const int GL_SGIX_impact_pixel_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_instruments")]
	public const int GL_SGIX_instruments;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_interlace")]
	public const int GL_SGIX_interlace;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_ir_instrument1")]
	public const int GL_SGIX_ir_instrument1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_list_priority")]
	public const int GL_SGIX_list_priority;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_pixel_texture")]
	public const int GL_SGIX_pixel_texture;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_pixel_tiles")]
	public const int GL_SGIX_pixel_tiles;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_polynomial_ffd")]
	public const int GL_SGIX_polynomial_ffd;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_reference_plane")]
	public const int GL_SGIX_reference_plane;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_resample")]
	public const int GL_SGIX_resample;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_scalebias_hint")]
	public const int GL_SGIX_scalebias_hint;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_shadow")]
	public const int GL_SGIX_shadow;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_shadow_ambient")]
	public const int GL_SGIX_shadow_ambient;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_sprite")]
	public const int GL_SGIX_sprite;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_subsample")]
	public const int GL_SGIX_subsample;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_tag_sample_buffer")]
	public const int GL_SGIX_tag_sample_buffer;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_texture_add_env")]
	public const int GL_SGIX_texture_add_env;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_texture_coordinate_clamp")]
	public const int GL_SGIX_texture_coordinate_clamp;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_texture_lod_bias")]
	public const int GL_SGIX_texture_lod_bias;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_texture_multi_buffer")]
	public const int GL_SGIX_texture_multi_buffer;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_texture_scale_bias")]
	public const int GL_SGIX_texture_scale_bias;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_vertex_preclip")]
	public const int GL_SGIX_vertex_preclip;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGIX_ycrcb")]
	public const int GL_SGIX_ycrcb;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGI_color_matrix")]
	public const int GL_SGI_color_matrix;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGI_color_table")]
	public const int GL_SGI_color_table;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGI_texture_color_table")]
	public const int GL_SGI_texture_color_table;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGX_BINARY_IMG")]
	public const int GL_SGX_BINARY_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SGX_PROGRAM_BINARY_IMG")]
	public const int GL_SGX_PROGRAM_BINARY_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_BINARY_DMP")]
	public const int GL_SHADER_BINARY_DMP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_BINARY_FORMATS")]
	public const int GL_SHADER_BINARY_FORMATS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_BINARY_VIV")]
	public const int GL_SHADER_BINARY_VIV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_COMPILER")]
	public const int GL_SHADER_COMPILER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_CONSISTENT_NV")]
	public const int GL_SHADER_CONSISTENT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV")]
	public const int GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT")]
	public const int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT")]
	public const int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_INCLUDE_ARB")]
	public const int GL_SHADER_INCLUDE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_OBJECT_ARB")]
	public const int GL_SHADER_OBJECT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_OPERATION_NV")]
	public const int GL_SHADER_OPERATION_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_SOURCE_LENGTH")]
	public const int GL_SHADER_SOURCE_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADER_TYPE")]
	public const int GL_SHADER_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADE_MODEL")]
	public const int GL_SHADE_MODEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADING_LANGUAGE_VERSION")]
	public const int GL_SHADING_LANGUAGE_VERSION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADING_LANGUAGE_VERSION_ARB")]
	public const int GL_SHADING_LANGUAGE_VERSION_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADOW_AMBIENT_SGIX")]
	public const int GL_SHADOW_AMBIENT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHADOW_ATTENUATION_EXT")]
	public const int GL_SHADOW_ATTENUATION_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHARED_TEXTURE_PALETTE_EXT")]
	public const int GL_SHARED_TEXTURE_PALETTE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS")]
	public const int GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHININESS")]
	public const int GL_SHININESS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SHORT")]
	public const int GL_SHORT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNALED")]
	public const int GL_SIGNALED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_ALPHA8_NV")]
	public const int GL_SIGNED_ALPHA8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_ALPHA_NV")]
	public const int GL_SIGNED_ALPHA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_HILO16_NV")]
	public const int GL_SIGNED_HILO16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_HILO8_NV")]
	public const int GL_SIGNED_HILO8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_HILO_NV")]
	public const int GL_SIGNED_HILO_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_IDENTITY_NV")]
	public const int GL_SIGNED_IDENTITY_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_INTENSITY8_NV")]
	public const int GL_SIGNED_INTENSITY8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_INTENSITY_NV")]
	public const int GL_SIGNED_INTENSITY_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_LUMINANCE8_ALPHA8_NV")]
	public const int GL_SIGNED_LUMINANCE8_ALPHA8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_LUMINANCE8_NV")]
	public const int GL_SIGNED_LUMINANCE8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_LUMINANCE_ALPHA_NV")]
	public const int GL_SIGNED_LUMINANCE_ALPHA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_LUMINANCE_NV")]
	public const int GL_SIGNED_LUMINANCE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_NORMALIZED")]
	public const int GL_SIGNED_NORMALIZED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGB8_NV")]
	public const int GL_SIGNED_RGB8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV")]
	public const int GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGBA8_NV")]
	public const int GL_SIGNED_RGBA8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGBA_NV")]
	public const int GL_SIGNED_RGBA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGB_NV")]
	public const int GL_SIGNED_RGB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV")]
	public const int GL_SIGNED_RGB_UNSIGNED_ALPHA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SINGLE_COLOR")]
	public const int GL_SINGLE_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SINGLE_COLOR_EXT")]
	public const int GL_SINGLE_COLOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SKIP_COMPONENTS1_NV")]
	public const int GL_SKIP_COMPONENTS1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SKIP_COMPONENTS2_NV")]
	public const int GL_SKIP_COMPONENTS2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SKIP_COMPONENTS3_NV")]
	public const int GL_SKIP_COMPONENTS3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SKIP_COMPONENTS4_NV")]
	public const int GL_SKIP_COMPONENTS4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SKIP_DECODE_EXT")]
	public const int GL_SKIP_DECODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLICE_ACCUM_SUN")]
	public const int GL_SLICE_ACCUM_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLIM10U_SGIX")]
	public const int GL_SLIM10U_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLIM12S_SGIX")]
	public const int GL_SLIM12S_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLIM8U_SGIX")]
	public const int GL_SLIM8U_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE")]
	public const int GL_SLUMINANCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE8")]
	public const int GL_SLUMINANCE8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE8_ALPHA8")]
	public const int GL_SLUMINANCE8_ALPHA8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE8_ALPHA8_EXT")]
	public const int GL_SLUMINANCE8_ALPHA8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE8_EXT")]
	public const int GL_SLUMINANCE8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE_ALPHA")]
	public const int GL_SLUMINANCE_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE_ALPHA_EXT")]
	public const int GL_SLUMINANCE_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SLUMINANCE_EXT")]
	public const int GL_SLUMINANCE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SMOOTH")]
	public const int GL_SMOOTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SMOOTH_LINE_WIDTH_GRANULARITY")]
	public const int GL_SMOOTH_LINE_WIDTH_GRANULARITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SMOOTH_LINE_WIDTH_RANGE")]
	public const int GL_SMOOTH_LINE_WIDTH_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SMOOTH_POINT_SIZE_GRANULARITY")]
	public const int GL_SMOOTH_POINT_SIZE_GRANULARITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SMOOTH_POINT_SIZE_RANGE")]
	public const int GL_SMOOTH_POINT_SIZE_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE0_ALPHA")]
	public const int GL_SOURCE0_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE0_ALPHA_EXT")]
	public const int GL_SOURCE0_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE0_RGB")]
	public const int GL_SOURCE0_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE0_RGB_EXT")]
	public const int GL_SOURCE0_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE1_ALPHA")]
	public const int GL_SOURCE1_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE1_ALPHA_EXT")]
	public const int GL_SOURCE1_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE1_RGB")]
	public const int GL_SOURCE1_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE1_RGB_EXT")]
	public const int GL_SOURCE1_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE2_ALPHA")]
	public const int GL_SOURCE2_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE2_ALPHA_EXT")]
	public const int GL_SOURCE2_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE2_RGB")]
	public const int GL_SOURCE2_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE2_RGB_EXT")]
	public const int GL_SOURCE2_RGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE3_ALPHA_NV")]
	public const int GL_SOURCE3_ALPHA_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SOURCE3_RGB_NV")]
	public const int GL_SOURCE3_RGB_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPARE0_NV")]
	public const int GL_SPARE0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPARE0_PLUS_SECONDARY_COLOR_NV")]
	public const int GL_SPARE0_PLUS_SECONDARY_COLOR_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPARE1_NV")]
	public const int GL_SPARE1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPECULAR")]
	public const int GL_SPECULAR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPHERE_MAP")]
	public const int GL_SPHERE_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPOT_CUTOFF")]
	public const int GL_SPOT_CUTOFF;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPOT_DIRECTION")]
	public const int GL_SPOT_DIRECTION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPOT_EXPONENT")]
	public const int GL_SPOT_EXPONENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_AXIAL_SGIX")]
	public const int GL_SPRITE_AXIAL_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_AXIS_SGIX")]
	public const int GL_SPRITE_AXIS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_EYE_ALIGNED_SGIX")]
	public const int GL_SPRITE_EYE_ALIGNED_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_MODE_SGIX")]
	public const int GL_SPRITE_MODE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_OBJECT_ALIGNED_SGIX")]
	public const int GL_SPRITE_OBJECT_ALIGNED_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_SGIX")]
	public const int GL_SPRITE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SPRITE_TRANSLATION_SGIX")]
	public const int GL_SPRITE_TRANSLATION_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC0_ALPHA")]
	public const int GL_SRC0_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC0_RGB")]
	public const int GL_SRC0_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC1_ALPHA")]
	public const int GL_SRC1_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC1_COLOR")]
	public const int GL_SRC1_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC1_RGB")]
	public const int GL_SRC1_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC2_ALPHA")]
	public const int GL_SRC2_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC2_RGB")]
	public const int GL_SRC2_RGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC_ALPHA")]
	public const int GL_SRC_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC_ALPHA_SATURATE")]
	public const int GL_SRC_ALPHA_SATURATE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRC_COLOR")]
	public const int GL_SRC_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB")]
	public const int GL_SRGB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB8")]
	public const int GL_SRGB8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB8_ALPHA8")]
	public const int GL_SRGB8_ALPHA8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB8_ALPHA8_EXT")]
	public const int GL_SRGB8_ALPHA8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB8_EXT")]
	public const int GL_SRGB8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB_ALPHA")]
	public const int GL_SRGB_ALPHA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB_ALPHA_EXT")]
	public const int GL_SRGB_ALPHA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SRGB_EXT")]
	public const int GL_SRGB_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STACK_OVERFLOW")]
	public const int GL_STACK_OVERFLOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STACK_UNDERFLOW")]
	public const int GL_STACK_UNDERFLOW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATE_RESTORE")]
	public const int GL_STATE_RESTORE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_ATI")]
	public const int GL_STATIC_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_COPY")]
	public const int GL_STATIC_COPY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_COPY_ARB")]
	public const int GL_STATIC_COPY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_DRAW")]
	public const int GL_STATIC_DRAW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_DRAW_ARB")]
	public const int GL_STATIC_DRAW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_READ")]
	public const int GL_STATIC_READ;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STATIC_READ_ARB")]
	public const int GL_STATIC_READ_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL")]
	public const int GL_STENCIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_ATTACHMENT")]
	public const int GL_STENCIL_ATTACHMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_ATTACHMENT_EXT")]
	public const int GL_STENCIL_ATTACHMENT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_ATTACHMENT_OES")]
	public const int GL_STENCIL_ATTACHMENT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_FAIL")]
	public const int GL_STENCIL_BACK_FAIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_FAIL_ATI")]
	public const int GL_STENCIL_BACK_FAIL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_FUNC")]
	public const int GL_STENCIL_BACK_FUNC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_FUNC_ATI")]
	public const int GL_STENCIL_BACK_FUNC_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_PASS_DEPTH_FAIL")]
	public const int GL_STENCIL_BACK_PASS_DEPTH_FAIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI")]
	public const int GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_PASS_DEPTH_PASS")]
	public const int GL_STENCIL_BACK_PASS_DEPTH_PASS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI")]
	public const int GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_REF")]
	public const int GL_STENCIL_BACK_REF;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_VALUE_MASK")]
	public const int GL_STENCIL_BACK_VALUE_MASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BACK_WRITEMASK")]
	public const int GL_STENCIL_BACK_WRITEMASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BITS")]
	public const int GL_STENCIL_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BUFFER")]
	public const int GL_STENCIL_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_BUFFER_BIT")]
	public const int GL_STENCIL_BUFFER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_CLEAR_TAG_VALUE_EXT")]
	public const int GL_STENCIL_CLEAR_TAG_VALUE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_CLEAR_VALUE")]
	public const int GL_STENCIL_CLEAR_VALUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_EXT")]
	public const int GL_STENCIL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_FAIL")]
	public const int GL_STENCIL_FAIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_FUNC")]
	public const int GL_STENCIL_FUNC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX")]
	public const int GL_STENCIL_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX1")]
	public const int GL_STENCIL_INDEX1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX16")]
	public const int GL_STENCIL_INDEX16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX16_EXT")]
	public const int GL_STENCIL_INDEX16_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX1_EXT")]
	public const int GL_STENCIL_INDEX1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX1_OES")]
	public const int GL_STENCIL_INDEX1_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX4")]
	public const int GL_STENCIL_INDEX4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX4_EXT")]
	public const int GL_STENCIL_INDEX4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX4_OES")]
	public const int GL_STENCIL_INDEX4_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX8")]
	public const int GL_STENCIL_INDEX8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX8_EXT")]
	public const int GL_STENCIL_INDEX8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_INDEX8_OES")]
	public const int GL_STENCIL_INDEX8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_PASS_DEPTH_FAIL")]
	public const int GL_STENCIL_PASS_DEPTH_FAIL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_PASS_DEPTH_PASS")]
	public const int GL_STENCIL_PASS_DEPTH_PASS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_REF")]
	public const int GL_STENCIL_REF;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_TAG_BITS_EXT")]
	public const int GL_STENCIL_TAG_BITS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_TEST")]
	public const int GL_STENCIL_TEST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_TEST_TWO_SIDE_EXT")]
	public const int GL_STENCIL_TEST_TWO_SIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_VALUE_MASK")]
	public const int GL_STENCIL_VALUE_MASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STENCIL_WRITEMASK")]
	public const int GL_STENCIL_WRITEMASK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STEREO")]
	public const int GL_STEREO;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STORAGE_CACHED_APPLE")]
	public const int GL_STORAGE_CACHED_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STORAGE_CLIENT_APPLE")]
	public const int GL_STORAGE_CLIENT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STORAGE_PRIVATE_APPLE")]
	public const int GL_STORAGE_PRIVATE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STORAGE_SHARED_APPLE")]
	public const int GL_STORAGE_SHARED_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_COPY")]
	public const int GL_STREAM_COPY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_COPY_ARB")]
	public const int GL_STREAM_COPY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_DRAW")]
	public const int GL_STREAM_DRAW;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_DRAW_ARB")]
	public const int GL_STREAM_DRAW_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_READ")]
	public const int GL_STREAM_READ;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_STREAM_READ_ARB")]
	public const int GL_STREAM_READ_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUBPIXEL_BITS")]
	public const int GL_SUBPIXEL_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUBSAMPLE_DISTANCE_AMD")]
	public const int GL_SUBSAMPLE_DISTANCE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUBTRACT")]
	public const int GL_SUBTRACT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUBTRACT_ARB")]
	public const int GL_SUBTRACT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUB_ATI")]
	public const int GL_SUB_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SUCCESS_NV")]
	public const int GL_SUCCESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SURFACE_MAPPED_NV")]
	public const int GL_SURFACE_MAPPED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SURFACE_REGISTERED_NV")]
	public const int GL_SURFACE_REGISTERED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SURFACE_STATE_NV")]
	public const int GL_SURFACE_STATE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STQ_ATI")]
	public const int GL_SWIZZLE_STQ_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STQ_DQ_ATI")]
	public const int GL_SWIZZLE_STQ_DQ_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STRQ_ATI")]
	public const int GL_SWIZZLE_STRQ_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STRQ_DQ_ATI")]
	public const int GL_SWIZZLE_STRQ_DQ_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STR_ATI")]
	public const int GL_SWIZZLE_STR_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SWIZZLE_STR_DR_ATI")]
	public const int GL_SWIZZLE_STR_DR_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_CL_EVENT_ARB")]
	public const int GL_SYNC_CL_EVENT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_CL_EVENT_COMPLETE_ARB")]
	public const int GL_SYNC_CL_EVENT_COMPLETE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_CONDITION")]
	public const int GL_SYNC_CONDITION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_FENCE")]
	public const int GL_SYNC_FENCE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_FLAGS")]
	public const int GL_SYNC_FLAGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_FLUSH_COMMANDS_BIT")]
	public const int GL_SYNC_FLUSH_COMMANDS_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_GPU_COMMANDS_COMPLETE")]
	public const int GL_SYNC_GPU_COMMANDS_COMPLETE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_STATUS")]
	public const int GL_SYNC_STATUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_SYNC_X11_FENCE_EXT")]
	public const int GL_SYNC_X11_FENCE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T")]
	public const int GL_T;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_C3F_V3F")]
	public const int GL_T2F_C3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_C4F_N3F_V3F")]
	public const int GL_T2F_C4F_N3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_C4UB_V3F")]
	public const int GL_T2F_C4UB_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_IUI_N3F_V2F_EXT")]
	public const int GL_T2F_IUI_N3F_V2F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_IUI_N3F_V3F_EXT")]
	public const int GL_T2F_IUI_N3F_V3F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_IUI_V2F_EXT")]
	public const int GL_T2F_IUI_V2F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_IUI_V3F_EXT")]
	public const int GL_T2F_IUI_V3F_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_N3F_V3F")]
	public const int GL_T2F_N3F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T2F_V3F")]
	public const int GL_T2F_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T4F_C4F_N3F_V4F")]
	public const int GL_T4F_C4F_N3F_V4F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_T4F_V4F")]
	public const int GL_T4F_V4F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TABLE_TOO_LARGE")]
	public const int GL_TABLE_TOO_LARGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TABLE_TOO_LARGE_EXT")]
	public const int GL_TABLE_TOO_LARGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESSELLATION_FACTOR_AMD")]
	public const int GL_TESSELLATION_FACTOR_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESSELLATION_MODE_AMD")]
	public const int GL_TESSELLATION_MODE_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_CONTROL_OUTPUT_VERTICES")]
	public const int GL_TESS_CONTROL_OUTPUT_VERTICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_CONTROL_PROGRAM_NV")]
	public const int GL_TESS_CONTROL_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV")]
	public const int GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_CONTROL_SHADER")]
	public const int GL_TESS_CONTROL_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_CONTROL_SHADER_BIT")]
	public const int GL_TESS_CONTROL_SHADER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_EVALUATION_PROGRAM_NV")]
	public const int GL_TESS_EVALUATION_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV")]
	public const int GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_EVALUATION_SHADER")]
	public const int GL_TESS_EVALUATION_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_EVALUATION_SHADER_BIT")]
	public const int GL_TESS_EVALUATION_SHADER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_GEN_MODE")]
	public const int GL_TESS_GEN_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_GEN_POINT_MODE")]
	public const int GL_TESS_GEN_POINT_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_GEN_SPACING")]
	public const int GL_TESS_GEN_SPACING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TESS_GEN_VERTEX_ORDER")]
	public const int GL_TESS_GEN_VERTEX_ORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE")]
	public const int GL_TEXTURE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE0")]
	public const int GL_TEXTURE0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE0_ARB")]
	public const int GL_TEXTURE0_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE1")]
	public const int GL_TEXTURE1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE10")]
	public const int GL_TEXTURE10;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE10_ARB")]
	public const int GL_TEXTURE10_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE11")]
	public const int GL_TEXTURE11;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE11_ARB")]
	public const int GL_TEXTURE11_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE12")]
	public const int GL_TEXTURE12;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE12_ARB")]
	public const int GL_TEXTURE12_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE13")]
	public const int GL_TEXTURE13;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE13_ARB")]
	public const int GL_TEXTURE13_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE14")]
	public const int GL_TEXTURE14;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE14_ARB")]
	public const int GL_TEXTURE14_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE15")]
	public const int GL_TEXTURE15;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE15_ARB")]
	public const int GL_TEXTURE15_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE16")]
	public const int GL_TEXTURE16;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE16_ARB")]
	public const int GL_TEXTURE16_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE17")]
	public const int GL_TEXTURE17;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE17_ARB")]
	public const int GL_TEXTURE17_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE18")]
	public const int GL_TEXTURE18;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE18_ARB")]
	public const int GL_TEXTURE18_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE19")]
	public const int GL_TEXTURE19;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE19_ARB")]
	public const int GL_TEXTURE19_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE1_ARB")]
	public const int GL_TEXTURE1_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE2")]
	public const int GL_TEXTURE2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE20")]
	public const int GL_TEXTURE20;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE20_ARB")]
	public const int GL_TEXTURE20_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE21")]
	public const int GL_TEXTURE21;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE21_ARB")]
	public const int GL_TEXTURE21_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE22")]
	public const int GL_TEXTURE22;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE22_ARB")]
	public const int GL_TEXTURE22_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE23")]
	public const int GL_TEXTURE23;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE23_ARB")]
	public const int GL_TEXTURE23_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE24")]
	public const int GL_TEXTURE24;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE24_ARB")]
	public const int GL_TEXTURE24_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE25")]
	public const int GL_TEXTURE25;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE25_ARB")]
	public const int GL_TEXTURE25_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE26")]
	public const int GL_TEXTURE26;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE26_ARB")]
	public const int GL_TEXTURE26_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE27")]
	public const int GL_TEXTURE27;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE27_ARB")]
	public const int GL_TEXTURE27_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE28")]
	public const int GL_TEXTURE28;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE28_ARB")]
	public const int GL_TEXTURE28_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE29")]
	public const int GL_TEXTURE29;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE29_ARB")]
	public const int GL_TEXTURE29_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE2_ARB")]
	public const int GL_TEXTURE2_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE3")]
	public const int GL_TEXTURE3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE30")]
	public const int GL_TEXTURE30;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE30_ARB")]
	public const int GL_TEXTURE30_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE31")]
	public const int GL_TEXTURE31;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE31_ARB")]
	public const int GL_TEXTURE31_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE3_ARB")]
	public const int GL_TEXTURE3_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE4")]
	public const int GL_TEXTURE4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE4_ARB")]
	public const int GL_TEXTURE4_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE5")]
	public const int GL_TEXTURE5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE5_ARB")]
	public const int GL_TEXTURE5_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE6")]
	public const int GL_TEXTURE6;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE6_ARB")]
	public const int GL_TEXTURE6_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE7")]
	public const int GL_TEXTURE7;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE7_ARB")]
	public const int GL_TEXTURE7_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE8")]
	public const int GL_TEXTURE8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE8_ARB")]
	public const int GL_TEXTURE8_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE9")]
	public const int GL_TEXTURE9;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE9_ARB")]
	public const int GL_TEXTURE9_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D")]
	public const int GL_TEXTURE_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D_ARRAY")]
	public const int GL_TEXTURE_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D_ARRAY_EXT")]
	public const int GL_TEXTURE_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D_BINDING_EXT")]
	public const int GL_TEXTURE_1D_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D_STACK_BINDING_MESAX")]
	public const int GL_TEXTURE_1D_STACK_BINDING_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_1D_STACK_MESAX")]
	public const int GL_TEXTURE_1D_STACK_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D")]
	public const int GL_TEXTURE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_ARRAY")]
	public const int GL_TEXTURE_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_ARRAY_EXT")]
	public const int GL_TEXTURE_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_BINDING_EXT")]
	public const int GL_TEXTURE_2D_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_MULTISAMPLE")]
	public const int GL_TEXTURE_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_MULTISAMPLE_ARRAY")]
	public const int GL_TEXTURE_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_STACK_BINDING_MESAX")]
	public const int GL_TEXTURE_2D_STACK_BINDING_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_2D_STACK_MESAX")]
	public const int GL_TEXTURE_2D_STACK_MESAX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_3D")]
	public const int GL_TEXTURE_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_3D_BINDING_EXT")]
	public const int GL_TEXTURE_3D_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_3D_BINDING_OES")]
	public const int GL_TEXTURE_3D_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_3D_EXT")]
	public const int GL_TEXTURE_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_3D_OES")]
	public const int GL_TEXTURE_3D_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_4DSIZE_SGIS")]
	public const int GL_TEXTURE_4DSIZE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_4D_BINDING_SGIS")]
	public const int GL_TEXTURE_4D_BINDING_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_4D_SGIS")]
	public const int GL_TEXTURE_4D_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ALPHA_MODULATE_IMG")]
	public const int GL_TEXTURE_ALPHA_MODULATE_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ALPHA_SIZE")]
	public const int GL_TEXTURE_ALPHA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ALPHA_SIZE_EXT")]
	public const int GL_TEXTURE_ALPHA_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ALPHA_TYPE")]
	public const int GL_TEXTURE_ALPHA_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ALPHA_TYPE_ARB")]
	public const int GL_TEXTURE_ALPHA_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_APPLICATION_MODE_EXT")]
	public const int GL_TEXTURE_APPLICATION_MODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BASE_LEVEL")]
	public const int GL_TEXTURE_BASE_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BASE_LEVEL_SGIS")]
	public const int GL_TEXTURE_BASE_LEVEL_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_1D")]
	public const int GL_TEXTURE_BINDING_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_1D_ARRAY")]
	public const int GL_TEXTURE_BINDING_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_1D_ARRAY_EXT")]
	public const int GL_TEXTURE_BINDING_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_2D")]
	public const int GL_TEXTURE_BINDING_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_2D_ARRAY")]
	public const int GL_TEXTURE_BINDING_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_2D_ARRAY_EXT")]
	public const int GL_TEXTURE_BINDING_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_2D_MULTISAMPLE")]
	public const int GL_TEXTURE_BINDING_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY")]
	public const int GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_3D")]
	public const int GL_TEXTURE_BINDING_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_BUFFER")]
	public const int GL_TEXTURE_BINDING_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_BUFFER_ARB")]
	public const int GL_TEXTURE_BINDING_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_BUFFER_EXT")]
	public const int GL_TEXTURE_BINDING_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_CUBE_MAP")]
	public const int GL_TEXTURE_BINDING_CUBE_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_CUBE_MAP_ARB")]
	public const int GL_TEXTURE_BINDING_CUBE_MAP_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY")]
	public const int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_CUBE_MAP_EXT")]
	public const int GL_TEXTURE_BINDING_CUBE_MAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_CUBE_MAP_OES")]
	public const int GL_TEXTURE_BINDING_CUBE_MAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_EXTERNAL_OES")]
	public const int GL_TEXTURE_BINDING_EXTERNAL_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_RECTANGLE")]
	public const int GL_TEXTURE_BINDING_RECTANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_RECTANGLE_ARB")]
	public const int GL_TEXTURE_BINDING_RECTANGLE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_RECTANGLE_NV")]
	public const int GL_TEXTURE_BINDING_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BINDING_RENDERBUFFER_NV")]
	public const int GL_TEXTURE_BINDING_RENDERBUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BIT")]
	public const int GL_TEXTURE_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BLUE_SIZE")]
	public const int GL_TEXTURE_BLUE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BLUE_SIZE_EXT")]
	public const int GL_TEXTURE_BLUE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BLUE_TYPE")]
	public const int GL_TEXTURE_BLUE_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BLUE_TYPE_ARB")]
	public const int GL_TEXTURE_BLUE_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BORDER")]
	public const int GL_TEXTURE_BORDER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BORDER_COLOR")]
	public const int GL_TEXTURE_BORDER_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BORDER_VALUES_NV")]
	public const int GL_TEXTURE_BORDER_VALUES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER")]
	public const int GL_TEXTURE_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_ARB")]
	public const int GL_TEXTURE_BUFFER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_DATA_STORE_BINDING")]
	public const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB")]
	public const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT")]
	public const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_EXT")]
	public const int GL_TEXTURE_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_FORMAT_ARB")]
	public const int GL_TEXTURE_BUFFER_FORMAT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_BUFFER_FORMAT_EXT")]
	public const int GL_TEXTURE_BUFFER_FORMAT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_CENTER_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_CENTER_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_DEPTH_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_DEPTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_FRAME_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_FRAME_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_OFFSET_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_OFFSET_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX")]
	public const int GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COLOR_SAMPLES_NV")]
	public const int GL_TEXTURE_COLOR_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COLOR_TABLE_SGI")]
	public const int GL_TEXTURE_COLOR_TABLE_SGI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COLOR_WRITEMASK_SGIS")]
	public const int GL_TEXTURE_COLOR_WRITEMASK_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_FUNC")]
	public const int GL_TEXTURE_COMPARE_FUNC;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_FUNC_ARB")]
	public const int GL_TEXTURE_COMPARE_FUNC_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_MODE")]
	public const int GL_TEXTURE_COMPARE_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_MODE_ARB")]
	public const int GL_TEXTURE_COMPARE_MODE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_OPERATOR_SGIX")]
	public const int GL_TEXTURE_COMPARE_OPERATOR_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPARE_SGIX")]
	public const int GL_TEXTURE_COMPARE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPONENTS")]
	public const int GL_TEXTURE_COMPONENTS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSED")]
	public const int GL_TEXTURE_COMPRESSED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSED_ARB")]
	public const int GL_TEXTURE_COMPRESSED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSED_IMAGE_SIZE")]
	public const int GL_TEXTURE_COMPRESSED_IMAGE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB")]
	public const int GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSION_HINT")]
	public const int GL_TEXTURE_COMPRESSION_HINT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COMPRESSION_HINT_ARB")]
	public const int GL_TEXTURE_COMPRESSION_HINT_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CONSTANT_DATA_SUNX")]
	public const int GL_TEXTURE_CONSTANT_DATA_SUNX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY")]
	public const int GL_TEXTURE_COORD_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV")]
	public const int GL_TEXTURE_COORD_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING")]
	public const int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_COUNT_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_LENGTH_NV")]
	public const int GL_TEXTURE_COORD_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL")]
	public const int GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_POINTER")]
	public const int GL_TEXTURE_COORD_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_POINTER_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_SIZE")]
	public const int GL_TEXTURE_COORD_ARRAY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_SIZE_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_STRIDE")]
	public const int GL_TEXTURE_COORD_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_TYPE")]
	public const int GL_TEXTURE_COORD_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_ARRAY_TYPE_EXT")]
	public const int GL_TEXTURE_COORD_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COORD_NV")]
	public const int GL_TEXTURE_COORD_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_COVERAGE_SAMPLES_NV")]
	public const int GL_TEXTURE_COVERAGE_SAMPLES_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CROP_RECT_OES")]
	public const int GL_TEXTURE_CROP_RECT_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP")]
	public const int GL_TEXTURE_CUBE_MAP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_ARRAY")]
	public const int GL_TEXTURE_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_X")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES")]
	public const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_OES")]
	public const int GL_TEXTURE_CUBE_MAP_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_X")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_X;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Y")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Z")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES")]
	public const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_CUBE_MAP_SEAMLESS")]
	public const int GL_TEXTURE_CUBE_MAP_SEAMLESS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEFORMATION_BIT_SGIX")]
	public const int GL_TEXTURE_DEFORMATION_BIT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEFORMATION_SGIX")]
	public const int GL_TEXTURE_DEFORMATION_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH")]
	public const int GL_TEXTURE_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_EXT")]
	public const int GL_TEXTURE_DEPTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_QCOM")]
	public const int GL_TEXTURE_DEPTH_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_SIZE")]
	public const int GL_TEXTURE_DEPTH_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_SIZE_ARB")]
	public const int GL_TEXTURE_DEPTH_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_TYPE")]
	public const int GL_TEXTURE_DEPTH_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DEPTH_TYPE_ARB")]
	public const int GL_TEXTURE_DEPTH_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DS_SIZE_NV")]
	public const int GL_TEXTURE_DS_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_DT_SIZE_NV")]
	public const int GL_TEXTURE_DT_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ENV")]
	public const int GL_TEXTURE_ENV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ENV_BIAS_SGIX")]
	public const int GL_TEXTURE_ENV_BIAS_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ENV_COLOR")]
	public const int GL_TEXTURE_ENV_COLOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_ENV_MODE")]
	public const int GL_TEXTURE_ENV_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_EXTERNAL_OES")]
	public const int GL_TEXTURE_EXTERNAL_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FETCH_BARRIER_BIT")]
	public const int GL_TEXTURE_FETCH_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FETCH_BARRIER_BIT_EXT")]
	public const int GL_TEXTURE_FETCH_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FILTER4_SIZE_SGIS")]
	public const int GL_TEXTURE_FILTER4_SIZE_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FILTER_CONTROL")]
	public const int GL_TEXTURE_FILTER_CONTROL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FILTER_CONTROL_EXT")]
	public const int GL_TEXTURE_FILTER_CONTROL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS")]
	public const int GL_TEXTURE_FIXED_SAMPLE_LOCATIONS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FLOAT_COMPONENTS_NV")]
	public const int GL_TEXTURE_FLOAT_COMPONENTS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FORMAT_QCOM")]
	public const int GL_TEXTURE_FORMAT_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_FREE_MEMORY_ATI")]
	public const int GL_TEXTURE_FREE_MEMORY_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_MODE")]
	public const int GL_TEXTURE_GEN_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_Q")]
	public const int GL_TEXTURE_GEN_Q;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_R")]
	public const int GL_TEXTURE_GEN_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_S")]
	public const int GL_TEXTURE_GEN_S;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_STR_OES")]
	public const int GL_TEXTURE_GEN_STR_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEN_T")]
	public const int GL_TEXTURE_GEN_T;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GEQUAL_R_SGIX")]
	public const int GL_TEXTURE_GEQUAL_R_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GREEN_SIZE")]
	public const int GL_TEXTURE_GREEN_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GREEN_SIZE_EXT")]
	public const int GL_TEXTURE_GREEN_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GREEN_TYPE")]
	public const int GL_TEXTURE_GREEN_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_GREEN_TYPE_ARB")]
	public const int GL_TEXTURE_GREEN_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_HEIGHT")]
	public const int GL_TEXTURE_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_HEIGHT_QCOM")]
	public const int GL_TEXTURE_HEIGHT_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_HI_SIZE_NV")]
	public const int GL_TEXTURE_HI_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_IMAGE_VALID_QCOM")]
	public const int GL_TEXTURE_IMAGE_VALID_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_IMMUTABLE_FORMAT")]
	public const int GL_TEXTURE_IMMUTABLE_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTENSITY_SIZE")]
	public const int GL_TEXTURE_INTENSITY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTENSITY_SIZE_EXT")]
	public const int GL_TEXTURE_INTENSITY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTENSITY_TYPE")]
	public const int GL_TEXTURE_INTENSITY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTENSITY_TYPE_ARB")]
	public const int GL_TEXTURE_INTENSITY_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTERNAL_FORMAT")]
	public const int GL_TEXTURE_INTERNAL_FORMAT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_INTERNAL_FORMAT_QCOM")]
	public const int GL_TEXTURE_INTERNAL_FORMAT_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LEQUAL_R_SGIX")]
	public const int GL_TEXTURE_LEQUAL_R_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LIGHT_EXT")]
	public const int GL_TEXTURE_LIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LOD_BIAS")]
	public const int GL_TEXTURE_LOD_BIAS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LOD_BIAS_EXT")]
	public const int GL_TEXTURE_LOD_BIAS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LOD_BIAS_R_SGIX")]
	public const int GL_TEXTURE_LOD_BIAS_R_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LOD_BIAS_S_SGIX")]
	public const int GL_TEXTURE_LOD_BIAS_S_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LOD_BIAS_T_SGIX")]
	public const int GL_TEXTURE_LOD_BIAS_T_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LO_SIZE_NV")]
	public const int GL_TEXTURE_LO_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LUMINANCE_SIZE")]
	public const int GL_TEXTURE_LUMINANCE_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LUMINANCE_SIZE_EXT")]
	public const int GL_TEXTURE_LUMINANCE_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LUMINANCE_TYPE")]
	public const int GL_TEXTURE_LUMINANCE_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_LUMINANCE_TYPE_ARB")]
	public const int GL_TEXTURE_LUMINANCE_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAG_FILTER")]
	public const int GL_TEXTURE_MAG_FILTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAG_SIZE_NV")]
	public const int GL_TEXTURE_MAG_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MATERIAL_FACE_EXT")]
	public const int GL_TEXTURE_MATERIAL_FACE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MATERIAL_PARAMETER_EXT")]
	public const int GL_TEXTURE_MATERIAL_PARAMETER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MATRIX")]
	public const int GL_TEXTURE_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES")]
	public const int GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_ANISOTROPY_EXT")]
	public const int GL_TEXTURE_MAX_ANISOTROPY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_CLAMP_R_SGIX")]
	public const int GL_TEXTURE_MAX_CLAMP_R_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_CLAMP_S_SGIX")]
	public const int GL_TEXTURE_MAX_CLAMP_S_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_CLAMP_T_SGIX")]
	public const int GL_TEXTURE_MAX_CLAMP_T_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_LEVEL")]
	public const int GL_TEXTURE_MAX_LEVEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_LEVEL_SGIS")]
	public const int GL_TEXTURE_MAX_LEVEL_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_LOD")]
	public const int GL_TEXTURE_MAX_LOD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MAX_LOD_SGIS")]
	public const int GL_TEXTURE_MAX_LOD_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MIN_FILTER")]
	public const int GL_TEXTURE_MIN_FILTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MIN_LOD")]
	public const int GL_TEXTURE_MIN_LOD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MIN_LOD_SGIS")]
	public const int GL_TEXTURE_MIN_LOD_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX")]
	public const int GL_TEXTURE_MULTI_BUFFER_HINT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_NORMAL_EXT")]
	public const int GL_TEXTURE_NORMAL_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_NUM_LEVELS_QCOM")]
	public const int GL_TEXTURE_NUM_LEVELS_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_OBJECT_VALID_QCOM")]
	public const int GL_TEXTURE_OBJECT_VALID_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_PRIORITY")]
	public const int GL_TEXTURE_PRIORITY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_PRIORITY_EXT")]
	public const int GL_TEXTURE_PRIORITY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RANGE_LENGTH_APPLE")]
	public const int GL_TEXTURE_RANGE_LENGTH_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RANGE_POINTER_APPLE")]
	public const int GL_TEXTURE_RANGE_POINTER_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RECTANGLE")]
	public const int GL_TEXTURE_RECTANGLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RECTANGLE_ARB")]
	public const int GL_TEXTURE_RECTANGLE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RECTANGLE_NV")]
	public const int GL_TEXTURE_RECTANGLE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RED_SIZE")]
	public const int GL_TEXTURE_RED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RED_SIZE_EXT")]
	public const int GL_TEXTURE_RED_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RED_TYPE")]
	public const int GL_TEXTURE_RED_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RED_TYPE_ARB")]
	public const int GL_TEXTURE_RED_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV")]
	public const int GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RENDERBUFFER_NV")]
	public const int GL_TEXTURE_RENDERBUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RESIDENT")]
	public const int GL_TEXTURE_RESIDENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_RESIDENT_EXT")]
	public const int GL_TEXTURE_RESIDENT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SAMPLES")]
	public const int GL_TEXTURE_SAMPLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SAMPLES_IMG")]
	public const int GL_TEXTURE_SAMPLES_IMG;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SHADER_NV")]
	public const int GL_TEXTURE_SHADER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SHARED_SIZE")]
	public const int GL_TEXTURE_SHARED_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SHARED_SIZE_EXT")]
	public const int GL_TEXTURE_SHARED_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SRGB_DECODE_EXT")]
	public const int GL_TEXTURE_SRGB_DECODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_STACK_DEPTH")]
	public const int GL_TEXTURE_STACK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_STENCIL_SIZE")]
	public const int GL_TEXTURE_STENCIL_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_STENCIL_SIZE_EXT")]
	public const int GL_TEXTURE_STENCIL_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_STORAGE_HINT_APPLE")]
	public const int GL_TEXTURE_STORAGE_HINT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_A")]
	public const int GL_TEXTURE_SWIZZLE_A;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_A_EXT")]
	public const int GL_TEXTURE_SWIZZLE_A_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_B")]
	public const int GL_TEXTURE_SWIZZLE_B;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_B_EXT")]
	public const int GL_TEXTURE_SWIZZLE_B_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_G")]
	public const int GL_TEXTURE_SWIZZLE_G;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_G_EXT")]
	public const int GL_TEXTURE_SWIZZLE_G_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_R")]
	public const int GL_TEXTURE_SWIZZLE_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_RGBA")]
	public const int GL_TEXTURE_SWIZZLE_RGBA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_RGBA_EXT")]
	public const int GL_TEXTURE_SWIZZLE_RGBA_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_SWIZZLE_R_EXT")]
	public const int GL_TEXTURE_SWIZZLE_R_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_TARGET_QCOM")]
	public const int GL_TEXTURE_TARGET_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_TOO_LARGE_EXT")]
	public const int GL_TEXTURE_TOO_LARGE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_TYPE_QCOM")]
	public const int GL_TEXTURE_TYPE_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV")]
	public const int GL_TEXTURE_UNSIGNED_REMAP_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_UPDATE_BARRIER_BIT")]
	public const int GL_TEXTURE_UPDATE_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_UPDATE_BARRIER_BIT_EXT")]
	public const int GL_TEXTURE_UPDATE_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WIDTH")]
	public const int GL_TEXTURE_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WIDTH_QCOM")]
	public const int GL_TEXTURE_WIDTH_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_Q_SGIS")]
	public const int GL_TEXTURE_WRAP_Q_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_R")]
	public const int GL_TEXTURE_WRAP_R;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_R_EXT")]
	public const int GL_TEXTURE_WRAP_R_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_R_OES")]
	public const int GL_TEXTURE_WRAP_R_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_S")]
	public const int GL_TEXTURE_WRAP_S;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXTURE_WRAP_T")]
	public const int GL_TEXTURE_WRAP_T;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TEXT_FRAGMENT_SHADER_ATI")]
	public const int GL_TEXT_FRAGMENT_SHADER_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TIMEOUT_EXPIRED")]
	public const int GL_TIMEOUT_EXPIRED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TIMEOUT_IGNORED")]
	public const int GL_TIMEOUT_IGNORED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TIMESTAMP")]
	public const int GL_TIMESTAMP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TIME_ELAPSED")]
	public const int GL_TIME_ELAPSED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TIME_ELAPSED_EXT")]
	public const int GL_TIME_ELAPSED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_ALL_BITS_MESA")]
	public const int GL_TRACE_ALL_BITS_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_ARRAYS_BIT_MESA")]
	public const int GL_TRACE_ARRAYS_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_ERRORS_BIT_MESA")]
	public const int GL_TRACE_ERRORS_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_MASK_MESA")]
	public const int GL_TRACE_MASK_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_NAME_MESA")]
	public const int GL_TRACE_NAME_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_OPERATIONS_BIT_MESA")]
	public const int GL_TRACE_OPERATIONS_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_PIXELS_BIT_MESA")]
	public const int GL_TRACE_PIXELS_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_PRIMITIVES_BIT_MESA")]
	public const int GL_TRACE_PRIMITIVES_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACE_TEXTURES_BIT_MESA")]
	public const int GL_TRACE_TEXTURES_BIT_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACK_MATRIX_NV")]
	public const int GL_TRACK_MATRIX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRACK_MATRIX_TRANSFORM_NV")]
	public const int GL_TRACK_MATRIX_TRANSFORM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_BIT")]
	public const int GL_TRANSFORM_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK")]
	public const int GL_TRANSFORM_FEEDBACK;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV")]
	public const int GL_TRANSFORM_FEEDBACK_ATTRIBS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BARRIER_BIT")]
	public const int GL_TRANSFORM_FEEDBACK_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BINDING")]
	public const int GL_TRANSFORM_FEEDBACK_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BINDING_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_MODE")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_START")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_START;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_BUFFER_START_NV")]
	public const int GL_TRANSFORM_FEEDBACK_BUFFER_START_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_NV")]
	public const int GL_TRANSFORM_FEEDBACK_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN")]
	public const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV")]
	public const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_RECORD_NV")]
	public const int GL_TRANSFORM_FEEDBACK_RECORD_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_VARYINGS")]
	public const int GL_TRANSFORM_FEEDBACK_VARYINGS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_VARYINGS_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_VARYINGS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_VARYINGS_NV")]
	public const int GL_TRANSFORM_FEEDBACK_VARYINGS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH")]
	public const int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT")]
	public const int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSFORM_HINT_APPLE")]
	public const int GL_TRANSFORM_HINT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_COLOR_MATRIX")]
	public const int GL_TRANSPOSE_COLOR_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_COLOR_MATRIX_ARB")]
	public const int GL_TRANSPOSE_COLOR_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_CURRENT_MATRIX_ARB")]
	public const int GL_TRANSPOSE_CURRENT_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_MODELVIEW_MATRIX")]
	public const int GL_TRANSPOSE_MODELVIEW_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_MODELVIEW_MATRIX_ARB")]
	public const int GL_TRANSPOSE_MODELVIEW_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_NV")]
	public const int GL_TRANSPOSE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_PROGRAM_MATRIX_EXT")]
	public const int GL_TRANSPOSE_PROGRAM_MATRIX_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_PROJECTION_MATRIX")]
	public const int GL_TRANSPOSE_PROJECTION_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_PROJECTION_MATRIX_ARB")]
	public const int GL_TRANSPOSE_PROJECTION_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_TEXTURE_MATRIX")]
	public const int GL_TRANSPOSE_TEXTURE_MATRIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRANSPOSE_TEXTURE_MATRIX_ARB")]
	public const int GL_TRANSPOSE_TEXTURE_MATRIX_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLES")]
	public const int GL_TRIANGLES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLES_ADJACENCY")]
	public const int GL_TRIANGLES_ADJACENCY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLES_ADJACENCY_ARB")]
	public const int GL_TRIANGLES_ADJACENCY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLES_ADJACENCY_EXT")]
	public const int GL_TRIANGLES_ADJACENCY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_FAN")]
	public const int GL_TRIANGLE_FAN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_LIST_SUN")]
	public const int GL_TRIANGLE_LIST_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_MESH_SUN")]
	public const int GL_TRIANGLE_MESH_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_STRIP")]
	public const int GL_TRIANGLE_STRIP;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_STRIP_ADJACENCY")]
	public const int GL_TRIANGLE_STRIP_ADJACENCY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_STRIP_ADJACENCY_ARB")]
	public const int GL_TRIANGLE_STRIP_ADJACENCY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRIANGLE_STRIP_ADJACENCY_EXT")]
	public const int GL_TRIANGLE_STRIP_ADJACENCY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TRUE")]
	public const int GL_TRUE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_TYPE_RGBA_FLOAT_ATI")]
	public const int GL_TYPE_RGBA_FLOAT_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNDEFINED_APPLE")]
	public const int GL_UNDEFINED_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNDEFINED_VERTEX")]
	public const int GL_UNDEFINED_VERTEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_ARRAY_STRIDE")]
	public const int GL_UNIFORM_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX")]
	public const int GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BARRIER_BIT")]
	public const int GL_UNIFORM_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BARRIER_BIT_EXT")]
	public const int GL_UNIFORM_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS")]
	public const int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES")]
	public const int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_BINDING")]
	public const int GL_UNIFORM_BLOCK_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_DATA_SIZE")]
	public const int GL_UNIFORM_BLOCK_DATA_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_INDEX")]
	public const int GL_UNIFORM_BLOCK_INDEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_NAME_LENGTH")]
	public const int GL_UNIFORM_BLOCK_NAME_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER")]
	public const int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER")]
	public const int GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER")]
	public const int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER")]
	public const int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER")]
	public const int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER")]
	public const int GL_UNIFORM_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_BINDING")]
	public const int GL_UNIFORM_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_BINDING_EXT")]
	public const int GL_UNIFORM_BUFFER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_EXT")]
	public const int GL_UNIFORM_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT")]
	public const int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_SIZE")]
	public const int GL_UNIFORM_BUFFER_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_BUFFER_START")]
	public const int GL_UNIFORM_BUFFER_START;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_IS_ROW_MAJOR")]
	public const int GL_UNIFORM_IS_ROW_MAJOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_MATRIX_STRIDE")]
	public const int GL_UNIFORM_MATRIX_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_NAME_LENGTH")]
	public const int GL_UNIFORM_NAME_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_OFFSET")]
	public const int GL_UNIFORM_OFFSET;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_SIZE")]
	public const int GL_UNIFORM_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNIFORM_TYPE")]
	public const int GL_UNIFORM_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNKNOWN_CONTEXT_RESET_ARB")]
	public const int GL_UNKNOWN_CONTEXT_RESET_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_ALIGNMENT")]
	public const int GL_UNPACK_ALIGNMENT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_CLIENT_STORAGE_APPLE")]
	public const int GL_UNPACK_CLIENT_STORAGE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_CMYK_HINT_EXT")]
	public const int GL_UNPACK_CMYK_HINT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_COMPRESSED_BLOCK_DEPTH")]
	public const int GL_UNPACK_COMPRESSED_BLOCK_DEPTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT")]
	public const int GL_UNPACK_COMPRESSED_BLOCK_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_COMPRESSED_BLOCK_SIZE")]
	public const int GL_UNPACK_COMPRESSED_BLOCK_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_COMPRESSED_BLOCK_WIDTH")]
	public const int GL_UNPACK_COMPRESSED_BLOCK_WIDTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_COMPRESSED_SIZE_SGIX")]
	public const int GL_UNPACK_COMPRESSED_SIZE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_CONSTANT_DATA_SUNX")]
	public const int GL_UNPACK_CONSTANT_DATA_SUNX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_IMAGE_DEPTH_SGIS")]
	public const int GL_UNPACK_IMAGE_DEPTH_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_IMAGE_HEIGHT")]
	public const int GL_UNPACK_IMAGE_HEIGHT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_IMAGE_HEIGHT_EXT")]
	public const int GL_UNPACK_IMAGE_HEIGHT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_LSB_FIRST")]
	public const int GL_UNPACK_LSB_FIRST;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_RESAMPLE_OML")]
	public const int GL_UNPACK_RESAMPLE_OML;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_RESAMPLE_SGIX")]
	public const int GL_UNPACK_RESAMPLE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_ROW_BYTES_APPLE")]
	public const int GL_UNPACK_ROW_BYTES_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_ROW_LENGTH")]
	public const int GL_UNPACK_ROW_LENGTH;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SKIP_IMAGES")]
	public const int GL_UNPACK_SKIP_IMAGES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SKIP_IMAGES_EXT")]
	public const int GL_UNPACK_SKIP_IMAGES_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SKIP_PIXELS")]
	public const int GL_UNPACK_SKIP_PIXELS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SKIP_ROWS")]
	public const int GL_UNPACK_SKIP_ROWS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SKIP_VOLUMES_SGIS")]
	public const int GL_UNPACK_SKIP_VOLUMES_SGIS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SUBSAMPLE_RATE_SGIX")]
	public const int GL_UNPACK_SUBSAMPLE_RATE_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNPACK_SWAP_BYTES")]
	public const int GL_UNPACK_SWAP_BYTES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNALED")]
	public const int GL_UNSIGNALED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_BYTE")]
	public const int GL_UNSIGNED_BYTE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_BYTE_2_3_3_REV")]
	public const int GL_UNSIGNED_BYTE_2_3_3_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_BYTE_2_3_3_REV_EXT")]
	public const int GL_UNSIGNED_BYTE_2_3_3_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_BYTE_3_3_2")]
	public const int GL_UNSIGNED_BYTE_3_3_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_BYTE_3_3_2_EXT")]
	public const int GL_UNSIGNED_BYTE_3_3_2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_IDENTITY_NV")]
	public const int GL_UNSIGNED_IDENTITY_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT")]
	public const int GL_UNSIGNED_INT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT16_NV")]
	public const int GL_UNSIGNED_INT16_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT16_VEC2_NV")]
	public const int GL_UNSIGNED_INT16_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT16_VEC3_NV")]
	public const int GL_UNSIGNED_INT16_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT16_VEC4_NV")]
	public const int GL_UNSIGNED_INT16_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT64_AMD")]
	public const int GL_UNSIGNED_INT64_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT64_NV")]
	public const int GL_UNSIGNED_INT64_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT64_VEC2_NV")]
	public const int GL_UNSIGNED_INT64_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT64_VEC3_NV")]
	public const int GL_UNSIGNED_INT64_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT64_VEC4_NV")]
	public const int GL_UNSIGNED_INT64_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT8_NV")]
	public const int GL_UNSIGNED_INT8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT8_VEC2_NV")]
	public const int GL_UNSIGNED_INT8_VEC2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT8_VEC3_NV")]
	public const int GL_UNSIGNED_INT8_VEC3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT8_VEC4_NV")]
	public const int GL_UNSIGNED_INT8_VEC4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_10F_11F_11F_REV")]
	public const int GL_UNSIGNED_INT_10F_11F_11F_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_10F_11F_11F_REV_EXT")]
	public const int GL_UNSIGNED_INT_10F_11F_11F_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_10_10_10_2")]
	public const int GL_UNSIGNED_INT_10_10_10_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_10_10_10_2_EXT")]
	public const int GL_UNSIGNED_INT_10_10_10_2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_10_10_10_2_OES")]
	public const int GL_UNSIGNED_INT_10_10_10_2_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_24_8")]
	public const int GL_UNSIGNED_INT_24_8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_24_8_EXT")]
	public const int GL_UNSIGNED_INT_24_8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_24_8_MESA")]
	public const int GL_UNSIGNED_INT_24_8_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_24_8_NV")]
	public const int GL_UNSIGNED_INT_24_8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_24_8_OES")]
	public const int GL_UNSIGNED_INT_24_8_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_2_10_10_10_REV")]
	public const int GL_UNSIGNED_INT_2_10_10_10_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_2_10_10_10_REV_EXT")]
	public const int GL_UNSIGNED_INT_2_10_10_10_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_5_9_9_9_REV")]
	public const int GL_UNSIGNED_INT_5_9_9_9_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_5_9_9_9_REV_EXT")]
	public const int GL_UNSIGNED_INT_5_9_9_9_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_24_REV_MESA")]
	public const int GL_UNSIGNED_INT_8_24_REV_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_8_8_8")]
	public const int GL_UNSIGNED_INT_8_8_8_8;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_8_8_8_EXT")]
	public const int GL_UNSIGNED_INT_8_8_8_8_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_8_8_8_REV")]
	public const int GL_UNSIGNED_INT_8_8_8_8_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_8_8_8_REV_EXT")]
	public const int GL_UNSIGNED_INT_8_8_8_8_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV")]
	public const int GL_UNSIGNED_INT_8_8_S8_S8_REV_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_ATOMIC_COUNTER")]
	public const int GL_UNSIGNED_INT_ATOMIC_COUNTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_1D")]
	public const int GL_UNSIGNED_INT_IMAGE_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_1D_ARRAY")]
	public const int GL_UNSIGNED_INT_IMAGE_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_1D_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D")]
	public const int GL_UNSIGNED_INT_IMAGE_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_ARRAY")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_RECT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_3D")]
	public const int GL_UNSIGNED_INT_IMAGE_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_3D_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_BUFFER")]
	public const int GL_UNSIGNED_INT_IMAGE_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_BUFFER_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_CUBE")]
	public const int GL_UNSIGNED_INT_IMAGE_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_CUBE_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_CUBE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY")]
	public const int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_S8_S8_8_8_NV")]
	public const int GL_UNSIGNED_INT_S8_S8_8_8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_1D")]
	public const int GL_UNSIGNED_INT_SAMPLER_1D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY")]
	public const int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_1D_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_1D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_RECT")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_RECT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_3D")]
	public const int GL_UNSIGNED_INT_SAMPLER_3D;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_3D_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_3D_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_BUFFER")]
	public const int GL_UNSIGNED_INT_SAMPLER_BUFFER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD")]
	public const int GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_CUBE")]
	public const int GL_UNSIGNED_INT_SAMPLER_CUBE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_CUBE_EXT")]
	public const int GL_UNSIGNED_INT_SAMPLER_CUBE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY")]
	public const int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV")]
	public const int GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC2")]
	public const int GL_UNSIGNED_INT_VEC2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC2_EXT")]
	public const int GL_UNSIGNED_INT_VEC2_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC3")]
	public const int GL_UNSIGNED_INT_VEC3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC3_EXT")]
	public const int GL_UNSIGNED_INT_VEC3_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC4")]
	public const int GL_UNSIGNED_INT_VEC4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INT_VEC4_EXT")]
	public const int GL_UNSIGNED_INT_VEC4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_INVERT_NV")]
	public const int GL_UNSIGNED_INVERT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_NEGATE_NV")]
	public const int GL_UNSIGNED_NEGATE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_NORMALIZED")]
	public const int GL_UNSIGNED_NORMALIZED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_NORMALIZED_ARB")]
	public const int GL_UNSIGNED_NORMALIZED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT")]
	public const int GL_UNSIGNED_SHORT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_15_1_MESA")]
	public const int GL_UNSIGNED_SHORT_15_1_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_1_15_REV_MESA")]
	public const int GL_UNSIGNED_SHORT_1_15_REV_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_1_5_5_5_REV")]
	public const int GL_UNSIGNED_SHORT_1_5_5_5_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT")]
	public const int GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_4_4_4_4")]
	public const int GL_UNSIGNED_SHORT_4_4_4_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_4_4_4_4_EXT")]
	public const int GL_UNSIGNED_SHORT_4_4_4_4_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_4_4_4_4_REV")]
	public const int GL_UNSIGNED_SHORT_4_4_4_4_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT")]
	public const int GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_5_5_1")]
	public const int GL_UNSIGNED_SHORT_5_5_5_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_5_5_1_EXT")]
	public const int GL_UNSIGNED_SHORT_5_5_5_1_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_6_5")]
	public const int GL_UNSIGNED_SHORT_5_6_5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_6_5_EXT")]
	public const int GL_UNSIGNED_SHORT_5_6_5_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_6_5_REV")]
	public const int GL_UNSIGNED_SHORT_5_6_5_REV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_5_6_5_REV_EXT")]
	public const int GL_UNSIGNED_SHORT_5_6_5_REV_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_8_8_APPLE")]
	public const int GL_UNSIGNED_SHORT_8_8_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_8_8_MESA")]
	public const int GL_UNSIGNED_SHORT_8_8_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_8_8_REV_APPLE")]
	public const int GL_UNSIGNED_SHORT_8_8_REV_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UNSIGNED_SHORT_8_8_REV_MESA")]
	public const int GL_UNSIGNED_SHORT_8_8_REV_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_UPPER_LEFT")]
	public const int GL_UPPER_LEFT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_V2F")]
	public const int GL_V2F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_V3F")]
	public const int GL_V3F;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VALIDATE_STATUS")]
	public const int GL_VALIDATE_STATUS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_A_NV")]
	public const int GL_VARIABLE_A_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_B_NV")]
	public const int GL_VARIABLE_B_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_C_NV")]
	public const int GL_VARIABLE_C_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_D_NV")]
	public const int GL_VARIABLE_D_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_E_NV")]
	public const int GL_VARIABLE_E_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_F_NV")]
	public const int GL_VARIABLE_F_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIABLE_G_NV")]
	public const int GL_VARIABLE_G_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_ARRAY_EXT")]
	public const int GL_VARIANT_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_ARRAY_POINTER_EXT")]
	public const int GL_VARIANT_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_ARRAY_STRIDE_EXT")]
	public const int GL_VARIANT_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_ARRAY_TYPE_EXT")]
	public const int GL_VARIANT_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_DATATYPE_EXT")]
	public const int GL_VARIANT_DATATYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_EXT")]
	public const int GL_VARIANT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VARIANT_VALUE_EXT")]
	public const int GL_VARIANT_VALUE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VBO_FREE_MEMORY_ATI")]
	public const int GL_VBO_FREE_MEMORY_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VECTOR_EXT")]
	public const int GL_VECTOR_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VENDOR")]
	public const int GL_VENDOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION")]
	public const int GL_VERSION;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_1_1")]
	public const int GL_VERSION_1_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_1_2")]
	public const int GL_VERSION_1_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_1_3")]
	public const int GL_VERSION_1_3;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_1_4")]
	public const int GL_VERSION_1_4;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_1_5")]
	public const int GL_VERSION_1_5;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_2_0")]
	public const int GL_VERSION_2_0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_2_1")]
	public const int GL_VERSION_2_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_3_0")]
	public const int GL_VERSION_3_0;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_3_1")]
	public const int GL_VERSION_3_1;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERSION_3_2")]
	public const int GL_VERSION_3_2;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY")]
	public const int GL_VERTEX_ARRAY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_ADDRESS_NV")]
	public const int GL_VERTEX_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_BINDING")]
	public const int GL_VERTEX_ARRAY_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_BINDING_APPLE")]
	public const int GL_VERTEX_ARRAY_BINDING_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_BUFFER_BINDING")]
	public const int GL_VERTEX_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_VERTEX_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_COUNT_EXT")]
	public const int GL_VERTEX_ARRAY_COUNT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_EXT")]
	public const int GL_VERTEX_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_LENGTH_NV")]
	public const int GL_VERTEX_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_OBJECT_AMD")]
	public const int GL_VERTEX_ARRAY_OBJECT_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL")]
	public const int GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_POINTER")]
	public const int GL_VERTEX_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_POINTER_EXT")]
	public const int GL_VERTEX_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_APPLE")]
	public const int GL_VERTEX_ARRAY_RANGE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE")]
	public const int GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_LENGTH_NV")]
	public const int GL_VERTEX_ARRAY_RANGE_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_NV")]
	public const int GL_VERTEX_ARRAY_RANGE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE")]
	public const int GL_VERTEX_ARRAY_RANGE_POINTER_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_POINTER_NV")]
	public const int GL_VERTEX_ARRAY_RANGE_POINTER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_VALID_NV")]
	public const int GL_VERTEX_ARRAY_RANGE_VALID_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV")]
	public const int GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_SIZE")]
	public const int GL_VERTEX_ARRAY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_SIZE_EXT")]
	public const int GL_VERTEX_ARRAY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE")]
	public const int GL_VERTEX_ARRAY_STORAGE_HINT_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_STRIDE")]
	public const int GL_VERTEX_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_STRIDE_EXT")]
	public const int GL_VERTEX_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_TYPE")]
	public const int GL_VERTEX_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ARRAY_TYPE_EXT")]
	public const int GL_VERTEX_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY0_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY0_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY10_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY10_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY11_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY11_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY12_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY12_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY13_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY13_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY14_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY14_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY15_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY15_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY1_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY1_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY2_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY2_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY3_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY3_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY4_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY4_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY5_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY5_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY6_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY6_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY7_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY7_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY8_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY8_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY9_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY9_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT")]
	public const int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT")]
	public const int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")]
	public const int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_DIVISOR")]
	public const int GL_VERTEX_ATTRIB_ARRAY_DIVISOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_ENABLED")]
	public const int GL_VERTEX_ATTRIB_ARRAY_ENABLED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_INTEGER")]
	public const int GL_VERTEX_ATTRIB_ARRAY_INTEGER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED")]
	public const int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_POINTER")]
	public const int GL_VERTEX_ATTRIB_ARRAY_POINTER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_SIZE")]
	public const int GL_VERTEX_ATTRIB_ARRAY_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_STRIDE")]
	public const int GL_VERTEX_ATTRIB_ARRAY_STRIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_TYPE")]
	public const int GL_VERTEX_ATTRIB_ARRAY_TYPE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB")]
	public const int GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV")]
	public const int GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP1_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP1_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP2_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP2_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE")]
	public const int GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_BLEND_ARB")]
	public const int GL_VERTEX_BLEND_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_ID_NV")]
	public const int GL_VERTEX_ID_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PRECLIP_HINT_SGIX")]
	public const int GL_VERTEX_PRECLIP_HINT_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PRECLIP_SGIX")]
	public const int GL_VERTEX_PRECLIP_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_ARB")]
	public const int GL_VERTEX_PROGRAM_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_BINDING_NV")]
	public const int GL_VERTEX_PROGRAM_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA")]
	public const int GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA")]
	public const int GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_CALLBACK_MESA")]
	public const int GL_VERTEX_PROGRAM_CALLBACK_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_NV")]
	public const int GL_VERTEX_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV")]
	public const int GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_POINT_SIZE")]
	public const int GL_VERTEX_PROGRAM_POINT_SIZE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_POINT_SIZE_ARB")]
	public const int GL_VERTEX_PROGRAM_POINT_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_POINT_SIZE_NV")]
	public const int GL_VERTEX_PROGRAM_POINT_SIZE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_POSITION_MESA")]
	public const int GL_VERTEX_PROGRAM_POSITION_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_TWO_SIDE")]
	public const int GL_VERTEX_PROGRAM_TWO_SIDE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_TWO_SIDE_ARB")]
	public const int GL_VERTEX_PROGRAM_TWO_SIDE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_PROGRAM_TWO_SIDE_NV")]
	public const int GL_VERTEX_PROGRAM_TWO_SIDE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER")]
	public const int GL_VERTEX_SHADER;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_ARB")]
	public const int GL_VERTEX_SHADER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_BINDING_EXT")]
	public const int GL_VERTEX_SHADER_BINDING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_BIT")]
	public const int GL_VERTEX_SHADER_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_EXT")]
	public const int GL_VERTEX_SHADER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_INSTRUCTIONS_EXT")]
	public const int GL_VERTEX_SHADER_INSTRUCTIONS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_INVARIANTS_EXT")]
	public const int GL_VERTEX_SHADER_INVARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_LOCALS_EXT")]
	public const int GL_VERTEX_SHADER_LOCALS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT")]
	public const int GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_OPTIMIZED_EXT")]
	public const int GL_VERTEX_SHADER_OPTIMIZED_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SHADER_VARIANTS_EXT")]
	public const int GL_VERTEX_SHADER_VARIANTS_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_SOURCE_ATI")]
	public const int GL_VERTEX_SOURCE_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STATE_PROGRAM_NV")]
	public const int GL_VERTEX_STATE_PROGRAM_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM0_ATI")]
	public const int GL_VERTEX_STREAM0_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM1_ATI")]
	public const int GL_VERTEX_STREAM1_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM2_ATI")]
	public const int GL_VERTEX_STREAM2_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM3_ATI")]
	public const int GL_VERTEX_STREAM3_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM4_ATI")]
	public const int GL_VERTEX_STREAM4_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM5_ATI")]
	public const int GL_VERTEX_STREAM5_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM6_ATI")]
	public const int GL_VERTEX_STREAM6_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_STREAM7_ATI")]
	public const int GL_VERTEX_STREAM7_ATI;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHTING_EXT")]
	public const int GL_VERTEX_WEIGHTING_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHT_ARRAY_EXT")]
	public const int GL_VERTEX_WEIGHT_ARRAY_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT")]
	public const int GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT")]
	public const int GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT")]
	public const int GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT")]
	public const int GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIBRANCE_BIAS_NV")]
	public const int GL_VIBRANCE_BIAS_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIBRANCE_SCALE_NV")]
	public const int GL_VIBRANCE_SCALE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_BUFFER_BINDING_NV")]
	public const int GL_VIDEO_BUFFER_BINDING_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV")]
	public const int GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_BUFFER_NV")]
	public const int GL_VIDEO_BUFFER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_BUFFER_PITCH_NV")]
	public const int GL_VIDEO_BUFFER_PITCH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV")]
	public const int GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV")]
	public const int GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV")]
	public const int GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV")]
	public const int GL_VIDEO_CAPTURE_FRAME_WIDTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV")]
	public const int GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV")]
	public const int GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV")]
	public const int GL_VIDEO_COLOR_CONVERSION_MATRIX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_COLOR_CONVERSION_MAX_NV")]
	public const int GL_VIDEO_COLOR_CONVERSION_MAX_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_COLOR_CONVERSION_MIN_NV")]
	public const int GL_VIDEO_COLOR_CONVERSION_MIN_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV")]
	public const int GL_VIDEO_COLOR_CONVERSION_OFFSET_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIEWPORT")]
	public const int GL_VIEWPORT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIEWPORT_BIT")]
	public const int GL_VIEWPORT_BIT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIEWPORT_BOUNDS_RANGE")]
	public const int GL_VIEWPORT_BOUNDS_RANGE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIEWPORT_INDEX_PROVOKING_VERTEX")]
	public const int GL_VIEWPORT_INDEX_PROVOKING_VERTEX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VIEWPORT_SUBPIXEL_BITS")]
	public const int GL_VIEWPORT_SUBPIXEL_BITS;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_VOLATILE_APPLE")]
	public const int GL_VOLATILE_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WAIT_FAILED")]
	public const int GL_WAIT_FAILED;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_ARB")]
	public const int GL_WEIGHT_ARRAY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_BUFFER_BINDING")]
	public const int GL_WEIGHT_ARRAY_BUFFER_BINDING;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB")]
	public const int GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_BUFFER_BINDING_OES")]
	public const int GL_WEIGHT_ARRAY_BUFFER_BINDING_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_OES")]
	public const int GL_WEIGHT_ARRAY_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_POINTER_ARB")]
	public const int GL_WEIGHT_ARRAY_POINTER_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_POINTER_OES")]
	public const int GL_WEIGHT_ARRAY_POINTER_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_SIZE_ARB")]
	public const int GL_WEIGHT_ARRAY_SIZE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_SIZE_OES")]
	public const int GL_WEIGHT_ARRAY_SIZE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_STRIDE_ARB")]
	public const int GL_WEIGHT_ARRAY_STRIDE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_STRIDE_OES")]
	public const int GL_WEIGHT_ARRAY_STRIDE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_TYPE_ARB")]
	public const int GL_WEIGHT_ARRAY_TYPE_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_ARRAY_TYPE_OES")]
	public const int GL_WEIGHT_ARRAY_TYPE_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WEIGHT_SUM_UNITY_ARB")]
	public const int GL_WEIGHT_SUM_UNITY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRAP_BORDER_SUN")]
	public const int GL_WRAP_BORDER_SUN;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITEONLY_RENDERING_QCOM")]
	public const int GL_WRITEONLY_RENDERING_QCOM;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_DISCARD_NV")]
	public const int GL_WRITE_DISCARD_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_ONLY")]
	public const int GL_WRITE_ONLY;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_ONLY_ARB")]
	public const int GL_WRITE_ONLY_ARB;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_ONLY_OES")]
	public const int GL_WRITE_ONLY_OES;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV")]
	public const int GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_PIXEL_DATA_RANGE_NV")]
	public const int GL_WRITE_PIXEL_DATA_RANGE_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV")]
	public const int GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_W_EXT")]
	public const int GL_W_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_XOR")]
	public const int GL_XOR;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_X_EXT")]
	public const int GL_X_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCBAYCR8A_4224_NV")]
	public const int GL_YCBAYCR8A_4224_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCBCR_422_APPLE")]
	public const int GL_YCBCR_422_APPLE;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCBCR_MESA")]
	public const int GL_YCBCR_MESA;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCBYCR8_422_NV")]
	public const int GL_YCBYCR8_422_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCRCBA_SGIX")]
	public const int GL_YCRCBA_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCRCB_422_SGIX")]
	public const int GL_YCRCB_422_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCRCB_444_SGIX")]
	public const int GL_YCRCB_444_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_YCRCB_SGIX")]
	public const int GL_YCRCB_SGIX;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Y_EXT")]
	public const int GL_Y_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z400_BINARY_AMD")]
	public const int GL_Z400_BINARY_AMD;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV")]
	public const int GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z4Y12Z4CB12Z4CR12_444_NV")]
	public const int GL_Z4Y12Z4CB12Z4CR12_444_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV")]
	public const int GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV")]
	public const int GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV")]
	public const int GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ZERO")]
	public const int GL_ZERO;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ZERO_EXT")]
	public const int GL_ZERO_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ZOOM_X")]
	public const int GL_ZOOM_X;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_ZOOM_Y")]
	public const int GL_ZOOM_Y;
	[CCode (cheader_filename = "GL/gl.h", cname = "GL_Z_EXT")]
	public const int GL_Z_EXT;
	[CCode (cheader_filename = "GL/gl.h", cname = "glAccum")]
	public static void glAccum (GL.GLenum op, GL.GLfloat value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveProgramEXT")]
	public static void glActiveProgramEXT (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveShaderProgram")]
	public static void glActiveShaderProgram (GL.GLuint pipeline, GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveStencilFaceEXT")]
	public static void glActiveStencilFaceEXT (GL.GLenum face);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveTexture")]
	public static void glActiveTexture (GL.GLenum texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveTextureARB")]
	public static void glActiveTextureARB (GL.GLenum texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glActiveVaryingNV")]
	public static void glActiveVaryingNV (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAlphaFragmentOp1ATI")]
	public static void glAlphaFragmentOp1ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAlphaFragmentOp2ATI")]
	public static void glAlphaFragmentOp2ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod, GL.GLuint arg2, GL.GLuint arg2Rep, GL.GLuint arg2Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAlphaFragmentOp3ATI")]
	public static void glAlphaFragmentOp3ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod, GL.GLuint arg2, GL.GLuint arg2Rep, GL.GLuint arg2Mod, GL.GLuint arg3, GL.GLuint arg3Rep, GL.GLuint arg3Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAlphaFunc")]
	public static void glAlphaFunc (GL.GLenum func, GL.GLclampf @ref);
	[CCode (cheader_filename = "GL/gl.h", cname = "glApplyTextureEXT")]
	public static void glApplyTextureEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAreProgramsResidentNV")]
	public static GL.GLboolean glAreProgramsResidentNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? programs, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] residences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAreTexturesResident")]
	public static GL.GLboolean glAreTexturesResident (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] residences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAreTexturesResidentEXT")]
	public static GL.GLboolean glAreTexturesResidentEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] residences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glArrayElement")]
	public static void glArrayElement (GL.GLint i);
	[CCode (cheader_filename = "GL/gl.h", cname = "glArrayElementEXT")]
	public static void glArrayElementEXT (GL.GLint i);
	[CCode (cheader_filename = "GL/gl.h", cname = "glArrayObjectATI")]
	public static void glArrayObjectATI (GL.GLenum array, GL.GLint size, GL.GLenum type, GL.GLsizei stride, GL.GLuint buffer, GL.GLuint offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAsyncMarkerSGIX")]
	public static void glAsyncMarkerSGIX (GL.GLuint marker);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAttachObjectARB")]
	public static void glAttachObjectARB (GL.GLhandleARB containerObj, GL.GLhandleARB obj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glAttachShader")]
	public static void glAttachShader (GL.GLuint program, GL.GLuint shader);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBegin")]
	public static void glBegin (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginConditionalRender")]
	public static void glBeginConditionalRender (GL.GLuint id, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginConditionalRenderNV")]
	public static void glBeginConditionalRenderNV (GL.GLuint id, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginFragmentShaderATI")]
	public static void glBeginFragmentShaderATI ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginOcclusionQueryNV")]
	public static void glBeginOcclusionQueryNV (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginPerfMonitorAMD")]
	public static void glBeginPerfMonitorAMD (GL.GLuint monitor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginQuery")]
	public static void glBeginQuery (GL.GLenum target, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginQueryARB")]
	public static void glBeginQueryARB (GL.GLenum target, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginQueryIndexed")]
	public static void glBeginQueryIndexed (GL.GLenum target, GL.GLuint index, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginTransformFeedback")]
	public static void glBeginTransformFeedback (GL.GLenum primitiveMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginTransformFeedbackEXT")]
	public static void glBeginTransformFeedbackEXT (GL.GLenum primitiveMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginTransformFeedbackNV")]
	public static void glBeginTransformFeedbackNV (GL.GLenum primitiveMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginVertexShaderEXT")]
	public static void glBeginVertexShaderEXT ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glBeginVideoCaptureNV")]
	public static void glBeginVideoCaptureNV (GL.GLuint video_capture_slot);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindAttribLocation")]
	public static void glBindAttribLocation (GL.GLuint program, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindAttribLocationARB")]
	public static void glBindAttribLocationARB (GL.GLhandleARB programObj, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] GL.GLcharARB[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBuffer")]
	public static void glBindBuffer (GL.GLenum target, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferARB")]
	public static void glBindBufferARB (GL.GLenum target, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferBase")]
	public static void glBindBufferBase (GL.GLenum target, GL.GLuint index, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferBaseEXT")]
	public static void glBindBufferBaseEXT (GL.GLenum target, GL.GLuint index, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferBaseNV")]
	public static void glBindBufferBaseNV (GL.GLenum target, GL.GLuint index, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferOffsetEXT")]
	public static void glBindBufferOffsetEXT (GL.GLenum target, GL.GLuint index, GL.GLuint buffer, GL.GLintptr offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferOffsetNV")]
	public static void glBindBufferOffsetNV (GL.GLenum target, GL.GLuint index, GL.GLuint buffer, GL.GLintptr offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferRange")]
	public static void glBindBufferRange (GL.GLenum target, GL.GLuint index, GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferRangeEXT")]
	public static void glBindBufferRangeEXT (GL.GLenum target, GL.GLuint index, GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindBufferRangeNV")]
	public static void glBindBufferRangeNV (GL.GLenum target, GL.GLuint index, GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFragDataLocation")]
	public static void glBindFragDataLocation (GL.GLuint program, GL.GLuint color, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFragDataLocationEXT")]
	public static void glBindFragDataLocationEXT (GL.GLuint program, GL.GLuint color, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFragDataLocationIndexed")]
	public static void glBindFragDataLocationIndexed (GL.GLuint program, GL.GLuint colorNumber, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFragmentShaderATI")]
	public static void glBindFragmentShaderATI (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFramebuffer")]
	public static void glBindFramebuffer (GL.GLenum target, GL.GLuint framebuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindFramebufferEXT")]
	public static void glBindFramebufferEXT (GL.GLenum target, GL.GLuint framebuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindImageTexture")]
	public static void glBindImageTexture (GL.GLuint unit, GL.GLuint texture, GL.GLint level, GL.GLboolean layered, GL.GLint layer, GL.GLenum access, GL.GLenum format);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindImageTextureEXT")]
	public static void glBindImageTextureEXT (GL.GLuint index, GL.GLuint texture, GL.GLint level, GL.GLboolean layered, GL.GLint layer, GL.GLenum access, GL.GLint format);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindLightParameterEXT")]
	public static GL.GLuint glBindLightParameterEXT (GL.GLenum light, GL.GLenum value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindMaterialParameterEXT")]
	public static GL.GLuint glBindMaterialParameterEXT (GL.GLenum face, GL.GLenum value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindMultiTextureEXT")]
	public static void glBindMultiTextureEXT (GL.GLenum texunit, GL.GLenum target, GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindParameterEXT")]
	public static GL.GLuint glBindParameterEXT (GL.GLenum value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindProgramARB")]
	public static void glBindProgramARB (GL.GLenum target, GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindProgramNV")]
	public static void glBindProgramNV (GL.GLenum target, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindProgramPipeline")]
	public static void glBindProgramPipeline (GL.GLuint pipeline);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindRenderbuffer")]
	public static void glBindRenderbuffer (GL.GLenum target, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindRenderbufferEXT")]
	public static void glBindRenderbufferEXT (GL.GLenum target, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindSampler")]
	public static void glBindSampler (GL.GLuint unit, GL.GLuint sampler);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTexGenParameterEXT")]
	public static GL.GLuint glBindTexGenParameterEXT (GL.GLenum unit, GL.GLenum coord, GL.GLenum value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTexture")]
	public static void glBindTexture (GL.GLenum target, GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTextureEXT")]
	public static void glBindTextureEXT (GL.GLenum target, GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTextureUnitParameterEXT")]
	public static GL.GLuint glBindTextureUnitParameterEXT (GL.GLenum unit, GL.GLenum value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTransformFeedback")]
	public static void glBindTransformFeedback (GL.GLenum target, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindTransformFeedbackNV")]
	public static void glBindTransformFeedbackNV (GL.GLenum target, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindVertexArray")]
	public static void glBindVertexArray (GL.GLuint array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindVertexArrayAPPLE")]
	public static void glBindVertexArrayAPPLE (GL.GLuint array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindVertexShaderEXT")]
	public static void glBindVertexShaderEXT (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindVideoCaptureStreamBufferNV")]
	public static void glBindVideoCaptureStreamBufferNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum frame_region, GL.GLintptrARB offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBindVideoCaptureStreamTextureNV")]
	public static void glBindVideoCaptureStreamTextureNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum frame_region, GL.GLenum target, GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3bEXT")]
	public static void glBinormal3bEXT (GL.GLbyte bx, GL.GLbyte by, GL.GLbyte bz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3bvEXT")]
	public static void glBinormal3bvEXT ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3dEXT")]
	public static void glBinormal3dEXT (GL.GLdouble bx, GL.GLdouble by, GL.GLdouble bz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3dvEXT")]
	public static void glBinormal3dvEXT ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3fEXT")]
	public static void glBinormal3fEXT (GL.GLfloat bx, GL.GLfloat by, GL.GLfloat bz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3fvEXT")]
	public static void glBinormal3fvEXT ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3iEXT")]
	public static void glBinormal3iEXT (GL.GLint bx, GL.GLint by, GL.GLint bz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3ivEXT")]
	public static void glBinormal3ivEXT ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3sEXT")]
	public static void glBinormal3sEXT (GL.GLshort bx, GL.GLshort by, GL.GLshort bz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormal3svEXT")]
	public static void glBinormal3svEXT ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBinormalPointerEXT")]
	public static void glBinormalPointerEXT (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBitmap")]
	public static void glBitmap (GL.GLsizei width, GL.GLsizei height, GL.GLfloat xorig, GL.GLfloat yorig, GL.GLfloat xmove, GL.GLfloat ymove, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? bitmap);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendColor")]
	public static void glBlendColor (GL.GLclampf red, GL.GLclampf green, GL.GLclampf blue, GL.GLclampf alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendColorEXT")]
	public static void glBlendColorEXT (GL.GLclampf red, GL.GLclampf green, GL.GLclampf blue, GL.GLclampf alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquation")]
	public static void glBlendEquation (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationEXT")]
	public static void glBlendEquationEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationIndexedAMD")]
	public static void glBlendEquationIndexedAMD (GL.GLuint buf, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationSeparate")]
	public static void glBlendEquationSeparate (GL.GLenum modeRGB, GL.GLenum modeAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationSeparateEXT")]
	public static void glBlendEquationSeparateEXT (GL.GLenum modeRGB, GL.GLenum modeAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationSeparateIndexedAMD")]
	public static void glBlendEquationSeparateIndexedAMD (GL.GLuint buf, GL.GLenum modeRGB, GL.GLenum modeAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationSeparatei")]
	public static void glBlendEquationSeparatei (GL.GLuint buf, GL.GLenum modeRGB, GL.GLenum modeAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationSeparateiARB")]
	public static void glBlendEquationSeparateiARB (GL.GLuint buf, GL.GLenum modeRGB, GL.GLenum modeAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationi")]
	public static void glBlendEquationi (GL.GLuint buf, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendEquationiARB")]
	public static void glBlendEquationiARB (GL.GLuint buf, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFunc")]
	public static void glBlendFunc (GL.GLenum sfactor, GL.GLenum dfactor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncIndexedAMD")]
	public static void glBlendFuncIndexedAMD (GL.GLuint buf, GL.GLenum src, GL.GLenum dst);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparate")]
	public static void glBlendFuncSeparate (GL.GLenum sfactorRGB, GL.GLenum dfactorRGB, GL.GLenum sfactorAlpha, GL.GLenum dfactorAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparateEXT")]
	public static void glBlendFuncSeparateEXT (GL.GLenum sfactorRGB, GL.GLenum dfactorRGB, GL.GLenum sfactorAlpha, GL.GLenum dfactorAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparateINGR")]
	public static void glBlendFuncSeparateINGR (GL.GLenum sfactorRGB, GL.GLenum dfactorRGB, GL.GLenum sfactorAlpha, GL.GLenum dfactorAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparateIndexedAMD")]
	public static void glBlendFuncSeparateIndexedAMD (GL.GLuint buf, GL.GLenum srcRGB, GL.GLenum dstRGB, GL.GLenum srcAlpha, GL.GLenum dstAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparatei")]
	public static void glBlendFuncSeparatei (GL.GLuint buf, GL.GLenum srcRGB, GL.GLenum dstRGB, GL.GLenum srcAlpha, GL.GLenum dstAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFuncSeparateiARB")]
	public static void glBlendFuncSeparateiARB (GL.GLuint buf, GL.GLenum srcRGB, GL.GLenum dstRGB, GL.GLenum srcAlpha, GL.GLenum dstAlpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFunci")]
	public static void glBlendFunci (GL.GLuint buf, GL.GLenum src, GL.GLenum dst);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlendFunciARB")]
	public static void glBlendFunciARB (GL.GLuint buf, GL.GLenum src, GL.GLenum dst);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlitFramebuffer")]
	public static void glBlitFramebuffer (GL.GLint srcX0, GL.GLint srcY0, GL.GLint srcX1, GL.GLint srcY1, GL.GLint dstX0, GL.GLint dstY0, GL.GLint dstX1, GL.GLint dstY1, GL.GLbitfield mask, GL.GLenum filter);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBlitFramebufferEXT")]
	public static void glBlitFramebufferEXT (GL.GLint srcX0, GL.GLint srcY0, GL.GLint srcX1, GL.GLint srcY1, GL.GLint dstX0, GL.GLint dstY0, GL.GLint dstX1, GL.GLint dstY1, GL.GLbitfield mask, GL.GLenum filter);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferAddressRangeNV")]
	public static void glBufferAddressRangeNV (GL.GLenum pname, GL.GLuint index, GL.GLuint64EXT address, GL.GLsizeiptr length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferData")]
	public static void glBufferData (GL.GLenum target, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data, GL.GLenum usage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferDataARB")]
	public static void glBufferDataARB (GL.GLenum target, GL.GLsizeiptrARB size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data, GL.GLenum usage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferParameteriAPPLE")]
	public static void glBufferParameteriAPPLE (GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferSubData")]
	public static void glBufferSubData (GL.GLenum target, GL.GLintptr offset, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glBufferSubDataARB")]
	public static void glBufferSubDataARB (GL.GLenum target, GL.GLintptrARB offset, GL.GLsizeiptrARB size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCallList")]
	public static void glCallList (GL.GLuint list);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCallLists")]
	public static void glCallLists (GL.GLsizei n, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? lists);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCheckFramebufferStatus")]
	public static GL.GLenum glCheckFramebufferStatus (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCheckFramebufferStatusEXT")]
	public static GL.GLenum glCheckFramebufferStatusEXT (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCheckNamedFramebufferStatusEXT")]
	public static GL.GLenum glCheckNamedFramebufferStatusEXT (GL.GLuint framebuffer, GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClampColor")]
	public static void glClampColor (GL.GLenum target, GL.GLenum clamp);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClampColorARB")]
	public static void glClampColorARB (GL.GLenum target, GL.GLenum clamp);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClear")]
	public static void glClear (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearAccum")]
	public static void glClearAccum (GL.GLfloat red, GL.GLfloat green, GL.GLfloat blue, GL.GLfloat alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearBufferfi")]
	public static void glClearBufferfi (GL.GLenum buffer, GL.GLint drawbuffer, GL.GLfloat depth, GL.GLint stencil);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearBufferfv")]
	public static void glClearBufferfv (GL.GLenum buffer, GL.GLint drawbuffer, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearBufferiv")]
	public static void glClearBufferiv (GL.GLenum buffer, GL.GLint drawbuffer, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearBufferuiv")]
	public static void glClearBufferuiv (GL.GLenum buffer, GL.GLint drawbuffer, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearColor")]
	public static void glClearColor (GL.GLclampf red, GL.GLclampf green, GL.GLclampf blue, GL.GLclampf alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearColorIiEXT")]
	public static void glClearColorIiEXT (GL.GLint red, GL.GLint green, GL.GLint blue, GL.GLint alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearColorIuiEXT")]
	public static void glClearColorIuiEXT (GL.GLuint red, GL.GLuint green, GL.GLuint blue, GL.GLuint alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearDepth")]
	public static void glClearDepth (GL.GLclampd depth);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearDepthdNV")]
	public static void glClearDepthdNV (GL.GLdouble depth);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearDepthf")]
	public static void glClearDepthf (GL.GLclampf d);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearIndex")]
	public static void glClearIndex (GL.GLfloat c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClearStencil")]
	public static void glClearStencil (GL.GLint s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClientActiveTexture")]
	public static void glClientActiveTexture (GL.GLenum texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClientActiveTextureARB")]
	public static void glClientActiveTextureARB (GL.GLenum texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClientActiveVertexStreamATI")]
	public static void glClientActiveVertexStreamATI (GL.GLenum stream);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClientAttribDefaultEXT")]
	public static void glClientAttribDefaultEXT (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClientWaitSync")]
	public static GL.GLenum glClientWaitSync (GL.GLsync sync, GL.GLbitfield flags, GL.GLuint64 timeout);
	[CCode (cheader_filename = "GL/gl.h", cname = "glClipPlane")]
	public static void glClipPlane (GL.GLenum plane, [CCode (array_length = false)] GL.GLdouble[]? equation);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3b")]
	public static void glColor3b (GL.GLbyte red, GL.GLbyte green, GL.GLbyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3bv")]
	public static void glColor3bv ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3d")]
	public static void glColor3d (GL.GLdouble red, GL.GLdouble green, GL.GLdouble blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3dv")]
	public static void glColor3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3f")]
	public static void glColor3f (GL.GLfloat red, GL.GLfloat green, GL.GLfloat blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3fVertex3fSUN")]
	public static void glColor3fVertex3fSUN (GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3fVertex3fvSUN")]
	public static void glColor3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3fv")]
	public static void glColor3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3hNV")]
	public static void glColor3hNV (GL.GLhalfNV red, GL.GLhalfNV green, GL.GLhalfNV blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3hvNV")]
	public static void glColor3hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3i")]
	public static void glColor3i (GL.GLint red, GL.GLint green, GL.GLint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3iv")]
	public static void glColor3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3s")]
	public static void glColor3s (GL.GLshort red, GL.GLshort green, GL.GLshort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3sv")]
	public static void glColor3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3ub")]
	public static void glColor3ub (GL.GLubyte red, GL.GLubyte green, GL.GLubyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3ubv")]
	public static void glColor3ubv ([CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3ui")]
	public static void glColor3ui (GL.GLuint red, GL.GLuint green, GL.GLuint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3uiv")]
	public static void glColor3uiv ([CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3us")]
	public static void glColor3us (GL.GLushort red, GL.GLushort green, GL.GLushort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor3usv")]
	public static void glColor3usv ([CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4b")]
	public static void glColor4b (GL.GLbyte red, GL.GLbyte green, GL.GLbyte blue, GL.GLbyte alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4bv")]
	public static void glColor4bv ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4d")]
	public static void glColor4d (GL.GLdouble red, GL.GLdouble green, GL.GLdouble blue, GL.GLdouble alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4dv")]
	public static void glColor4dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4f")]
	public static void glColor4f (GL.GLfloat red, GL.GLfloat green, GL.GLfloat blue, GL.GLfloat alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4fNormal3fVertex3fSUN")]
	public static void glColor4fNormal3fVertex3fSUN (GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat a, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4fNormal3fVertex3fvSUN")]
	public static void glColor4fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4fv")]
	public static void glColor4fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4hNV")]
	public static void glColor4hNV (GL.GLhalfNV red, GL.GLhalfNV green, GL.GLhalfNV blue, GL.GLhalfNV alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4hvNV")]
	public static void glColor4hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4i")]
	public static void glColor4i (GL.GLint red, GL.GLint green, GL.GLint blue, GL.GLint alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4iv")]
	public static void glColor4iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4s")]
	public static void glColor4s (GL.GLshort red, GL.GLshort green, GL.GLshort blue, GL.GLshort alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4sv")]
	public static void glColor4sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ub")]
	public static void glColor4ub (GL.GLubyte red, GL.GLubyte green, GL.GLubyte blue, GL.GLubyte alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ubVertex2fSUN")]
	public static void glColor4ubVertex2fSUN (GL.GLubyte r, GL.GLubyte g, GL.GLubyte b, GL.GLubyte a, GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ubVertex2fvSUN")]
	public static void glColor4ubVertex2fvSUN ([CCode (array_length = false)] GL.GLubyte[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ubVertex3fSUN")]
	public static void glColor4ubVertex3fSUN (GL.GLubyte r, GL.GLubyte g, GL.GLubyte b, GL.GLubyte a, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ubVertex3fvSUN")]
	public static void glColor4ubVertex3fvSUN ([CCode (array_length = false)] GL.GLubyte[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ubv")]
	public static void glColor4ubv ([CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4ui")]
	public static void glColor4ui (GL.GLuint red, GL.GLuint green, GL.GLuint blue, GL.GLuint alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4uiv")]
	public static void glColor4uiv ([CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4us")]
	public static void glColor4us (GL.GLushort red, GL.GLushort green, GL.GLushort blue, GL.GLushort alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColor4usv")]
	public static void glColor4usv ([CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorFormatNV")]
	public static void glColorFormatNV (GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorFragmentOp1ATI")]
	public static void glColorFragmentOp1ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMask, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorFragmentOp2ATI")]
	public static void glColorFragmentOp2ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMask, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod, GL.GLuint arg2, GL.GLuint arg2Rep, GL.GLuint arg2Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorFragmentOp3ATI")]
	public static void glColorFragmentOp3ATI (GL.GLenum op, GL.GLuint dst, GL.GLuint dstMask, GL.GLuint dstMod, GL.GLuint arg1, GL.GLuint arg1Rep, GL.GLuint arg1Mod, GL.GLuint arg2, GL.GLuint arg2Rep, GL.GLuint arg2Mod, GL.GLuint arg3, GL.GLuint arg3Rep, GL.GLuint arg3Mod);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorMask")]
	public static void glColorMask (GL.GLboolean red, GL.GLboolean green, GL.GLboolean blue, GL.GLboolean alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorMaskIndexedEXT")]
	public static void glColorMaskIndexedEXT (GL.GLuint index, GL.GLboolean r, GL.GLboolean g, GL.GLboolean b, GL.GLboolean a);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorMaski")]
	public static void glColorMaski (GL.GLuint index, GL.GLboolean r, GL.GLboolean g, GL.GLboolean b, GL.GLboolean a);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorMaterial")]
	public static void glColorMaterial (GL.GLenum face, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorP3ui")]
	public static void glColorP3ui (GL.GLenum type, GL.GLuint color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorP3uiv")]
	public static void glColorP3uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorP4ui")]
	public static void glColorP4ui (GL.GLenum type, GL.GLuint color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorP4uiv")]
	public static void glColorP4uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorPointer")]
	public static void glColorPointer (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorPointerEXT")]
	public static void glColorPointerEXT (GL.GLint size, GL.GLenum type, GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorPointerListIBM")]
	public static void glColorPointerListIBM (GL.GLint size, GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorPointervINTEL")]
	public static void glColorPointervINTEL (GL.GLint size, GL.GLenum type, [CCode (array_length = false)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorSubTable")]
	public static void glColorSubTable (GL.GLenum target, GL.GLsizei start, GL.GLsizei count, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorSubTableEXT")]
	public static void glColorSubTableEXT (GL.GLenum target, GL.GLsizei start, GL.GLsizei count, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTable")]
	public static void glColorTable (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableEXT")]
	public static void glColorTableEXT (GL.GLenum target, GL.GLenum internalFormat, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableParameterfv")]
	public static void glColorTableParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableParameterfvSGI")]
	public static void glColorTableParameterfvSGI (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableParameteriv")]
	public static void glColorTableParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableParameterivSGI")]
	public static void glColorTableParameterivSGI (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glColorTableSGI")]
	public static void glColorTableSGI (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerInputNV")]
	public static void glCombinerInputNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum variable, GL.GLenum input, GL.GLenum mapping, GL.GLenum componentUsage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerOutputNV")]
	public static void glCombinerOutputNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum abOutput, GL.GLenum cdOutput, GL.GLenum sumOutput, GL.GLenum scale, GL.GLenum bias, GL.GLboolean abDotProduct, GL.GLboolean cdDotProduct, GL.GLboolean muxSum);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerParameterfNV")]
	public static void glCombinerParameterfNV (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerParameterfvNV")]
	public static void glCombinerParameterfvNV (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerParameteriNV")]
	public static void glCombinerParameteriNV (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerParameterivNV")]
	public static void glCombinerParameterivNV (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCombinerStageParameterfvNV")]
	public static void glCombinerStageParameterfvNV (GL.GLenum stage, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompileShader")]
	public static void glCompileShader (GL.GLuint shader);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompileShaderARB")]
	public static void glCompileShaderARB (GL.GLhandleARB shaderObj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompileShaderIncludeARB")]
	public static void glCompileShaderIncludeARB (GL.GLuint shader, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? path, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexImage1DEXT")]
	public static void glCompressedMultiTexImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexImage2DEXT")]
	public static void glCompressedMultiTexImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexImage3DEXT")]
	public static void glCompressedMultiTexImage3DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexSubImage1DEXT")]
	public static void glCompressedMultiTexSubImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexSubImage2DEXT")]
	public static void glCompressedMultiTexSubImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedMultiTexSubImage3DEXT")]
	public static void glCompressedMultiTexSubImage3DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage1D")]
	public static void glCompressedTexImage1D (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage1DARB")]
	public static void glCompressedTexImage1DARB (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage2D")]
	public static void glCompressedTexImage2D (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage2DARB")]
	public static void glCompressedTexImage2DARB (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage3D")]
	public static void glCompressedTexImage3D (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexImage3DARB")]
	public static void glCompressedTexImage3DARB (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage1D")]
	public static void glCompressedTexSubImage1D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage1DARB")]
	public static void glCompressedTexSubImage1DARB (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage2D")]
	public static void glCompressedTexSubImage2D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage2DARB")]
	public static void glCompressedTexSubImage2DARB (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage3D")]
	public static void glCompressedTexSubImage3D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTexSubImage3DARB")]
	public static void glCompressedTexSubImage3DARB (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureImage1DEXT")]
	public static void glCompressedTextureImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureImage2DEXT")]
	public static void glCompressedTextureImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureImage3DEXT")]
	public static void glCompressedTextureImage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureSubImage1DEXT")]
	public static void glCompressedTextureSubImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureSubImage2DEXT")]
	public static void glCompressedTextureSubImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCompressedTextureSubImage3DEXT")]
	public static void glCompressedTextureSubImage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLsizei imageSize, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? bits);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionFilter1D")]
	public static void glConvolutionFilter1D (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionFilter1DEXT")]
	public static void glConvolutionFilter1DEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionFilter2D")]
	public static void glConvolutionFilter2D (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionFilter2DEXT")]
	public static void glConvolutionFilter2DEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameterf")]
	public static void glConvolutionParameterf (GL.GLenum target, GL.GLenum pname, GL.GLfloat @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameterfEXT")]
	public static void glConvolutionParameterfEXT (GL.GLenum target, GL.GLenum pname, GL.GLfloat @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameterfv")]
	public static void glConvolutionParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameterfvEXT")]
	public static void glConvolutionParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameteri")]
	public static void glConvolutionParameteri (GL.GLenum target, GL.GLenum pname, GL.GLint @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameteriEXT")]
	public static void glConvolutionParameteriEXT (GL.GLenum target, GL.GLenum pname, GL.GLint @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameteriv")]
	public static void glConvolutionParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glConvolutionParameterivEXT")]
	public static void glConvolutionParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyBufferSubData")]
	public static void glCopyBufferSubData (GL.GLenum readTarget, GL.GLenum writeTarget, GL.GLintptr readOffset, GL.GLintptr writeOffset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyColorSubTable")]
	public static void glCopyColorSubTable (GL.GLenum target, GL.GLsizei start, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyColorSubTableEXT")]
	public static void glCopyColorSubTableEXT (GL.GLenum target, GL.GLsizei start, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyColorTable")]
	public static void glCopyColorTable (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyColorTableSGI")]
	public static void glCopyColorTableSGI (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyConvolutionFilter1D")]
	public static void glCopyConvolutionFilter1D (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyConvolutionFilter1DEXT")]
	public static void glCopyConvolutionFilter1DEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyConvolutionFilter2D")]
	public static void glCopyConvolutionFilter2D (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyConvolutionFilter2DEXT")]
	public static void glCopyConvolutionFilter2DEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyImageSubDataNV")]
	public static void glCopyImageSubDataNV (GL.GLuint srcName, GL.GLenum srcTarget, GL.GLint srcLevel, GL.GLint srcX, GL.GLint srcY, GL.GLint srcZ, GL.GLuint dstName, GL.GLenum dstTarget, GL.GLint dstLevel, GL.GLint dstX, GL.GLint dstY, GL.GLint dstZ, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyMultiTexImage1DEXT")]
	public static void glCopyMultiTexImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyMultiTexImage2DEXT")]
	public static void glCopyMultiTexImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyMultiTexSubImage1DEXT")]
	public static void glCopyMultiTexSubImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyMultiTexSubImage2DEXT")]
	public static void glCopyMultiTexSubImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyMultiTexSubImage3DEXT")]
	public static void glCopyMultiTexSubImage3DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyPixels")]
	public static void glCopyPixels (GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLenum type);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexImage1D")]
	public static void glCopyTexImage1D (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexImage1DEXT")]
	public static void glCopyTexImage1DEXT (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexImage2D")]
	public static void glCopyTexImage2D (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexImage2DEXT")]
	public static void glCopyTexImage2DEXT (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage1D")]
	public static void glCopyTexSubImage1D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage1DEXT")]
	public static void glCopyTexSubImage1DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage2D")]
	public static void glCopyTexSubImage2D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage2DEXT")]
	public static void glCopyTexSubImage2DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage3D")]
	public static void glCopyTexSubImage3D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTexSubImage3DEXT")]
	public static void glCopyTexSubImage3DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTextureImage1DEXT")]
	public static void glCopyTextureImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTextureImage2DEXT")]
	public static void glCopyTextureImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLint border);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTextureSubImage1DEXT")]
	public static void glCopyTextureSubImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint x, GL.GLint y, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTextureSubImage2DEXT")]
	public static void glCopyTextureSubImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCopyTextureSubImage3DEXT")]
	public static void glCopyTextureSubImage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateProgram")]
	public static GL.GLuint glCreateProgram ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateProgramObjectARB")]
	public static GL.GLhandleARB glCreateProgramObjectARB ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateShader")]
	public static GL.GLuint glCreateShader (GL.GLenum type);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateShaderObjectARB")]
	public static GL.GLhandleARB glCreateShaderObjectARB (GL.GLenum shaderType);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateShaderProgramEXT")]
	public static GL.GLuint glCreateShaderProgramEXT (GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateShaderProgramv")]
	public static GL.GLuint glCreateShaderProgramv (GL.GLenum type, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? strings);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCreateSyncFromCLeventARB")]
	public static GL.GLsync glCreateSyncFromCLeventARB (void* context, void* event, GL.GLbitfield flags);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCullFace")]
	public static void glCullFace (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCullParameterdvEXT")]
	public static void glCullParameterdvEXT (GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCullParameterfvEXT")]
	public static void glCullParameterfvEXT (GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glCurrentPaletteMatrixARB")]
	public static void glCurrentPaletteMatrixARB (GL.GLint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageCallbackAMD")]
	public static void glDebugMessageCallbackAMD (GL.GLDEBUGPROCAMD callback, out GL.GLvoid userParam);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageCallbackARB")]
	public static void glDebugMessageCallbackARB (GL.GLDEBUGPROCARB callback, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? userParam);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageControlARB")]
	public static void glDebugMessageControlARB (GL.GLenum source, GL.GLenum type, GL.GLenum severity, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids, GL.GLboolean enabled);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageEnableAMD")]
	public static void glDebugMessageEnableAMD (GL.GLenum category, GL.GLenum severity, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids, GL.GLboolean enabled);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageInsertAMD")]
	public static void glDebugMessageInsertAMD (GL.GLenum category, GL.GLenum severity, GL.GLuint id, GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? buf);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDebugMessageInsertARB")]
	public static void glDebugMessageInsertARB (GL.GLenum source, GL.GLenum type, GL.GLuint id, GL.GLenum severity, GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? buf);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeformSGIX")]
	public static void glDeformSGIX (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeformationMap3dSGIX")]
	public static void glDeformationMap3dSGIX (GL.GLenum target, GL.GLdouble u1, GL.GLdouble u2, GL.GLint ustride, GL.GLint uorder, GL.GLdouble v1, GL.GLdouble v2, GL.GLint vstride, GL.GLint vorder, GL.GLdouble w1, GL.GLdouble w2, GL.GLint wstride, GL.GLint worder, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeformationMap3fSGIX")]
	public static void glDeformationMap3fSGIX (GL.GLenum target, GL.GLfloat u1, GL.GLfloat u2, GL.GLint ustride, GL.GLint uorder, GL.GLfloat v1, GL.GLfloat v2, GL.GLint vstride, GL.GLint vorder, GL.GLfloat w1, GL.GLfloat w2, GL.GLint wstride, GL.GLint worder, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteAsyncMarkersSGIX")]
	public static void glDeleteAsyncMarkersSGIX (GL.GLuint marker, GL.GLsizei range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteBuffers")]
	public static void glDeleteBuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? buffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteBuffersARB")]
	public static void glDeleteBuffersARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? buffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteFencesAPPLE")]
	public static void glDeleteFencesAPPLE (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? fences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteFencesNV")]
	public static void glDeleteFencesNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? fences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteFragmentShaderATI")]
	public static void glDeleteFragmentShaderATI (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteFramebuffers")]
	public static void glDeleteFramebuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? framebuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteFramebuffersEXT")]
	public static void glDeleteFramebuffersEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? framebuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteLists")]
	public static void glDeleteLists (GL.GLuint list, GL.GLsizei range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteNamedStringARB")]
	public static void glDeleteNamedStringARB (GL.GLint namelen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteNamesAMD")]
	public static void glDeleteNamesAMD (GL.GLenum identifier, GL.GLuint num, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? names);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteObjectARB")]
	public static void glDeleteObjectARB (GL.GLhandleARB obj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteOcclusionQueriesNV")]
	public static void glDeleteOcclusionQueriesNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeletePerfMonitorsAMD")]
	public static void glDeletePerfMonitorsAMD (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] monitors);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteProgram")]
	public static void glDeleteProgram (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteProgramPipelines")]
	public static void glDeleteProgramPipelines (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? pipelines);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteProgramsARB")]
	public static void glDeleteProgramsARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? programs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteProgramsNV")]
	public static void glDeleteProgramsNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? programs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteQueries")]
	public static void glDeleteQueries (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteQueriesARB")]
	public static void glDeleteQueriesARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteRenderbuffers")]
	public static void glDeleteRenderbuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? renderbuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteRenderbuffersEXT")]
	public static void glDeleteRenderbuffersEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? renderbuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteSamplers")]
	public static void glDeleteSamplers (GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? samplers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteShader")]
	public static void glDeleteShader (GL.GLuint shader);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteSync")]
	public static void glDeleteSync (GL.GLsync sync);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteTextures")]
	public static void glDeleteTextures (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteTexturesEXT")]
	public static void glDeleteTexturesEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteTransformFeedbacks")]
	public static void glDeleteTransformFeedbacks (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteTransformFeedbacksNV")]
	public static void glDeleteTransformFeedbacksNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteVertexArrays")]
	public static void glDeleteVertexArrays (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? arrays);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteVertexArraysAPPLE")]
	public static void glDeleteVertexArraysAPPLE (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? arrays);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDeleteVertexShaderEXT")]
	public static void glDeleteVertexShaderEXT (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthBoundsEXT")]
	public static void glDepthBoundsEXT (GL.GLclampd zmin, GL.GLclampd zmax);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthBoundsdNV")]
	public static void glDepthBoundsdNV (GL.GLdouble zmin, GL.GLdouble zmax);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthFunc")]
	public static void glDepthFunc (GL.GLenum func);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthMask")]
	public static void glDepthMask (GL.GLboolean flag);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthRange")]
	public static void glDepthRange (GL.GLclampd near, GL.GLclampd far);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthRangeArrayv")]
	public static void glDepthRangeArrayv (GL.GLuint first, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLclampd[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthRangeIndexed")]
	public static void glDepthRangeIndexed (GL.GLuint index, GL.GLclampd n, GL.GLclampd f);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthRangedNV")]
	public static void glDepthRangedNV (GL.GLdouble zNear, GL.GLdouble zFar);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDepthRangef")]
	public static void glDepthRangef (GL.GLclampf n, GL.GLclampf f);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDetachObjectARB")]
	public static void glDetachObjectARB (GL.GLhandleARB containerObj, GL.GLhandleARB attachedObj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDetachShader")]
	public static void glDetachShader (GL.GLuint program, GL.GLuint shader);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDetailTexFuncSGIS")]
	public static void glDetailTexFuncSGIS (GL.GLenum target, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisable")]
	public static void glDisable (GL.GLenum cap);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableClientState")]
	public static void glDisableClientState (GL.GLenum array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableClientStateIndexedEXT")]
	public static void glDisableClientStateIndexedEXT (GL.GLenum array, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableIndexedEXT")]
	public static void glDisableIndexedEXT (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableVariantClientStateEXT")]
	public static void glDisableVariantClientStateEXT (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableVertexAttribAPPLE")]
	public static void glDisableVertexAttribAPPLE (GL.GLuint index, GL.GLenum pname);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableVertexAttribArray")]
	public static void glDisableVertexAttribArray (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisableVertexAttribArrayARB")]
	public static void glDisableVertexAttribArrayARB (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDisablei")]
	public static void glDisablei (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArrays")]
	public static void glDrawArrays (GL.GLenum mode, GL.GLint first, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysEXT")]
	public static void glDrawArraysEXT (GL.GLenum mode, GL.GLint first, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysIndirect")]
	public static void glDrawArraysIndirect (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indirect);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysInstanced")]
	public static void glDrawArraysInstanced (GL.GLenum mode, GL.GLint first, GL.GLsizei count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysInstancedARB")]
	public static void glDrawArraysInstancedARB (GL.GLenum mode, GL.GLint first, GL.GLsizei count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysInstancedBaseInstance")]
	public static void glDrawArraysInstancedBaseInstance (GL.GLenum mode, GL.GLint first, GL.GLsizei count, GL.GLsizei primcount, GL.GLuint baseinstance);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawArraysInstancedEXT")]
	public static void glDrawArraysInstancedEXT (GL.GLenum mode, GL.GLint start, GL.GLsizei count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawBuffer")]
	public static void glDrawBuffer (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawBuffers")]
	public static void glDrawBuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? bufs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawBuffersARB")]
	public static void glDrawBuffersARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? bufs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawBuffersATI")]
	public static void glDrawBuffersATI (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? bufs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementArrayAPPLE")]
	public static void glDrawElementArrayAPPLE (GL.GLenum mode, GL.GLint first, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementArrayATI")]
	public static void glDrawElementArrayATI (GL.GLenum mode, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElements")]
	public static void glDrawElements (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsBaseVertex")]
	public static void glDrawElementsBaseVertex (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLint basevertex);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsIndirect")]
	public static void glDrawElementsIndirect (GL.GLenum mode, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indirect);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstanced")]
	public static void glDrawElementsInstanced (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstancedARB")]
	public static void glDrawElementsInstancedARB (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstancedBaseInstance")]
	public static void glDrawElementsInstancedBaseInstance (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] void*[]? indices, GL.GLsizei primcount, GL.GLuint baseinstance);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstancedBaseVertex")]
	public static void glDrawElementsInstancedBaseVertex (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount, GL.GLint basevertex);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstancedBaseVertexBaseInstance")]
	public static void glDrawElementsInstancedBaseVertexBaseInstance (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] void*[]? indices, GL.GLsizei primcount, GL.GLint basevertex, GL.GLuint baseinstance);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawElementsInstancedEXT")]
	public static void glDrawElementsInstancedEXT (GL.GLenum mode, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawMeshArraysSUN")]
	public static void glDrawMeshArraysSUN (GL.GLenum mode, GL.GLint first, GL.GLsizei count, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawPixels")]
	public static void glDrawPixels (GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawRangeElementArrayAPPLE")]
	public static void glDrawRangeElementArrayAPPLE (GL.GLenum mode, GL.GLuint start, GL.GLuint end, GL.GLint first, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawRangeElementArrayATI")]
	public static void glDrawRangeElementArrayATI (GL.GLenum mode, GL.GLuint start, GL.GLuint end, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawRangeElements")]
	public static void glDrawRangeElements (GL.GLenum mode, GL.GLuint start, GL.GLuint end, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawRangeElementsBaseVertex")]
	public static void glDrawRangeElementsBaseVertex (GL.GLenum mode, GL.GLuint start, GL.GLuint end, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLint basevertex);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawRangeElementsEXT")]
	public static void glDrawRangeElementsEXT (GL.GLenum mode, GL.GLuint start, GL.GLuint end, GL.GLsizei count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawTransformFeedback")]
	public static void glDrawTransformFeedback (GL.GLenum mode, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawTransformFeedbackInstanced")]
	public static void glDrawTransformFeedbackInstanced (GL.GLenum mode, GL.GLuint id, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawTransformFeedbackNV")]
	public static void glDrawTransformFeedbackNV (GL.GLenum mode, GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawTransformFeedbackStream")]
	public static void glDrawTransformFeedbackStream (GL.GLenum mode, GL.GLuint id, GL.GLuint stream);
	[CCode (cheader_filename = "GL/gl.h", cname = "glDrawTransformFeedbackStreamInstanced")]
	public static void glDrawTransformFeedbackStreamInstanced (GL.GLenum mode, GL.GLuint id, GL.GLuint stream, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlag")]
	public static void glEdgeFlag (GL.GLboolean flag);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlagFormatNV")]
	public static void glEdgeFlagFormatNV (GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlagPointer")]
	public static void glEdgeFlagPointer (GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlagPointerEXT")]
	public static void glEdgeFlagPointerEXT (GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLboolean[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlagPointerListIBM")]
	public static void glEdgeFlagPointerListIBM (GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLboolean[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEdgeFlagv")]
	public static void glEdgeFlagv ([CCode (array_length = false)] GL.GLboolean[]? flag);
	[CCode (cheader_filename = "GL/gl.h", cname = "glElementPointerAPPLE")]
	public static void glElementPointerAPPLE (GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glElementPointerATI")]
	public static void glElementPointerATI (GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnable")]
	public static void glEnable (GL.GLenum cap);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableClientState")]
	public static void glEnableClientState (GL.GLenum array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableClientStateIndexedEXT")]
	public static void glEnableClientStateIndexedEXT (GL.GLenum array, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableIndexedEXT")]
	public static void glEnableIndexedEXT (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableVariantClientStateEXT")]
	public static void glEnableVariantClientStateEXT (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableVertexAttribAPPLE")]
	public static void glEnableVertexAttribAPPLE (GL.GLuint index, GL.GLenum pname);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableVertexAttribArray")]
	public static void glEnableVertexAttribArray (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnableVertexAttribArrayARB")]
	public static void glEnableVertexAttribArrayARB (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnablei")]
	public static void glEnablei (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEnd")]
	public static void glEnd ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndConditionalRender")]
	public static void glEndConditionalRender ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndConditionalRenderNV")]
	public static void glEndConditionalRenderNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndFragmentShaderATI")]
	public static void glEndFragmentShaderATI ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndList")]
	public static void glEndList ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndOcclusionQueryNV")]
	public static void glEndOcclusionQueryNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndPerfMonitorAMD")]
	public static void glEndPerfMonitorAMD (GL.GLuint monitor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndQuery")]
	public static void glEndQuery (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndQueryARB")]
	public static void glEndQueryARB (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndQueryIndexed")]
	public static void glEndQueryIndexed (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndTransformFeedback")]
	public static void glEndTransformFeedback ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndTransformFeedbackEXT")]
	public static void glEndTransformFeedbackEXT ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndTransformFeedbackNV")]
	public static void glEndTransformFeedbackNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndVertexShaderEXT")]
	public static void glEndVertexShaderEXT ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glEndVideoCaptureNV")]
	public static void glEndVideoCaptureNV (GL.GLuint video_capture_slot);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord1d")]
	public static void glEvalCoord1d (GL.GLdouble u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord1dv")]
	public static void glEvalCoord1dv ([CCode (array_length = false)] GL.GLdouble[]? u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord1f")]
	public static void glEvalCoord1f (GL.GLfloat u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord1fv")]
	public static void glEvalCoord1fv ([CCode (array_length = false)] GL.GLfloat[]? u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord2d")]
	public static void glEvalCoord2d (GL.GLdouble u, GL.GLdouble v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord2dv")]
	public static void glEvalCoord2dv ([CCode (array_length = false)] GL.GLdouble[]? u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord2f")]
	public static void glEvalCoord2f (GL.GLfloat u, GL.GLfloat v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalCoord2fv")]
	public static void glEvalCoord2fv ([CCode (array_length = false)] GL.GLfloat[]? u);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalMapsNV")]
	public static void glEvalMapsNV (GL.GLenum target, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalMesh1")]
	public static void glEvalMesh1 (GL.GLenum mode, GL.GLint i1, GL.GLint i2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalMesh2")]
	public static void glEvalMesh2 (GL.GLenum mode, GL.GLint i1, GL.GLint i2, GL.GLint j1, GL.GLint j2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalPoint1")]
	public static void glEvalPoint1 (GL.GLint i);
	[CCode (cheader_filename = "GL/gl.h", cname = "glEvalPoint2")]
	public static void glEvalPoint2 (GL.GLint i, GL.GLint j);
	[CCode (cheader_filename = "GL/gl.h", cname = "glExecuteProgramNV")]
	public static void glExecuteProgramNV (GL.GLenum target, GL.GLuint id, [CCode (array_length = false)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glExtractComponentEXT")]
	public static void glExtractComponentEXT (GL.GLuint res, GL.GLuint src, GL.GLuint num);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFeedbackBuffer")]
	public static void glFeedbackBuffer (GL.GLsizei size, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFenceSync")]
	public static GL.GLsync glFenceSync (GL.GLenum condition, GL.GLbitfield flags);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinalCombinerInputNV")]
	public static void glFinalCombinerInputNV (GL.GLenum variable, GL.GLenum input, GL.GLenum mapping, GL.GLenum componentUsage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinish")]
	public static void glFinish ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinishAsyncSGIX")]
	public static GL.GLint glFinishAsyncSGIX ([CCode (array_length = false)] out unowned GL.GLuint[] markerp);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinishFenceAPPLE")]
	public static void glFinishFenceAPPLE (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinishFenceNV")]
	public static void glFinishFenceNV (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinishObjectAPPLE")]
	public static void glFinishObjectAPPLE (GL.GLenum object, GL.GLint name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFinishTextureSUNX")]
	public static void glFinishTextureSUNX ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlush")]
	public static void glFlush ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushMappedBufferRange")]
	public static void glFlushMappedBufferRange (GL.GLenum target, GL.GLintptr offset, GL.GLsizeiptr length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushMappedBufferRangeAPPLE")]
	public static void glFlushMappedBufferRangeAPPLE (GL.GLenum target, GL.GLintptr offset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushMappedNamedBufferRangeEXT")]
	public static void glFlushMappedNamedBufferRangeEXT (GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushPixelDataRangeNV")]
	public static void glFlushPixelDataRangeNV (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushRasterSGIX")]
	public static void glFlushRasterSGIX ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushVertexArrayRangeAPPLE")]
	public static void glFlushVertexArrayRangeAPPLE (GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFlushVertexArrayRangeNV")]
	public static void glFlushVertexArrayRangeNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordFormatNV")]
	public static void glFogCoordFormatNV (GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordPointer")]
	public static void glFogCoordPointer (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordPointerEXT")]
	public static void glFogCoordPointerEXT (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordPointerListIBM")]
	public static void glFogCoordPointerListIBM (GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordd")]
	public static void glFogCoordd (GL.GLdouble coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoorddEXT")]
	public static void glFogCoorddEXT (GL.GLdouble coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoorddv")]
	public static void glFogCoorddv ([CCode (array_length = false)] GL.GLdouble[]? coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoorddvEXT")]
	public static void glFogCoorddvEXT ([CCode (array_length = false)] GL.GLdouble[]? coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordf")]
	public static void glFogCoordf (GL.GLfloat coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordfEXT")]
	public static void glFogCoordfEXT (GL.GLfloat coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordfv")]
	public static void glFogCoordfv ([CCode (array_length = false)] GL.GLfloat[]? coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordfvEXT")]
	public static void glFogCoordfvEXT ([CCode (array_length = false)] GL.GLfloat[]? coord);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordhNV")]
	public static void glFogCoordhNV (GL.GLhalfNV fog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogCoordhvNV")]
	public static void glFogCoordhvNV ([CCode (array_length = false)] GL.GLhalfNV[]? fog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogFuncSGIS")]
	public static void glFogFuncSGIS (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogf")]
	public static void glFogf (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogfv")]
	public static void glFogfv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogi")]
	public static void glFogi (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFogiv")]
	public static void glFogiv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentColorMaterialSGIX")]
	public static void glFragmentColorMaterialSGIX (GL.GLenum face, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightModelfSGIX")]
	public static void glFragmentLightModelfSGIX (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightModelfvSGIX")]
	public static void glFragmentLightModelfvSGIX (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightModeliSGIX")]
	public static void glFragmentLightModeliSGIX (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightModelivSGIX")]
	public static void glFragmentLightModelivSGIX (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightfSGIX")]
	public static void glFragmentLightfSGIX (GL.GLenum light, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightfvSGIX")]
	public static void glFragmentLightfvSGIX (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightiSGIX")]
	public static void glFragmentLightiSGIX (GL.GLenum light, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentLightivSGIX")]
	public static void glFragmentLightivSGIX (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentMaterialfSGIX")]
	public static void glFragmentMaterialfSGIX (GL.GLenum face, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentMaterialfvSGIX")]
	public static void glFragmentMaterialfvSGIX (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentMaterialiSGIX")]
	public static void glFragmentMaterialiSGIX (GL.GLenum face, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFragmentMaterialivSGIX")]
	public static void glFragmentMaterialivSGIX (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFrameTerminatorGREMEDY")]
	public static void glFrameTerminatorGREMEDY ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glFrameZoomSGIX")]
	public static void glFrameZoomSGIX (GL.GLint factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferDrawBufferEXT")]
	public static void glFramebufferDrawBufferEXT (GL.GLuint framebuffer, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferDrawBuffersEXT")]
	public static void glFramebufferDrawBuffersEXT (GL.GLuint framebuffer, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? bufs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferReadBufferEXT")]
	public static void glFramebufferReadBufferEXT (GL.GLuint framebuffer, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferRenderbuffer")]
	public static void glFramebufferRenderbuffer (GL.GLenum target, GL.GLenum attachment, GL.GLenum renderbuffertarget, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferRenderbufferEXT")]
	public static void glFramebufferRenderbufferEXT (GL.GLenum target, GL.GLenum attachment, GL.GLenum renderbuffertarget, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture")]
	public static void glFramebufferTexture (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture1D")]
	public static void glFramebufferTexture1D (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture1DEXT")]
	public static void glFramebufferTexture1DEXT (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture2D")]
	public static void glFramebufferTexture2D (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture2DEXT")]
	public static void glFramebufferTexture2DEXT (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture3D")]
	public static void glFramebufferTexture3D (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level, GL.GLint zoffset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTexture3DEXT")]
	public static void glFramebufferTexture3DEXT (GL.GLenum target, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level, GL.GLint zoffset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureARB")]
	public static void glFramebufferTextureARB (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureEXT")]
	public static void glFramebufferTextureEXT (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureFaceARB")]
	public static void glFramebufferTextureFaceARB (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLenum face);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureFaceEXT")]
	public static void glFramebufferTextureFaceEXT (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLenum face);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureLayer")]
	public static void glFramebufferTextureLayer (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLint layer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureLayerARB")]
	public static void glFramebufferTextureLayerARB (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLint layer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFramebufferTextureLayerEXT")]
	public static void glFramebufferTextureLayerEXT (GL.GLenum target, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLint layer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFreeObjectBufferATI")]
	public static void glFreeObjectBufferATI (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFrontFace")]
	public static void glFrontFace (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glFrustum")]
	public static void glFrustum (GL.GLdouble left, GL.GLdouble right, GL.GLdouble bottom, GL.GLdouble top, GL.GLdouble zNear, GL.GLdouble zFar);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenAsyncMarkersSGIX")]
	public static GL.GLuint glGenAsyncMarkersSGIX (GL.GLsizei range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenBuffers")]
	public static void glGenBuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] buffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenBuffersARB")]
	public static void glGenBuffersARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] buffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenFencesAPPLE")]
	public static void glGenFencesAPPLE (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] fences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenFencesNV")]
	public static void glGenFencesNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] fences);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenFragmentShadersATI")]
	public static GL.GLuint glGenFragmentShadersATI (GL.GLuint range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenFramebuffers")]
	public static void glGenFramebuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] framebuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenFramebuffersEXT")]
	public static void glGenFramebuffersEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] framebuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenLists")]
	public static GL.GLuint glGenLists (GL.GLsizei range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenNamesAMD")]
	public static void glGenNamesAMD (GL.GLenum identifier, GL.GLuint num, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] names);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenOcclusionQueriesNV")]
	public static void glGenOcclusionQueriesNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenPerfMonitorsAMD")]
	public static void glGenPerfMonitorsAMD (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] monitors);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenProgramPipelines")]
	public static void glGenProgramPipelines (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] pipelines);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenProgramsARB")]
	public static void glGenProgramsARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] programs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenProgramsNV")]
	public static void glGenProgramsNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] programs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenQueries")]
	public static void glGenQueries (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenQueriesARB")]
	public static void glGenQueriesARB (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenRenderbuffers")]
	public static void glGenRenderbuffers (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] renderbuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenRenderbuffersEXT")]
	public static void glGenRenderbuffersEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] renderbuffers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenSamplers")]
	public static void glGenSamplers (GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] samplers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenSymbolsEXT")]
	public static GL.GLuint glGenSymbolsEXT (GL.GLenum datatype, GL.GLenum storagetype, GL.GLenum range, GL.GLuint components);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenTextures")]
	public static void glGenTextures (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] textures);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenTexturesEXT")]
	public static void glGenTexturesEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] textures);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenTransformFeedbacks")]
	public static void glGenTransformFeedbacks (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenTransformFeedbacksNV")]
	public static void glGenTransformFeedbacksNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenVertexArrays")]
	public static void glGenVertexArrays (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] arrays);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenVertexArraysAPPLE")]
	public static void glGenVertexArraysAPPLE (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] arrays);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenVertexShadersEXT")]
	public static GL.GLuint glGenVertexShadersEXT (GL.GLuint range);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenerateMipmap")]
	public static void glGenerateMipmap (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenerateMipmapEXT")]
	public static void glGenerateMipmapEXT (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenerateMultiTexMipmapEXT")]
	public static void glGenerateMultiTexMipmapEXT (GL.GLenum texunit, GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGenerateTextureMipmapEXT")]
	public static void glGenerateTextureMipmapEXT (GL.GLuint texture, GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveAtomicCounterBufferiv")]
	public static void glGetActiveAtomicCounterBufferiv (GL.GLuint program, GL.GLuint bufferIndex, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveAttrib")]
	public static void glGetActiveAttrib (GL.GLuint program, GL.GLuint index, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLint[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveAttribARB")]
	public static void glGetActiveAttribARB (GL.GLhandleARB programObj, GL.GLuint index, GL.GLsizei maxLength, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLint[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLcharARB[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveSubroutineName")]
	public static void glGetActiveSubroutineName (GL.GLuint program, GL.GLenum shadertype, GL.GLuint index, GL.GLsizei bufsize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveSubroutineUniformName")]
	public static void glGetActiveSubroutineUniformName (GL.GLuint program, GL.GLenum shadertype, GL.GLuint index, GL.GLsizei bufsize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveSubroutineUniformiv")]
	public static void glGetActiveSubroutineUniformiv (GL.GLuint program, GL.GLenum shadertype, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniform")]
	public static void glGetActiveUniform (GL.GLuint program, GL.GLuint index, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLint[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniformARB")]
	public static void glGetActiveUniformARB (GL.GLhandleARB programObj, GL.GLuint index, GL.GLsizei maxLength, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLint[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLcharARB[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniformBlockName")]
	public static void glGetActiveUniformBlockName (GL.GLuint program, GL.GLuint uniformBlockIndex, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] uniformBlockName);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniformBlockiv")]
	public static void glGetActiveUniformBlockiv (GL.GLuint program, GL.GLuint uniformBlockIndex, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniformName")]
	public static void glGetActiveUniformName (GL.GLuint program, GL.GLuint uniformIndex, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] uniformName);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveUniformsiv")]
	public static void glGetActiveUniformsiv (GL.GLuint program, GL.GLsizei uniformCount, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? uniformIndices, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetActiveVaryingNV")]
	public static void glGetActiveVaryingNV (GL.GLuint program, GL.GLuint index, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLsizei[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetArrayObjectfvATI")]
	public static void glGetArrayObjectfvATI (GL.GLenum array, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetArrayObjectivATI")]
	public static void glGetArrayObjectivATI (GL.GLenum array, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetAttachedObjectsARB")]
	public static void glGetAttachedObjectsARB (GL.GLhandleARB containerObj, GL.GLsizei maxCount, [CCode (array_length = false)] out unowned GL.GLsizei[] count, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLhandleARB[] obj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetAttachedShaders")]
	public static void glGetAttachedShaders (GL.GLuint program, GL.GLsizei maxCount, [CCode (array_length = false)] out unowned GL.GLsizei[] count, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] obj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetAttribLocation")]
	public static GL.GLint glGetAttribLocation (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetAttribLocationARB")]
	public static GL.GLint glGetAttribLocationARB (GL.GLhandleARB programObj, [CCode (array_length = false, array_null_terminated = true)] GL.GLcharARB[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBooleanIndexedvEXT")]
	public static void glGetBooleanIndexedvEXT (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBooleani_v")]
	public static void glGetBooleani_v (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBooleanv")]
	public static void glGetBooleanv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferParameteri64v")]
	public static void glGetBufferParameteri64v (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferParameteriv")]
	public static void glGetBufferParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferParameterivARB")]
	public static void glGetBufferParameterivARB (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferParameterui64vNV")]
	public static void glGetBufferParameterui64vNV (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferPointerv")]
	public static void glGetBufferPointerv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferPointervARB")]
	public static void glGetBufferPointervARB (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferSubData")]
	public static void glGetBufferSubData (GL.GLenum target, GL.GLintptr offset, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetBufferSubDataARB")]
	public static void glGetBufferSubDataARB (GL.GLenum target, GL.GLintptrARB offset, GL.GLsizeiptrARB size, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetClipPlane")]
	public static void glGetClipPlane (GL.GLenum plane, [CCode (array_length = false)] out unowned GL.GLdouble[] equation);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTable")]
	public static void glGetColorTable (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableEXT")]
	public static void glGetColorTableEXT (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameterfv")]
	public static void glGetColorTableParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameterfvEXT")]
	public static void glGetColorTableParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameterfvSGI")]
	public static void glGetColorTableParameterfvSGI (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameteriv")]
	public static void glGetColorTableParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameterivEXT")]
	public static void glGetColorTableParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableParameterivSGI")]
	public static void glGetColorTableParameterivSGI (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetColorTableSGI")]
	public static void glGetColorTableSGI (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCombinerInputParameterfvNV")]
	public static void glGetCombinerInputParameterfvNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum variable, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCombinerInputParameterivNV")]
	public static void glGetCombinerInputParameterivNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum variable, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCombinerOutputParameterfvNV")]
	public static void glGetCombinerOutputParameterfvNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCombinerOutputParameterivNV")]
	public static void glGetCombinerOutputParameterivNV (GL.GLenum stage, GL.GLenum portion, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCombinerStageParameterfvNV")]
	public static void glGetCombinerStageParameterfvNV (GL.GLenum stage, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCompressedMultiTexImageEXT")]
	public static void glGetCompressedMultiTexImageEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint lod, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCompressedTexImage")]
	public static void glGetCompressedTexImage (GL.GLenum target, GL.GLint level, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCompressedTexImageARB")]
	public static void glGetCompressedTexImageARB (GL.GLenum target, GL.GLint level, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetCompressedTextureImageEXT")]
	public static void glGetCompressedTextureImageEXT (GL.GLuint texture, GL.GLenum target, GL.GLint lod, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionFilter")]
	public static void glGetConvolutionFilter (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionFilterEXT")]
	public static void glGetConvolutionFilterEXT (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionParameterfv")]
	public static void glGetConvolutionParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionParameterfvEXT")]
	public static void glGetConvolutionParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionParameteriv")]
	public static void glGetConvolutionParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetConvolutionParameterivEXT")]
	public static void glGetConvolutionParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDebugMessageLogAMD")]
	public static GL.GLuint glGetDebugMessageLogAMD (GL.GLuint count, GL.GLsizei bufsize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLenum[] categories, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] severities, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLsizei[] lengths, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] message);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDebugMessageLogARB")]
	public static GL.GLuint glGetDebugMessageLogARB (GL.GLuint count, GL.GLsizei bufsize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLenum[] sources, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLenum[] types, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] ids, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLenum[] severities, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLsizei[] lengths, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] messageLog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDetailTexFuncSGIS")]
	public static void glGetDetailTexFuncSGIS (GL.GLenum target, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDoubleIndexedvEXT")]
	public static void glGetDoubleIndexedvEXT (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDoublei_v")]
	public static void glGetDoublei_v (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetDoublev")]
	public static void glGetDoublev (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetError")]
	public static GL.GLenum glGetError ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFenceivNV")]
	public static void glGetFenceivNV (GL.GLuint fence, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFinalCombinerInputParameterfvNV")]
	public static void glGetFinalCombinerInputParameterfvNV (GL.GLenum variable, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFinalCombinerInputParameterivNV")]
	public static void glGetFinalCombinerInputParameterivNV (GL.GLenum variable, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFloatIndexedvEXT")]
	public static void glGetFloatIndexedvEXT (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFloati_v")]
	public static void glGetFloati_v (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFloatv")]
	public static void glGetFloatv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFogFuncSGIS")]
	public static void glGetFogFuncSGIS ([CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragDataIndex")]
	public static GL.GLint glGetFragDataIndex (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragDataLocation")]
	public static GL.GLint glGetFragDataLocation (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragDataLocationEXT")]
	public static GL.GLint glGetFragDataLocationEXT (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragmentLightfvSGIX")]
	public static void glGetFragmentLightfvSGIX (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragmentLightivSGIX")]
	public static void glGetFragmentLightivSGIX (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragmentMaterialfvSGIX")]
	public static void glGetFragmentMaterialfvSGIX (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFragmentMaterialivSGIX")]
	public static void glGetFragmentMaterialivSGIX (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFramebufferAttachmentParameteriv")]
	public static void glGetFramebufferAttachmentParameteriv (GL.GLenum target, GL.GLenum attachment, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFramebufferAttachmentParameterivEXT")]
	public static void glGetFramebufferAttachmentParameterivEXT (GL.GLenum target, GL.GLenum attachment, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetFramebufferParameterivEXT")]
	public static void glGetFramebufferParameterivEXT (GL.GLuint framebuffer, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetGraphicsResetStatusARB")]
	public static GL.GLenum glGetGraphicsResetStatusARB ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHandleARB")]
	public static GL.GLhandleARB glGetHandleARB (GL.GLenum pname);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogram")]
	public static void glGetHistogram (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogramEXT")]
	public static void glGetHistogramEXT (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogramParameterfv")]
	public static void glGetHistogramParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogramParameterfvEXT")]
	public static void glGetHistogramParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogramParameteriv")]
	public static void glGetHistogramParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetHistogramParameterivEXT")]
	public static void glGetHistogramParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetImageTransformParameterfvHP")]
	public static void glGetImageTransformParameterfvHP (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetImageTransformParameterivHP")]
	public static void glGetImageTransformParameterivHP (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInfoLogARB")]
	public static void glGetInfoLogARB (GL.GLhandleARB obj, GL.GLsizei maxLength, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLcharARB[] infoLog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInstrumentsSGIX")]
	public static GL.GLint glGetInstrumentsSGIX ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInteger64i_v")]
	public static void glGetInteger64i_v (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInteger64v")]
	public static void glGetInteger64v (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetIntegerIndexedvEXT")]
	public static void glGetIntegerIndexedvEXT (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetIntegeri_v")]
	public static void glGetIntegeri_v (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetIntegerui64i_vNV")]
	public static void glGetIntegerui64i_vNV (GL.GLenum value, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] result);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetIntegerui64vNV")]
	public static void glGetIntegerui64vNV (GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] result);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetIntegerv")]
	public static void glGetIntegerv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInternalformativ")]
	public static void glGetInternalformativ (GL.GLenum target, GL.GLenum internalformat, GL.GLenum pname, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInvariantBooleanvEXT")]
	public static void glGetInvariantBooleanvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInvariantFloatvEXT")]
	public static void glGetInvariantFloatvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetInvariantIntegervEXT")]
	public static void glGetInvariantIntegervEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetLightfv")]
	public static void glGetLightfv (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetLightiv")]
	public static void glGetLightiv (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetListParameterfvSGIX")]
	public static void glGetListParameterfvSGIX (GL.GLuint list, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetListParameterivSGIX")]
	public static void glGetListParameterivSGIX (GL.GLuint list, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetLocalConstantBooleanvEXT")]
	public static void glGetLocalConstantBooleanvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetLocalConstantFloatvEXT")]
	public static void glGetLocalConstantFloatvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetLocalConstantIntegervEXT")]
	public static void glGetLocalConstantIntegervEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapAttribParameterfvNV")]
	public static void glGetMapAttribParameterfvNV (GL.GLenum target, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapAttribParameterivNV")]
	public static void glGetMapAttribParameterivNV (GL.GLenum target, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapControlPointsNV")]
	public static void glGetMapControlPointsNV (GL.GLenum target, GL.GLuint index, GL.GLenum type, GL.GLsizei ustride, GL.GLsizei vstride, GL.GLboolean packed, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapParameterfvNV")]
	public static void glGetMapParameterfvNV (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapParameterivNV")]
	public static void glGetMapParameterivNV (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapdv")]
	public static void glGetMapdv (GL.GLenum target, GL.GLenum query, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapfv")]
	public static void glGetMapfv (GL.GLenum target, GL.GLenum query, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMapiv")]
	public static void glGetMapiv (GL.GLenum target, GL.GLenum query, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMaterialfv")]
	public static void glGetMaterialfv (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMaterialiv")]
	public static void glGetMaterialiv (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmax")]
	public static void glGetMinmax (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmaxEXT")]
	public static void glGetMinmaxEXT (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmaxParameterfv")]
	public static void glGetMinmaxParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmaxParameterfvEXT")]
	public static void glGetMinmaxParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmaxParameteriv")]
	public static void glGetMinmaxParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMinmaxParameterivEXT")]
	public static void glGetMinmaxParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexEnvfvEXT")]
	public static void glGetMultiTexEnvfvEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexEnvivEXT")]
	public static void glGetMultiTexEnvivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexGendvEXT")]
	public static void glGetMultiTexGendvEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexGenfvEXT")]
	public static void glGetMultiTexGenfvEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexGenivEXT")]
	public static void glGetMultiTexGenivEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexImageEXT")]
	public static void glGetMultiTexImageEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexLevelParameterfvEXT")]
	public static void glGetMultiTexLevelParameterfvEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexLevelParameterivEXT")]
	public static void glGetMultiTexLevelParameterivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexParameterIivEXT")]
	public static void glGetMultiTexParameterIivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexParameterIuivEXT")]
	public static void glGetMultiTexParameterIuivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexParameterfvEXT")]
	public static void glGetMultiTexParameterfvEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultiTexParameterivEXT")]
	public static void glGetMultiTexParameterivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultisamplefv")]
	public static void glGetMultisamplefv (GL.GLenum pname, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] val);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetMultisamplefvNV")]
	public static void glGetMultisamplefvNV (GL.GLenum pname, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLfloat[] val);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedBufferParameterivEXT")]
	public static void glGetNamedBufferParameterivEXT (GL.GLuint buffer, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedBufferParameterui64vNV")]
	public static void glGetNamedBufferParameterui64vNV (GL.GLuint buffer, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedBufferPointervEXT")]
	public static void glGetNamedBufferPointervEXT (GL.GLuint buffer, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedBufferSubDataEXT")]
	public static void glGetNamedBufferSubDataEXT (GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedFramebufferAttachmentParameterivEXT")]
	public static void glGetNamedFramebufferAttachmentParameterivEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramLocalParameterIivEXT")]
	public static void glGetNamedProgramLocalParameterIivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramLocalParameterIuivEXT")]
	public static void glGetNamedProgramLocalParameterIuivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramLocalParameterdvEXT")]
	public static void glGetNamedProgramLocalParameterdvEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramLocalParameterfvEXT")]
	public static void glGetNamedProgramLocalParameterfvEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramStringEXT")]
	public static void glGetNamedProgramStringEXT (GL.GLuint program, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedProgramivEXT")]
	public static void glGetNamedProgramivEXT (GL.GLuint program, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedRenderbufferParameterivEXT")]
	public static void glGetNamedRenderbufferParameterivEXT (GL.GLuint renderbuffer, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedStringARB")]
	public static void glGetNamedStringARB (GL.GLint namelen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLint[] stringlen, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetNamedStringivARB")]
	public static void glGetNamedStringivARB (GL.GLint namelen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetObjectBufferfvATI")]
	public static void glGetObjectBufferfvATI (GL.GLuint buffer, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetObjectBufferivATI")]
	public static void glGetObjectBufferivATI (GL.GLuint buffer, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetObjectParameterfvARB")]
	public static void glGetObjectParameterfvARB (GL.GLhandleARB obj, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetObjectParameterivAPPLE")]
	public static void glGetObjectParameterivAPPLE (GL.GLenum objectType, GL.GLuint name, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetObjectParameterivARB")]
	public static void glGetObjectParameterivARB (GL.GLhandleARB obj, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetOcclusionQueryivNV")]
	public static void glGetOcclusionQueryivNV (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetOcclusionQueryuivNV")]
	public static void glGetOcclusionQueryuivNV (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorCounterDataAMD")]
	public static void glGetPerfMonitorCounterDataAMD (GL.GLuint monitor, GL.GLenum pname, GL.GLsizei dataSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] data, [CCode (array_length = false)] out unowned GL.GLint[] bytesWritten);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorCounterInfoAMD")]
	public static void glGetPerfMonitorCounterInfoAMD (GL.GLuint group, GL.GLuint counter, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorCounterStringAMD")]
	public static void glGetPerfMonitorCounterStringAMD (GL.GLuint group, GL.GLuint counter, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] counterString);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorCountersAMD")]
	public static void glGetPerfMonitorCountersAMD (GL.GLuint group, [CCode (array_length = false)] out unowned GL.GLint[] numCounters, [CCode (array_length = false)] out unowned GL.GLint[] maxActiveCounters, GL.GLsizei counterSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] counters);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorGroupStringAMD")]
	public static void glGetPerfMonitorGroupStringAMD (GL.GLuint group, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] groupString);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPerfMonitorGroupsAMD")]
	public static void glGetPerfMonitorGroupsAMD ([CCode (array_length = false)] out unowned GL.GLint[] numGroups, GL.GLsizei groupsSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] groups);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPixelMapfv")]
	public static void glGetPixelMapfv (GL.GLenum map, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPixelMapuiv")]
	public static void glGetPixelMapuiv (GL.GLenum map, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPixelMapusv")]
	public static void glGetPixelMapusv (GL.GLenum map, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLushort[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPixelTexGenParameterfvSGIS")]
	public static void glGetPixelTexGenParameterfvSGIS (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPixelTexGenParameterivSGIS")]
	public static void glGetPixelTexGenParameterivSGIS (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPointerIndexedvEXT")]
	public static void glGetPointerIndexedvEXT (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPointerv")]
	public static void glGetPointerv (GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPointervEXT")]
	public static void glGetPointervEXT (GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetPolygonStipple")]
	public static void glGetPolygonStipple ([CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLubyte[] mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramBinary")]
	public static void glGetProgramBinary (GL.GLuint program, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLenum[] binaryFormat, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] binary);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramEnvParameterIivNV")]
	public static void glGetProgramEnvParameterIivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramEnvParameterIuivNV")]
	public static void glGetProgramEnvParameterIuivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramEnvParameterdvARB")]
	public static void glGetProgramEnvParameterdvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramEnvParameterfvARB")]
	public static void glGetProgramEnvParameterfvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramInfoLog")]
	public static void glGetProgramInfoLog (GL.GLuint program, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] infoLog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramLocalParameterIivNV")]
	public static void glGetProgramLocalParameterIivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramLocalParameterIuivNV")]
	public static void glGetProgramLocalParameterIuivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramLocalParameterdvARB")]
	public static void glGetProgramLocalParameterdvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramLocalParameterfvARB")]
	public static void glGetProgramLocalParameterfvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramNamedParameterdvNV")]
	public static void glGetProgramNamedParameterdvNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramNamedParameterfvNV")]
	public static void glGetProgramNamedParameterfvNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramParameterdvNV")]
	public static void glGetProgramParameterdvNV (GL.GLenum target, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramParameterfvNV")]
	public static void glGetProgramParameterfvNV (GL.GLenum target, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramPipelineInfoLog")]
	public static void glGetProgramPipelineInfoLog (GL.GLuint pipeline, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] infoLog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramPipelineiv")]
	public static void glGetProgramPipelineiv (GL.GLuint pipeline, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramStageiv")]
	public static void glGetProgramStageiv (GL.GLuint program, GL.GLenum shadertype, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramStringARB")]
	public static void glGetProgramStringARB (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramStringNV")]
	public static void glGetProgramStringNV (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLubyte[] program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramSubroutineParameteruivNV")]
	public static void glGetProgramSubroutineParameteruivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramiv")]
	public static void glGetProgramiv (GL.GLuint program, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramivARB")]
	public static void glGetProgramivARB (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetProgramivNV")]
	public static void glGetProgramivNV (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryIndexediv")]
	public static void glGetQueryIndexediv (GL.GLenum target, GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjecti64v")]
	public static void glGetQueryObjecti64v (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjecti64vEXT")]
	public static void glGetQueryObjecti64vEXT (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectiv")]
	public static void glGetQueryObjectiv (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectivARB")]
	public static void glGetQueryObjectivARB (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectui64v")]
	public static void glGetQueryObjectui64v (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectui64vEXT")]
	public static void glGetQueryObjectui64vEXT (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectuiv")]
	public static void glGetQueryObjectuiv (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryObjectuivARB")]
	public static void glGetQueryObjectuivARB (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryiv")]
	public static void glGetQueryiv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetQueryivARB")]
	public static void glGetQueryivARB (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetRenderbufferParameteriv")]
	public static void glGetRenderbufferParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetRenderbufferParameterivEXT")]
	public static void glGetRenderbufferParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSamplerParameterIiv")]
	public static void glGetSamplerParameterIiv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSamplerParameterIuiv")]
	public static void glGetSamplerParameterIuiv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSamplerParameterfv")]
	public static void glGetSamplerParameterfv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSamplerParameteriv")]
	public static void glGetSamplerParameteriv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSeparableFilter")]
	public static void glGetSeparableFilter (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] row, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] column, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] span);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSeparableFilterEXT")]
	public static void glGetSeparableFilterEXT (GL.GLenum target, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] row, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] column, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] span);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetShaderInfoLog")]
	public static void glGetShaderInfoLog (GL.GLuint shader, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] infoLog);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetShaderPrecisionFormat")]
	public static void glGetShaderPrecisionFormat (GL.GLenum shadertype, GL.GLenum precisiontype, [CCode (array_length = false)] out unowned GL.GLint[] range, [CCode (array_length = false)] out unowned GL.GLint[] precision);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetShaderSource")]
	public static void glGetShaderSource (GL.GLuint shader, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] source);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetShaderSourceARB")]
	public static void glGetShaderSourceARB (GL.GLhandleARB obj, GL.GLsizei maxLength, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLcharARB[] source);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetShaderiv")]
	public static void glGetShaderiv (GL.GLuint shader, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSharpenTexFuncSGIS")]
	public static void glGetSharpenTexFuncSGIS (GL.GLenum target, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetString")]
	public static GL.GLubyte glGetString (GL.GLenum name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetStringi")]
	public static GL.GLubyte glGetStringi (GL.GLenum name, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSubroutineIndex")]
	public static GL.GLuint glGetSubroutineIndex (GL.GLuint program, GL.GLenum shadertype, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSubroutineUniformLocation")]
	public static GL.GLint glGetSubroutineUniformLocation (GL.GLuint program, GL.GLenum shadertype, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetSynciv")]
	public static void glGetSynciv (GL.GLsync sync, GL.GLenum pname, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexBumpParameterfvATI")]
	public static void glGetTexBumpParameterfvATI (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexBumpParameterivATI")]
	public static void glGetTexBumpParameterivATI (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexEnvfv")]
	public static void glGetTexEnvfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexEnviv")]
	public static void glGetTexEnviv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexFilterFuncSGIS")]
	public static void glGetTexFilterFuncSGIS (GL.GLenum target, GL.GLenum filter, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexGendv")]
	public static void glGetTexGendv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexGenfv")]
	public static void glGetTexGenfv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexGeniv")]
	public static void glGetTexGeniv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexImage")]
	public static void glGetTexImage (GL.GLenum target, GL.GLint level, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexLevelParameterfv")]
	public static void glGetTexLevelParameterfv (GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexLevelParameteriv")]
	public static void glGetTexLevelParameteriv (GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterIiv")]
	public static void glGetTexParameterIiv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterIivEXT")]
	public static void glGetTexParameterIivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterIuiv")]
	public static void glGetTexParameterIuiv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterIuivEXT")]
	public static void glGetTexParameterIuivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterPointervAPPLE")]
	public static void glGetTexParameterPointervAPPLE (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameterfv")]
	public static void glGetTexParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTexParameteriv")]
	public static void glGetTexParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureImageEXT")]
	public static void glGetTextureImageEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureLevelParameterfvEXT")]
	public static void glGetTextureLevelParameterfvEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureLevelParameterivEXT")]
	public static void glGetTextureLevelParameterivEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureParameterIivEXT")]
	public static void glGetTextureParameterIivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureParameterIuivEXT")]
	public static void glGetTextureParameterIuivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureParameterfvEXT")]
	public static void glGetTextureParameterfvEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTextureParameterivEXT")]
	public static void glGetTextureParameterivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTrackMatrixivNV")]
	public static void glGetTrackMatrixivNV (GL.GLenum target, GL.GLuint address, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTransformFeedbackVarying")]
	public static void glGetTransformFeedbackVarying (GL.GLuint program, GL.GLuint index, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLsizei[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTransformFeedbackVaryingEXT")]
	public static void glGetTransformFeedbackVaryingEXT (GL.GLuint program, GL.GLuint index, GL.GLsizei bufSize, [CCode (array_length = false)] out unowned GL.GLsizei[] length, [CCode (array_length = false)] out unowned GL.GLsizei[] size, [CCode (array_length = false)] out unowned GL.GLenum[] type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLchar[] name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetTransformFeedbackVaryingNV")]
	public static void glGetTransformFeedbackVaryingNV (GL.GLuint program, GL.GLuint index, [CCode (array_length = false)] out unowned GL.GLint[] location);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformBlockIndex")]
	public static GL.GLuint glGetUniformBlockIndex (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? uniformBlockName);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformBufferSizeEXT")]
	public static GL.GLint glGetUniformBufferSizeEXT (GL.GLuint program, GL.GLint location);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformIndices")]
	public static void glGetUniformIndices (GL.GLuint program, GL.GLsizei uniformCount, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? uniformNames, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] uniformIndices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformLocation")]
	public static GL.GLint glGetUniformLocation (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformLocationARB")]
	public static GL.GLint glGetUniformLocationARB (GL.GLhandleARB programObj, [CCode (array_length = false, array_null_terminated = true)] GL.GLcharARB[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformOffsetEXT")]
	public static GL.GLintptr glGetUniformOffsetEXT (GL.GLuint program, GL.GLint location);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformSubroutineuiv")]
	public static void glGetUniformSubroutineuiv (GL.GLenum shadertype, GL.GLint location, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformdv")]
	public static void glGetUniformdv (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformfv")]
	public static void glGetUniformfv (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformfvARB")]
	public static void glGetUniformfvARB (GL.GLhandleARB programObj, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformi64vNV")]
	public static void glGetUniformi64vNV (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformiv")]
	public static void glGetUniformiv (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformivARB")]
	public static void glGetUniformivARB (GL.GLhandleARB programObj, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformui64vNV")]
	public static void glGetUniformui64vNV (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformuiv")]
	public static void glGetUniformuiv (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetUniformuivEXT")]
	public static void glGetUniformuivEXT (GL.GLuint program, GL.GLint location, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantArrayObjectfvATI")]
	public static void glGetVariantArrayObjectfvATI (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantArrayObjectivATI")]
	public static void glGetVariantArrayObjectivATI (GL.GLuint id, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantBooleanvEXT")]
	public static void glGetVariantBooleanvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLboolean[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantFloatvEXT")]
	public static void glGetVariantFloatvEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantIntegervEXT")]
	public static void glGetVariantIntegervEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVariantPointervEXT")]
	public static void glGetVariantPointervEXT (GL.GLuint id, GL.GLenum value, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVaryingLocationNV")]
	public static GL.GLint glGetVaryingLocationNV (GL.GLuint program, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribArrayObjectfvATI")]
	public static void glGetVertexAttribArrayObjectfvATI (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribArrayObjectivATI")]
	public static void glGetVertexAttribArrayObjectivATI (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribIiv")]
	public static void glGetVertexAttribIiv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribIivEXT")]
	public static void glGetVertexAttribIivEXT (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribIuiv")]
	public static void glGetVertexAttribIuiv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribIuivEXT")]
	public static void glGetVertexAttribIuivEXT (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribLdv")]
	public static void glGetVertexAttribLdv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribLdvEXT")]
	public static void glGetVertexAttribLdvEXT (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribLi64vNV")]
	public static void glGetVertexAttribLi64vNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribLui64vNV")]
	public static void glGetVertexAttribLui64vNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribPointerv")]
	public static void glGetVertexAttribPointerv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribPointervARB")]
	public static void glGetVertexAttribPointervARB (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribPointervNV")]
	public static void glGetVertexAttribPointervNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribdv")]
	public static void glGetVertexAttribdv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribdvARB")]
	public static void glGetVertexAttribdvARB (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribdvNV")]
	public static void glGetVertexAttribdvNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribfv")]
	public static void glGetVertexAttribfv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribfvARB")]
	public static void glGetVertexAttribfvARB (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribfvNV")]
	public static void glGetVertexAttribfvNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribiv")]
	public static void glGetVertexAttribiv (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribivARB")]
	public static void glGetVertexAttribivARB (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVertexAttribivNV")]
	public static void glGetVertexAttribivNV (GL.GLuint index, GL.GLenum pname, [CCode (array_length = false)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoCaptureStreamdvNV")]
	public static void glGetVideoCaptureStreamdvNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoCaptureStreamfvNV")]
	public static void glGetVideoCaptureStreamfvNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoCaptureStreamivNV")]
	public static void glGetVideoCaptureStreamivNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoCaptureivNV")]
	public static void glGetVideoCaptureivNV (GL.GLuint video_capture_slot, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoi64vNV")]
	public static void glGetVideoi64vNV (GL.GLuint video_slot, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoivNV")]
	public static void glGetVideoivNV (GL.GLuint video_slot, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideoui64vNV")]
	public static void glGetVideoui64vNV (GL.GLuint video_slot, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint64EXT[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetVideouivNV")]
	public static void glGetVideouivNV (GL.GLuint video_slot, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnColorTableARB")]
	public static void glGetnColorTableARB (GL.GLenum target, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] table);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnCompressedTexImageARB")]
	public static void glGetnCompressedTexImageARB (GL.GLenum target, GL.GLint lod, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnConvolutionFilterARB")]
	public static void glGetnConvolutionFilterARB (GL.GLenum target, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] image);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnHistogramARB")]
	public static void glGetnHistogramARB (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnMapdvARB")]
	public static void glGetnMapdvARB (GL.GLenum target, GL.GLenum query, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnMapfvARB")]
	public static void glGetnMapfvARB (GL.GLenum target, GL.GLenum query, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnMapivARB")]
	public static void glGetnMapivARB (GL.GLenum target, GL.GLenum query, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnMinmaxARB")]
	public static void glGetnMinmaxARB (GL.GLenum target, GL.GLboolean reset, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnPixelMapfvARB")]
	public static void glGetnPixelMapfvARB (GL.GLenum map, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnPixelMapuivARB")]
	public static void glGetnPixelMapuivARB (GL.GLenum map, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnPixelMapusvARB")]
	public static void glGetnPixelMapusvARB (GL.GLenum map, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLushort[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnPolygonStippleARB")]
	public static void glGetnPolygonStippleARB (GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLubyte[] pattern);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnSeparableFilterARB")]
	public static void glGetnSeparableFilterARB (GL.GLenum target, GL.GLenum format, GL.GLenum type, GL.GLsizei rowBufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] row, GL.GLsizei columnBufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] column, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] span);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnTexImageARB")]
	public static void glGetnTexImageARB (GL.GLenum target, GL.GLint level, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] img);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnUniformdvARB")]
	public static void glGetnUniformdvARB (GL.GLuint program, GL.GLint location, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLdouble[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnUniformfvARB")]
	public static void glGetnUniformfvARB (GL.GLuint program, GL.GLint location, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLfloat[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnUniformivARB")]
	public static void glGetnUniformivARB (GL.GLuint program, GL.GLint location, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGetnUniformuivARB")]
	public static void glGetnUniformuivARB (GL.GLuint program, GL.GLint location, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactorbSUN")]
	public static void glGlobalAlphaFactorbSUN (GL.GLbyte factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactordSUN")]
	public static void glGlobalAlphaFactordSUN (GL.GLdouble factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactorfSUN")]
	public static void glGlobalAlphaFactorfSUN (GL.GLfloat factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactoriSUN")]
	public static void glGlobalAlphaFactoriSUN (GL.GLint factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactorsSUN")]
	public static void glGlobalAlphaFactorsSUN (GL.GLshort factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactorubSUN")]
	public static void glGlobalAlphaFactorubSUN (GL.GLubyte factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactoruiSUN")]
	public static void glGlobalAlphaFactoruiSUN (GL.GLuint factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glGlobalAlphaFactorusSUN")]
	public static void glGlobalAlphaFactorusSUN (GL.GLushort factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glHint")]
	public static void glHint (GL.GLenum target, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glHintPGI")]
	public static void glHintPGI (GL.GLenum target, GL.GLint mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glHistogram")]
	public static void glHistogram (GL.GLenum target, GL.GLsizei width, GL.GLenum internalformat, GL.GLboolean sink);
	[CCode (cheader_filename = "GL/gl.h", cname = "glHistogramEXT")]
	public static void glHistogramEXT (GL.GLenum target, GL.GLsizei width, GL.GLenum internalformat, GL.GLboolean sink);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIglooInterfaceSGIX")]
	public static void glIglooInterfaceSGIX (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glImageTransformParameterfHP")]
	public static void glImageTransformParameterfHP (GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glImageTransformParameterfvHP")]
	public static void glImageTransformParameterfvHP (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glImageTransformParameteriHP")]
	public static void glImageTransformParameteriHP (GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glImageTransformParameterivHP")]
	public static void glImageTransformParameterivHP (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glImportSyncEXT")]
	public static GL.GLsync glImportSyncEXT (GL.GLenum external_sync_type, GL.GLintptr external_sync, GL.GLbitfield flags);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexFormatNV")]
	public static void glIndexFormatNV (GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexFuncEXT")]
	public static void glIndexFuncEXT (GL.GLenum func, GL.GLclampf @ref);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexMask")]
	public static void glIndexMask (GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexMaterialEXT")]
	public static void glIndexMaterialEXT (GL.GLenum face, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexPointer")]
	public static void glIndexPointer (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexPointerEXT")]
	public static void glIndexPointerEXT (GL.GLenum type, GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexPointerListIBM")]
	public static void glIndexPointerListIBM (GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexd")]
	public static void glIndexd (GL.GLdouble c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexdv")]
	public static void glIndexdv ([CCode (array_length = false)] GL.GLdouble[]? c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexf")]
	public static void glIndexf (GL.GLfloat c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexfv")]
	public static void glIndexfv ([CCode (array_length = false)] GL.GLfloat[]? c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexi")]
	public static void glIndexi (GL.GLint c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexiv")]
	public static void glIndexiv ([CCode (array_length = false)] GL.GLint[]? c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexs")]
	public static void glIndexs (GL.GLshort c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexsv")]
	public static void glIndexsv ([CCode (array_length = false)] GL.GLshort[]? c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexub")]
	public static void glIndexub (GL.GLubyte c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIndexubv")]
	public static void glIndexubv ([CCode (array_length = false)] GL.GLubyte[]? c);
	[CCode (cheader_filename = "GL/gl.h", cname = "glInitNames")]
	public static void glInitNames ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glInsertComponentEXT")]
	public static void glInsertComponentEXT (GL.GLuint res, GL.GLuint src, GL.GLuint num);
	[CCode (cheader_filename = "GL/gl.h", cname = "glInstrumentsBufferSGIX")]
	public static void glInstrumentsBufferSGIX (GL.GLsizei size, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glInterleavedArrays")]
	public static void glInterleavedArrays (GL.GLenum format, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsAsyncMarkerSGIX")]
	public static GL.GLboolean glIsAsyncMarkerSGIX (GL.GLuint marker);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsBuffer")]
	public static GL.GLboolean glIsBuffer (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsBufferARB")]
	public static GL.GLboolean glIsBufferARB (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsBufferResidentNV")]
	public static GL.GLboolean glIsBufferResidentNV (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsEnabled")]
	public static GL.GLboolean glIsEnabled (GL.GLenum cap);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsEnabledIndexedEXT")]
	public static GL.GLboolean glIsEnabledIndexedEXT (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsEnabledi")]
	public static GL.GLboolean glIsEnabledi (GL.GLenum target, GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsFenceAPPLE")]
	public static GL.GLboolean glIsFenceAPPLE (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsFenceNV")]
	public static GL.GLboolean glIsFenceNV (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsFramebuffer")]
	public static GL.GLboolean glIsFramebuffer (GL.GLuint framebuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsFramebufferEXT")]
	public static GL.GLboolean glIsFramebufferEXT (GL.GLuint framebuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsList")]
	public static GL.GLboolean glIsList (GL.GLuint list);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsNameAMD")]
	public static GL.GLboolean glIsNameAMD (GL.GLenum identifier, GL.GLuint name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsNamedBufferResidentNV")]
	public static GL.GLboolean glIsNamedBufferResidentNV (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsNamedStringARB")]
	public static GL.GLboolean glIsNamedStringARB (GL.GLint namelen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsObjectBufferATI")]
	public static GL.GLboolean glIsObjectBufferATI (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsOcclusionQueryNV")]
	public static GL.GLboolean glIsOcclusionQueryNV (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsProgram")]
	public static GL.GLboolean glIsProgram (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsProgramARB")]
	public static GL.GLboolean glIsProgramARB (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsProgramNV")]
	public static GL.GLboolean glIsProgramNV (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsProgramPipeline")]
	public static GL.GLboolean glIsProgramPipeline (GL.GLuint pipeline);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsQuery")]
	public static GL.GLboolean glIsQuery (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsQueryARB")]
	public static GL.GLboolean glIsQueryARB (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsRenderbuffer")]
	public static GL.GLboolean glIsRenderbuffer (GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsRenderbufferEXT")]
	public static GL.GLboolean glIsRenderbufferEXT (GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsSampler")]
	public static GL.GLboolean glIsSampler (GL.GLuint sampler);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsShader")]
	public static GL.GLboolean glIsShader (GL.GLuint shader);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsSync")]
	public static GL.GLboolean glIsSync (GL.GLsync sync);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsTexture")]
	public static GL.GLboolean glIsTexture (GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsTextureEXT")]
	public static GL.GLboolean glIsTextureEXT (GL.GLuint texture);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsTransformFeedback")]
	public static GL.GLboolean glIsTransformFeedback (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsTransformFeedbackNV")]
	public static GL.GLboolean glIsTransformFeedbackNV (GL.GLuint id);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsVariantEnabledEXT")]
	public static GL.GLboolean glIsVariantEnabledEXT (GL.GLuint id, GL.GLenum cap);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsVertexArray")]
	public static GL.GLboolean glIsVertexArray (GL.GLuint array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsVertexArrayAPPLE")]
	public static GL.GLboolean glIsVertexArrayAPPLE (GL.GLuint array);
	[CCode (cheader_filename = "GL/gl.h", cname = "glIsVertexAttribEnabledAPPLE")]
	public static GL.GLboolean glIsVertexAttribEnabledAPPLE (GL.GLuint index, GL.GLenum pname);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightEnviSGIX")]
	public static void glLightEnviSGIX (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightModelf")]
	public static void glLightModelf (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightModelfv")]
	public static void glLightModelfv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightModeli")]
	public static void glLightModeli (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightModeliv")]
	public static void glLightModeliv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightf")]
	public static void glLightf (GL.GLenum light, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightfv")]
	public static void glLightfv (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLighti")]
	public static void glLighti (GL.GLenum light, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLightiv")]
	public static void glLightiv (GL.GLenum light, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLineStipple")]
	public static void glLineStipple (GL.GLint factor, GL.GLushort pattern);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLineWidth")]
	public static void glLineWidth (GL.GLfloat width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLinkProgram")]
	public static void glLinkProgram (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLinkProgramARB")]
	public static void glLinkProgramARB (GL.GLhandleARB programObj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glListBase")]
	public static void glListBase (GL.GLuint @base);
	[CCode (cheader_filename = "GL/gl.h", cname = "glListParameterfSGIX")]
	public static void glListParameterfSGIX (GL.GLuint list, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glListParameterfvSGIX")]
	public static void glListParameterfvSGIX (GL.GLuint list, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glListParameteriSGIX")]
	public static void glListParameteriSGIX (GL.GLuint list, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glListParameterivSGIX")]
	public static void glListParameterivSGIX (GL.GLuint list, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadIdentity")]
	public static void glLoadIdentity ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadIdentityDeformationMapSGIX")]
	public static void glLoadIdentityDeformationMapSGIX (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadMatrixd")]
	public static void glLoadMatrixd ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadMatrixf")]
	public static void glLoadMatrixf ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadName")]
	public static void glLoadName (GL.GLuint name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadProgramNV")]
	public static void glLoadProgramNV (GL.GLenum target, GL.GLuint id, GL.GLsizei len, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadTransposeMatrixd")]
	public static void glLoadTransposeMatrixd ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadTransposeMatrixdARB")]
	public static void glLoadTransposeMatrixdARB ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadTransposeMatrixf")]
	public static void glLoadTransposeMatrixf ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLoadTransposeMatrixfARB")]
	public static void glLoadTransposeMatrixfARB ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLockArraysEXT")]
	public static void glLockArraysEXT (GL.GLint first, GL.GLsizei count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glLogicOp")]
	public static void glLogicOp (GL.GLenum opcode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMakeBufferNonResidentNV")]
	public static void glMakeBufferNonResidentNV (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMakeBufferResidentNV")]
	public static void glMakeBufferResidentNV (GL.GLenum target, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMakeNamedBufferNonResidentNV")]
	public static void glMakeNamedBufferNonResidentNV (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMakeNamedBufferResidentNV")]
	public static void glMakeNamedBufferResidentNV (GL.GLuint buffer, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMap1d")]
	public static void glMap1d (GL.GLenum target, GL.GLdouble u1, GL.GLdouble u2, GL.GLint stride, GL.GLint order, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMap1f")]
	public static void glMap1f (GL.GLenum target, GL.GLfloat u1, GL.GLfloat u2, GL.GLint stride, GL.GLint order, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMap2d")]
	public static void glMap2d (GL.GLenum target, GL.GLdouble u1, GL.GLdouble u2, GL.GLint ustride, GL.GLint uorder, GL.GLdouble v1, GL.GLdouble v2, GL.GLint vstride, GL.GLint vorder, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMap2f")]
	public static void glMap2f (GL.GLenum target, GL.GLfloat u1, GL.GLfloat u2, GL.GLint ustride, GL.GLint uorder, GL.GLfloat v1, GL.GLfloat v2, GL.GLint vstride, GL.GLint vorder, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapBuffer")]
	public static GL.GLvoid glMapBuffer (GL.GLenum target, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapBufferARB")]
	public static GL.GLvoid glMapBufferARB (GL.GLenum target, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapBufferRange")]
	public static GL.GLvoid glMapBufferRange (GL.GLenum target, GL.GLintptr offset, GL.GLsizeiptr length, GL.GLbitfield access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapControlPointsNV")]
	public static void glMapControlPointsNV (GL.GLenum target, GL.GLuint index, GL.GLenum type, GL.GLsizei ustride, GL.GLsizei vstride, GL.GLint uorder, GL.GLint vorder, GL.GLboolean packed, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapGrid1d")]
	public static void glMapGrid1d (GL.GLint un, GL.GLdouble u1, GL.GLdouble u2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapGrid1f")]
	public static void glMapGrid1f (GL.GLint un, GL.GLfloat u1, GL.GLfloat u2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapGrid2d")]
	public static void glMapGrid2d (GL.GLint un, GL.GLdouble u1, GL.GLdouble u2, GL.GLint vn, GL.GLdouble v1, GL.GLdouble v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapGrid2f")]
	public static void glMapGrid2f (GL.GLint un, GL.GLfloat u1, GL.GLfloat u2, GL.GLint vn, GL.GLfloat v1, GL.GLfloat v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapNamedBufferEXT")]
	public static GL.GLvoid glMapNamedBufferEXT (GL.GLuint buffer, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapNamedBufferRangeEXT")]
	public static GL.GLvoid glMapNamedBufferRangeEXT (GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr length, GL.GLbitfield access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapObjectBufferATI")]
	public static GL.GLvoid glMapObjectBufferATI (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapParameterfvNV")]
	public static void glMapParameterfvNV (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapParameterivNV")]
	public static void glMapParameterivNV (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapVertexAttrib1dAPPLE")]
	public static void glMapVertexAttrib1dAPPLE (GL.GLuint index, GL.GLuint size, GL.GLdouble u1, GL.GLdouble u2, GL.GLint stride, GL.GLint order, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapVertexAttrib1fAPPLE")]
	public static void glMapVertexAttrib1fAPPLE (GL.GLuint index, GL.GLuint size, GL.GLfloat u1, GL.GLfloat u2, GL.GLint stride, GL.GLint order, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapVertexAttrib2dAPPLE")]
	public static void glMapVertexAttrib2dAPPLE (GL.GLuint index, GL.GLuint size, GL.GLdouble u1, GL.GLdouble u2, GL.GLint ustride, GL.GLint uorder, GL.GLdouble v1, GL.GLdouble v2, GL.GLint vstride, GL.GLint vorder, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMapVertexAttrib2fAPPLE")]
	public static void glMapVertexAttrib2fAPPLE (GL.GLuint index, GL.GLuint size, GL.GLfloat u1, GL.GLfloat u2, GL.GLint ustride, GL.GLint uorder, GL.GLfloat v1, GL.GLfloat v2, GL.GLint vstride, GL.GLint vorder, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMaterialf")]
	public static void glMaterialf (GL.GLenum face, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMaterialfv")]
	public static void glMaterialfv (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMateriali")]
	public static void glMateriali (GL.GLenum face, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMaterialiv")]
	public static void glMaterialiv (GL.GLenum face, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixFrustumEXT")]
	public static void glMatrixFrustumEXT (GL.GLenum mode, GL.GLdouble left, GL.GLdouble right, GL.GLdouble bottom, GL.GLdouble top, GL.GLdouble zNear, GL.GLdouble zFar);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixIndexPointerARB")]
	public static void glMatrixIndexPointerARB (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixIndexubvARB")]
	public static void glMatrixIndexubvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixIndexuivARB")]
	public static void glMatrixIndexuivARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixIndexusvARB")]
	public static void glMatrixIndexusvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLushort[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixLoadIdentityEXT")]
	public static void glMatrixLoadIdentityEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixLoadTransposedEXT")]
	public static void glMatrixLoadTransposedEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixLoadTransposefEXT")]
	public static void glMatrixLoadTransposefEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixLoaddEXT")]
	public static void glMatrixLoaddEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixLoadfEXT")]
	public static void glMatrixLoadfEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixMode")]
	public static void glMatrixMode (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixMultTransposedEXT")]
	public static void glMatrixMultTransposedEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixMultTransposefEXT")]
	public static void glMatrixMultTransposefEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixMultdEXT")]
	public static void glMatrixMultdEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixMultfEXT")]
	public static void glMatrixMultfEXT (GL.GLenum mode, [CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixOrthoEXT")]
	public static void glMatrixOrthoEXT (GL.GLenum mode, GL.GLdouble left, GL.GLdouble right, GL.GLdouble bottom, GL.GLdouble top, GL.GLdouble zNear, GL.GLdouble zFar);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixPopEXT")]
	public static void glMatrixPopEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixPushEXT")]
	public static void glMatrixPushEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixRotatedEXT")]
	public static void glMatrixRotatedEXT (GL.GLenum mode, GL.GLdouble angle, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixRotatefEXT")]
	public static void glMatrixRotatefEXT (GL.GLenum mode, GL.GLfloat angle, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixScaledEXT")]
	public static void glMatrixScaledEXT (GL.GLenum mode, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixScalefEXT")]
	public static void glMatrixScalefEXT (GL.GLenum mode, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixTranslatedEXT")]
	public static void glMatrixTranslatedEXT (GL.GLenum mode, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMatrixTranslatefEXT")]
	public static void glMatrixTranslatefEXT (GL.GLenum mode, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMemoryBarrier")]
	public static void glMemoryBarrier (GL.GLbitfield barriers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMemoryBarrierEXT")]
	public static void glMemoryBarrierEXT (GL.GLbitfield barriers);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMinSampleShading")]
	public static void glMinSampleShading (GL.GLclampf value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMinSampleShadingARB")]
	public static void glMinSampleShadingARB (GL.GLclampf value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMinmax")]
	public static void glMinmax (GL.GLenum target, GL.GLenum internalformat, GL.GLboolean sink);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMinmaxEXT")]
	public static void glMinmaxEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLboolean sink);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultMatrixd")]
	public static void glMultMatrixd ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultMatrixf")]
	public static void glMultMatrixf ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultTransposeMatrixd")]
	public static void glMultTransposeMatrixd ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultTransposeMatrixdARB")]
	public static void glMultTransposeMatrixdARB ([CCode (array_length = false)] GL.GLdouble[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultTransposeMatrixf")]
	public static void glMultTransposeMatrixf ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultTransposeMatrixfARB")]
	public static void glMultTransposeMatrixfARB ([CCode (array_length = false)] GL.GLfloat[]? m);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawArrays")]
	public static void glMultiDrawArrays (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? first, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawArraysEXT")]
	public static void glMultiDrawArraysEXT (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? first, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawArraysIndirectAMD")]
	public static void glMultiDrawArraysIndirectAMD (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indirect, GL.GLsizei primcount, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawElementArrayAPPLE")]
	public static void glMultiDrawElementArrayAPPLE (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? first, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawElements")]
	public static void glMultiDrawElements (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawElementsBaseVertex")]
	public static void glMultiDrawElementsBaseVertex (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? basevertex);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawElementsEXT")]
	public static void glMultiDrawElementsEXT (GL.GLenum mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawElementsIndirectAMD")]
	public static void glMultiDrawElementsIndirectAMD (GL.GLenum mode, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indirect, GL.GLsizei primcount, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiDrawRangeElementArrayAPPLE")]
	public static void glMultiDrawRangeElementArrayAPPLE (GL.GLenum mode, GL.GLuint start, GL.GLuint end, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? first, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLsizei primcount);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiModeDrawArraysIBM")]
	public static void glMultiModeDrawArraysIBM ([CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? first, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLsizei primcount, GL.GLint modestride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiModeDrawElementsIBM")]
	public static void glMultiModeDrawElementsIBM ([CCode (array_length = false, array_null_terminated = true)] GL.GLenum[]? mode, [CCode (array_length = false, array_null_terminated = true)] GL.GLsizei[]? count, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? indices, GL.GLsizei primcount, GL.GLint modestride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexBufferEXT")]
	public static void glMultiTexBufferEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum internalformat, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1d")]
	public static void glMultiTexCoord1d (GL.GLenum target, GL.GLdouble s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1dARB")]
	public static void glMultiTexCoord1dARB (GL.GLenum target, GL.GLdouble s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1dv")]
	public static void glMultiTexCoord1dv (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1dvARB")]
	public static void glMultiTexCoord1dvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1f")]
	public static void glMultiTexCoord1f (GL.GLenum target, GL.GLfloat s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1fARB")]
	public static void glMultiTexCoord1fARB (GL.GLenum target, GL.GLfloat s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1fv")]
	public static void glMultiTexCoord1fv (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1fvARB")]
	public static void glMultiTexCoord1fvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1hNV")]
	public static void glMultiTexCoord1hNV (GL.GLenum target, GL.GLhalfNV s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1hvNV")]
	public static void glMultiTexCoord1hvNV (GL.GLenum target, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1i")]
	public static void glMultiTexCoord1i (GL.GLenum target, GL.GLint s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1iARB")]
	public static void glMultiTexCoord1iARB (GL.GLenum target, GL.GLint s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1iv")]
	public static void glMultiTexCoord1iv (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1ivARB")]
	public static void glMultiTexCoord1ivARB (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1s")]
	public static void glMultiTexCoord1s (GL.GLenum target, GL.GLshort s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1sARB")]
	public static void glMultiTexCoord1sARB (GL.GLenum target, GL.GLshort s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1sv")]
	public static void glMultiTexCoord1sv (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord1svARB")]
	public static void glMultiTexCoord1svARB (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2d")]
	public static void glMultiTexCoord2d (GL.GLenum target, GL.GLdouble s, GL.GLdouble t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2dARB")]
	public static void glMultiTexCoord2dARB (GL.GLenum target, GL.GLdouble s, GL.GLdouble t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2dv")]
	public static void glMultiTexCoord2dv (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2dvARB")]
	public static void glMultiTexCoord2dvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2f")]
	public static void glMultiTexCoord2f (GL.GLenum target, GL.GLfloat s, GL.GLfloat t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2fARB")]
	public static void glMultiTexCoord2fARB (GL.GLenum target, GL.GLfloat s, GL.GLfloat t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2fv")]
	public static void glMultiTexCoord2fv (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2fvARB")]
	public static void glMultiTexCoord2fvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2hNV")]
	public static void glMultiTexCoord2hNV (GL.GLenum target, GL.GLhalfNV s, GL.GLhalfNV t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2hvNV")]
	public static void glMultiTexCoord2hvNV (GL.GLenum target, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2i")]
	public static void glMultiTexCoord2i (GL.GLenum target, GL.GLint s, GL.GLint t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2iARB")]
	public static void glMultiTexCoord2iARB (GL.GLenum target, GL.GLint s, GL.GLint t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2iv")]
	public static void glMultiTexCoord2iv (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2ivARB")]
	public static void glMultiTexCoord2ivARB (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2s")]
	public static void glMultiTexCoord2s (GL.GLenum target, GL.GLshort s, GL.GLshort t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2sARB")]
	public static void glMultiTexCoord2sARB (GL.GLenum target, GL.GLshort s, GL.GLshort t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2sv")]
	public static void glMultiTexCoord2sv (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord2svARB")]
	public static void glMultiTexCoord2svARB (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3d")]
	public static void glMultiTexCoord3d (GL.GLenum target, GL.GLdouble s, GL.GLdouble t, GL.GLdouble r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3dARB")]
	public static void glMultiTexCoord3dARB (GL.GLenum target, GL.GLdouble s, GL.GLdouble t, GL.GLdouble r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3dv")]
	public static void glMultiTexCoord3dv (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3dvARB")]
	public static void glMultiTexCoord3dvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3f")]
	public static void glMultiTexCoord3f (GL.GLenum target, GL.GLfloat s, GL.GLfloat t, GL.GLfloat r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3fARB")]
	public static void glMultiTexCoord3fARB (GL.GLenum target, GL.GLfloat s, GL.GLfloat t, GL.GLfloat r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3fv")]
	public static void glMultiTexCoord3fv (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3fvARB")]
	public static void glMultiTexCoord3fvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3hNV")]
	public static void glMultiTexCoord3hNV (GL.GLenum target, GL.GLhalfNV s, GL.GLhalfNV t, GL.GLhalfNV r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3hvNV")]
	public static void glMultiTexCoord3hvNV (GL.GLenum target, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3i")]
	public static void glMultiTexCoord3i (GL.GLenum target, GL.GLint s, GL.GLint t, GL.GLint r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3iARB")]
	public static void glMultiTexCoord3iARB (GL.GLenum target, GL.GLint s, GL.GLint t, GL.GLint r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3iv")]
	public static void glMultiTexCoord3iv (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3ivARB")]
	public static void glMultiTexCoord3ivARB (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3s")]
	public static void glMultiTexCoord3s (GL.GLenum target, GL.GLshort s, GL.GLshort t, GL.GLshort r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3sARB")]
	public static void glMultiTexCoord3sARB (GL.GLenum target, GL.GLshort s, GL.GLshort t, GL.GLshort r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3sv")]
	public static void glMultiTexCoord3sv (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord3svARB")]
	public static void glMultiTexCoord3svARB (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4d")]
	public static void glMultiTexCoord4d (GL.GLenum target, GL.GLdouble s, GL.GLdouble t, GL.GLdouble r, GL.GLdouble q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4dARB")]
	public static void glMultiTexCoord4dARB (GL.GLenum target, GL.GLdouble s, GL.GLdouble t, GL.GLdouble r, GL.GLdouble q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4dv")]
	public static void glMultiTexCoord4dv (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4dvARB")]
	public static void glMultiTexCoord4dvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4f")]
	public static void glMultiTexCoord4f (GL.GLenum target, GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4fARB")]
	public static void glMultiTexCoord4fARB (GL.GLenum target, GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4fv")]
	public static void glMultiTexCoord4fv (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4fvARB")]
	public static void glMultiTexCoord4fvARB (GL.GLenum target, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4hNV")]
	public static void glMultiTexCoord4hNV (GL.GLenum target, GL.GLhalfNV s, GL.GLhalfNV t, GL.GLhalfNV r, GL.GLhalfNV q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4hvNV")]
	public static void glMultiTexCoord4hvNV (GL.GLenum target, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4i")]
	public static void glMultiTexCoord4i (GL.GLenum target, GL.GLint s, GL.GLint t, GL.GLint r, GL.GLint q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4iARB")]
	public static void glMultiTexCoord4iARB (GL.GLenum target, GL.GLint s, GL.GLint t, GL.GLint r, GL.GLint q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4iv")]
	public static void glMultiTexCoord4iv (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4ivARB")]
	public static void glMultiTexCoord4ivARB (GL.GLenum target, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4s")]
	public static void glMultiTexCoord4s (GL.GLenum target, GL.GLshort s, GL.GLshort t, GL.GLshort r, GL.GLshort q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4sARB")]
	public static void glMultiTexCoord4sARB (GL.GLenum target, GL.GLshort s, GL.GLshort t, GL.GLshort r, GL.GLshort q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4sv")]
	public static void glMultiTexCoord4sv (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoord4svARB")]
	public static void glMultiTexCoord4svARB (GL.GLenum target, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP1ui")]
	public static void glMultiTexCoordP1ui (GL.GLenum texture, GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP1uiv")]
	public static void glMultiTexCoordP1uiv (GL.GLenum texture, GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP2ui")]
	public static void glMultiTexCoordP2ui (GL.GLenum texture, GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP2uiv")]
	public static void glMultiTexCoordP2uiv (GL.GLenum texture, GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP3ui")]
	public static void glMultiTexCoordP3ui (GL.GLenum texture, GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP3uiv")]
	public static void glMultiTexCoordP3uiv (GL.GLenum texture, GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP4ui")]
	public static void glMultiTexCoordP4ui (GL.GLenum texture, GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordP4uiv")]
	public static void glMultiTexCoordP4uiv (GL.GLenum texture, GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexCoordPointerEXT")]
	public static void glMultiTexCoordPointerEXT (GL.GLenum texunit, GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexEnvfEXT")]
	public static void glMultiTexEnvfEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexEnvfvEXT")]
	public static void glMultiTexEnvfvEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexEnviEXT")]
	public static void glMultiTexEnviEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexEnvivEXT")]
	public static void glMultiTexEnvivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGendEXT")]
	public static void glMultiTexGendEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, GL.GLdouble param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGendvEXT")]
	public static void glMultiTexGendvEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGenfEXT")]
	public static void glMultiTexGenfEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGenfvEXT")]
	public static void glMultiTexGenfvEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGeniEXT")]
	public static void glMultiTexGeniEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexGenivEXT")]
	public static void glMultiTexGenivEXT (GL.GLenum texunit, GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexImage1DEXT")]
	public static void glMultiTexImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexImage2DEXT")]
	public static void glMultiTexImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexImage3DEXT")]
	public static void glMultiTexImage3DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameterIivEXT")]
	public static void glMultiTexParameterIivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameterIuivEXT")]
	public static void glMultiTexParameterIuivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameterfEXT")]
	public static void glMultiTexParameterfEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameterfvEXT")]
	public static void glMultiTexParameterfvEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameteriEXT")]
	public static void glMultiTexParameteriEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexParameterivEXT")]
	public static void glMultiTexParameterivEXT (GL.GLenum texunit, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexRenderbufferEXT")]
	public static void glMultiTexRenderbufferEXT (GL.GLenum texunit, GL.GLenum target, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexSubImage1DEXT")]
	public static void glMultiTexSubImage1DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexSubImage2DEXT")]
	public static void glMultiTexSubImage2DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glMultiTexSubImage3DEXT")]
	public static void glMultiTexSubImage3DEXT (GL.GLenum texunit, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedBufferDataEXT")]
	public static void glNamedBufferDataEXT (GL.GLuint buffer, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data, GL.GLenum usage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedBufferSubDataEXT")]
	public static void glNamedBufferSubDataEXT (GL.GLuint buffer, GL.GLintptr offset, GL.GLsizeiptr size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedCopyBufferSubDataEXT")]
	public static void glNamedCopyBufferSubDataEXT (GL.GLuint readBuffer, GL.GLuint writeBuffer, GL.GLintptr readOffset, GL.GLintptr writeOffset, GL.GLsizeiptr size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferRenderbufferEXT")]
	public static void glNamedFramebufferRenderbufferEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLenum renderbuffertarget, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTexture1DEXT")]
	public static void glNamedFramebufferTexture1DEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTexture2DEXT")]
	public static void glNamedFramebufferTexture2DEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTexture3DEXT")]
	public static void glNamedFramebufferTexture3DEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLenum textarget, GL.GLuint texture, GL.GLint level, GL.GLint zoffset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTextureEXT")]
	public static void glNamedFramebufferTextureEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLuint texture, GL.GLint level);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTextureFaceEXT")]
	public static void glNamedFramebufferTextureFaceEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLenum face);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedFramebufferTextureLayerEXT")]
	public static void glNamedFramebufferTextureLayerEXT (GL.GLuint framebuffer, GL.GLenum attachment, GL.GLuint texture, GL.GLint level, GL.GLint layer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameter4dEXT")]
	public static void glNamedProgramLocalParameter4dEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameter4dvEXT")]
	public static void glNamedProgramLocalParameter4dvEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameter4fEXT")]
	public static void glNamedProgramLocalParameter4fEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameter4fvEXT")]
	public static void glNamedProgramLocalParameter4fvEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameterI4iEXT")]
	public static void glNamedProgramLocalParameterI4iEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameterI4ivEXT")]
	public static void glNamedProgramLocalParameterI4ivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameterI4uiEXT")]
	public static void glNamedProgramLocalParameterI4uiEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z, GL.GLuint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameterI4uivEXT")]
	public static void glNamedProgramLocalParameterI4uivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParameters4fvEXT")]
	public static void glNamedProgramLocalParameters4fvEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParametersI4ivEXT")]
	public static void glNamedProgramLocalParametersI4ivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramLocalParametersI4uivEXT")]
	public static void glNamedProgramLocalParametersI4uivEXT (GL.GLuint program, GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedProgramStringEXT")]
	public static void glNamedProgramStringEXT (GL.GLuint program, GL.GLenum target, GL.GLenum format, GL.GLsizei len, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedRenderbufferStorageEXT")]
	public static void glNamedRenderbufferStorageEXT (GL.GLuint renderbuffer, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedRenderbufferStorageMultisampleCoverageEXT")]
	public static void glNamedRenderbufferStorageMultisampleCoverageEXT (GL.GLuint renderbuffer, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedRenderbufferStorageMultisampleEXT")]
	public static void glNamedRenderbufferStorageMultisampleEXT (GL.GLuint renderbuffer, GL.GLsizei samples, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNamedStringARB")]
	public static void glNamedStringARB (GL.GLenum type, GL.GLint namelen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? name, GL.GLint stringlen, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNewList")]
	public static void glNewList (GL.GLuint list, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNewObjectBufferATI")]
	public static GL.GLuint glNewObjectBufferATI (GL.GLsizei size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLenum usage);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3b")]
	public static void glNormal3b (GL.GLbyte nx, GL.GLbyte ny, GL.GLbyte nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3bv")]
	public static void glNormal3bv ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3d")]
	public static void glNormal3d (GL.GLdouble nx, GL.GLdouble ny, GL.GLdouble nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3dv")]
	public static void glNormal3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3f")]
	public static void glNormal3f (GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3fVertex3fSUN")]
	public static void glNormal3fVertex3fSUN (GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3fVertex3fvSUN")]
	public static void glNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3fv")]
	public static void glNormal3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3hNV")]
	public static void glNormal3hNV (GL.GLhalfNV nx, GL.GLhalfNV ny, GL.GLhalfNV nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3hvNV")]
	public static void glNormal3hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3i")]
	public static void glNormal3i (GL.GLint nx, GL.GLint ny, GL.GLint nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3iv")]
	public static void glNormal3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3s")]
	public static void glNormal3s (GL.GLshort nx, GL.GLshort ny, GL.GLshort nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormal3sv")]
	public static void glNormal3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalFormatNV")]
	public static void glNormalFormatNV (GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalP3ui")]
	public static void glNormalP3ui (GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalP3uiv")]
	public static void glNormalP3uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalPointer")]
	public static void glNormalPointer (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalPointerEXT")]
	public static void glNormalPointerEXT (GL.GLenum type, GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalPointerListIBM")]
	public static void glNormalPointerListIBM (GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalPointervINTEL")]
	public static void glNormalPointervINTEL (GL.GLenum type, [CCode (array_length = false)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3bATI")]
	public static void glNormalStream3bATI (GL.GLenum stream, GL.GLbyte nx, GL.GLbyte ny, GL.GLbyte nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3bvATI")]
	public static void glNormalStream3bvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLbyte[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3dATI")]
	public static void glNormalStream3dATI (GL.GLenum stream, GL.GLdouble nx, GL.GLdouble ny, GL.GLdouble nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3dvATI")]
	public static void glNormalStream3dvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLdouble[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3fATI")]
	public static void glNormalStream3fATI (GL.GLenum stream, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3fvATI")]
	public static void glNormalStream3fvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLfloat[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3iATI")]
	public static void glNormalStream3iATI (GL.GLenum stream, GL.GLint nx, GL.GLint ny, GL.GLint nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3ivATI")]
	public static void glNormalStream3ivATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3sATI")]
	public static void glNormalStream3sATI (GL.GLenum stream, GL.GLshort nx, GL.GLshort ny, GL.GLshort nz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glNormalStream3svATI")]
	public static void glNormalStream3svATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLshort[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glObjectPurgeableAPPLE")]
	public static GL.GLenum glObjectPurgeableAPPLE (GL.GLenum objectType, GL.GLuint name, GL.GLenum option);
	[CCode (cheader_filename = "GL/gl.h", cname = "glObjectUnpurgeableAPPLE")]
	public static GL.GLenum glObjectUnpurgeableAPPLE (GL.GLenum objectType, GL.GLuint name, GL.GLenum option);
	[CCode (cheader_filename = "GL/gl.h", cname = "glOrtho")]
	public static void glOrtho (GL.GLdouble left, GL.GLdouble right, GL.GLdouble bottom, GL.GLdouble top, GL.GLdouble zNear, GL.GLdouble zFar);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPNTrianglesfATI")]
	public static void glPNTrianglesfATI (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPNTrianglesiATI")]
	public static void glPNTrianglesiATI (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPassTexCoordATI")]
	public static void glPassTexCoordATI (GL.GLuint dst, GL.GLuint coord, GL.GLenum swizzle);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPassThrough")]
	public static void glPassThrough (GL.GLfloat token);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPatchParameterfv")]
	public static void glPatchParameterfv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPatchParameteri")]
	public static void glPatchParameteri (GL.GLenum pname, GL.GLint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPauseTransformFeedback")]
	public static void glPauseTransformFeedback ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPauseTransformFeedbackNV")]
	public static void glPauseTransformFeedbackNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelDataRangeNV")]
	public static void glPixelDataRangeNV (GL.GLenum target, GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelMapfv")]
	public static void glPixelMapfv (GL.GLenum map, GL.GLint mapsize, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelMapuiv")]
	public static void glPixelMapuiv (GL.GLenum map, GL.GLint mapsize, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelMapusv")]
	public static void glPixelMapusv (GL.GLenum map, GL.GLint mapsize, [CCode (array_length = false, array_null_terminated = true)] GL.GLushort[]? values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelStoref")]
	public static void glPixelStoref (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelStorei")]
	public static void glPixelStorei (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTexGenParameterfSGIS")]
	public static void glPixelTexGenParameterfSGIS (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTexGenParameterfvSGIS")]
	public static void glPixelTexGenParameterfvSGIS (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTexGenParameteriSGIS")]
	public static void glPixelTexGenParameteriSGIS (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTexGenParameterivSGIS")]
	public static void glPixelTexGenParameterivSGIS (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTexGenSGIX")]
	public static void glPixelTexGenSGIX (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransferf")]
	public static void glPixelTransferf (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransferi")]
	public static void glPixelTransferi (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransformParameterfEXT")]
	public static void glPixelTransformParameterfEXT (GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransformParameterfvEXT")]
	public static void glPixelTransformParameterfvEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransformParameteriEXT")]
	public static void glPixelTransformParameteriEXT (GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelTransformParameterivEXT")]
	public static void glPixelTransformParameterivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPixelZoom")]
	public static void glPixelZoom (GL.GLfloat xfactor, GL.GLfloat yfactor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterf")]
	public static void glPointParameterf (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfARB")]
	public static void glPointParameterfARB (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfEXT")]
	public static void glPointParameterfEXT (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfSGIS")]
	public static void glPointParameterfSGIS (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfv")]
	public static void glPointParameterfv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfvARB")]
	public static void glPointParameterfvARB (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfvEXT")]
	public static void glPointParameterfvEXT (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterfvSGIS")]
	public static void glPointParameterfvSGIS (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameteri")]
	public static void glPointParameteri (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameteriNV")]
	public static void glPointParameteriNV (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameteriv")]
	public static void glPointParameteriv (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointParameterivNV")]
	public static void glPointParameterivNV (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPointSize")]
	public static void glPointSize (GL.GLfloat size);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPollAsyncSGIX")]
	public static GL.GLint glPollAsyncSGIX ([CCode (array_length = false)] out unowned GL.GLuint[] markerp);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPollInstrumentsSGIX")]
	public static GL.GLint glPollInstrumentsSGIX ([CCode (array_length = false)] out unowned GL.GLint[] marker_p);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPolygonMode")]
	public static void glPolygonMode (GL.GLenum face, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPolygonOffset")]
	public static void glPolygonOffset (GL.GLfloat factor, GL.GLfloat units);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPolygonOffsetEXT")]
	public static void glPolygonOffsetEXT (GL.GLfloat factor, GL.GLfloat bias);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPolygonStipple")]
	public static void glPolygonStipple ([CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPopAttrib")]
	public static void glPopAttrib ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPopClientAttrib")]
	public static void glPopClientAttrib ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPopMatrix")]
	public static void glPopMatrix ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPopName")]
	public static void glPopName ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPresentFrameDualFillNV")]
	public static void glPresentFrameDualFillNV (GL.GLuint video_slot, GL.GLuint64EXT minPresentTime, GL.GLuint beginPresentTimeId, GL.GLuint presentDurationId, GL.GLenum type, GL.GLenum target0, GL.GLuint fill0, GL.GLenum target1, GL.GLuint fill1, GL.GLenum target2, GL.GLuint fill2, GL.GLenum target3, GL.GLuint fill3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPresentFrameKeyedNV")]
	public static void glPresentFrameKeyedNV (GL.GLuint video_slot, GL.GLuint64EXT minPresentTime, GL.GLuint beginPresentTimeId, GL.GLuint presentDurationId, GL.GLenum type, GL.GLenum target0, GL.GLuint fill0, GL.GLuint key0, GL.GLenum target1, GL.GLuint fill1, GL.GLuint key1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPrimitiveRestartIndex")]
	public static void glPrimitiveRestartIndex (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPrimitiveRestartIndexNV")]
	public static void glPrimitiveRestartIndexNV (GL.GLuint index);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPrimitiveRestartNV")]
	public static void glPrimitiveRestartNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPrioritizeTextures")]
	public static void glPrioritizeTextures (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures, [CCode (array_length = false, array_null_terminated = true)] GL.GLclampf[]? priorities);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPrioritizeTexturesEXT")]
	public static void glPrioritizeTexturesEXT (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textures, [CCode (array_length = false, array_null_terminated = true)] GL.GLclampf[]? priorities);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramBinary")]
	public static void glProgramBinary (GL.GLuint program, GL.GLenum binaryFormat, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? binary, GL.GLsizei length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramBufferParametersIivNV")]
	public static void glProgramBufferParametersIivNV (GL.GLenum target, GL.GLuint buffer, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramBufferParametersIuivNV")]
	public static void glProgramBufferParametersIuivNV (GL.GLenum target, GL.GLuint buffer, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramBufferParametersfvNV")]
	public static void glProgramBufferParametersfvNV (GL.GLenum target, GL.GLuint buffer, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameter4dARB")]
	public static void glProgramEnvParameter4dARB (GL.GLenum target, GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameter4dvARB")]
	public static void glProgramEnvParameter4dvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameter4fARB")]
	public static void glProgramEnvParameter4fARB (GL.GLenum target, GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameter4fvARB")]
	public static void glProgramEnvParameter4fvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameterI4iNV")]
	public static void glProgramEnvParameterI4iNV (GL.GLenum target, GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameterI4ivNV")]
	public static void glProgramEnvParameterI4ivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameterI4uiNV")]
	public static void glProgramEnvParameterI4uiNV (GL.GLenum target, GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z, GL.GLuint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameterI4uivNV")]
	public static void glProgramEnvParameterI4uivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParameters4fvEXT")]
	public static void glProgramEnvParameters4fvEXT (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParametersI4ivNV")]
	public static void glProgramEnvParametersI4ivNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramEnvParametersI4uivNV")]
	public static void glProgramEnvParametersI4uivNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameter4dARB")]
	public static void glProgramLocalParameter4dARB (GL.GLenum target, GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameter4dvARB")]
	public static void glProgramLocalParameter4dvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameter4fARB")]
	public static void glProgramLocalParameter4fARB (GL.GLenum target, GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameter4fvARB")]
	public static void glProgramLocalParameter4fvARB (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameterI4iNV")]
	public static void glProgramLocalParameterI4iNV (GL.GLenum target, GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameterI4ivNV")]
	public static void glProgramLocalParameterI4ivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameterI4uiNV")]
	public static void glProgramLocalParameterI4uiNV (GL.GLenum target, GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z, GL.GLuint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameterI4uivNV")]
	public static void glProgramLocalParameterI4uivNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParameters4fvEXT")]
	public static void glProgramLocalParameters4fvEXT (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParametersI4ivNV")]
	public static void glProgramLocalParametersI4ivNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramLocalParametersI4uivNV")]
	public static void glProgramLocalParametersI4uivNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramNamedParameter4dNV")]
	public static void glProgramNamedParameter4dNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramNamedParameter4dvNV")]
	public static void glProgramNamedParameter4dvNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramNamedParameter4fNV")]
	public static void glProgramNamedParameter4fNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramNamedParameter4fvNV")]
	public static void glProgramNamedParameter4fvNV (GL.GLuint id, GL.GLsizei len, [CCode (array_length = false)] GL.GLubyte[]? name, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameter4dNV")]
	public static void glProgramParameter4dNV (GL.GLenum target, GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameter4dvNV")]
	public static void glProgramParameter4dvNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameter4fNV")]
	public static void glProgramParameter4fNV (GL.GLenum target, GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameter4fvNV")]
	public static void glProgramParameter4fvNV (GL.GLenum target, GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameteri")]
	public static void glProgramParameteri (GL.GLuint program, GL.GLenum pname, GL.GLint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameteriARB")]
	public static void glProgramParameteriARB (GL.GLuint program, GL.GLenum pname, GL.GLint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameteriEXT")]
	public static void glProgramParameteriEXT (GL.GLuint program, GL.GLenum pname, GL.GLint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameters4dvNV")]
	public static void glProgramParameters4dvNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramParameters4fvNV")]
	public static void glProgramParameters4fvNV (GL.GLenum target, GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramStringARB")]
	public static void glProgramStringARB (GL.GLenum target, GL.GLenum format, GL.GLsizei len, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramSubroutineParametersuivNV")]
	public static void glProgramSubroutineParametersuivNV (GL.GLenum target, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1d")]
	public static void glProgramUniform1d (GL.GLuint program, GL.GLint location, GL.GLdouble v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1dEXT")]
	public static void glProgramUniform1dEXT (GL.GLuint program, GL.GLint location, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1dv")]
	public static void glProgramUniform1dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1dvEXT")]
	public static void glProgramUniform1dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1f")]
	public static void glProgramUniform1f (GL.GLuint program, GL.GLint location, GL.GLfloat v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1fEXT")]
	public static void glProgramUniform1fEXT (GL.GLuint program, GL.GLint location, GL.GLfloat v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1fv")]
	public static void glProgramUniform1fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1fvEXT")]
	public static void glProgramUniform1fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1i")]
	public static void glProgramUniform1i (GL.GLuint program, GL.GLint location, GL.GLint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1i64NV")]
	public static void glProgramUniform1i64NV (GL.GLuint program, GL.GLint location, GL.GLint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1i64vNV")]
	public static void glProgramUniform1i64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1iEXT")]
	public static void glProgramUniform1iEXT (GL.GLuint program, GL.GLint location, GL.GLint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1iv")]
	public static void glProgramUniform1iv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1ivEXT")]
	public static void glProgramUniform1ivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1ui")]
	public static void glProgramUniform1ui (GL.GLuint program, GL.GLint location, GL.GLuint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1ui64NV")]
	public static void glProgramUniform1ui64NV (GL.GLuint program, GL.GLint location, GL.GLuint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1ui64vNV")]
	public static void glProgramUniform1ui64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1uiEXT")]
	public static void glProgramUniform1uiEXT (GL.GLuint program, GL.GLint location, GL.GLuint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1uiv")]
	public static void glProgramUniform1uiv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform1uivEXT")]
	public static void glProgramUniform1uivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2d")]
	public static void glProgramUniform2d (GL.GLuint program, GL.GLint location, GL.GLdouble v0, GL.GLdouble v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2dEXT")]
	public static void glProgramUniform2dEXT (GL.GLuint program, GL.GLint location, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2dv")]
	public static void glProgramUniform2dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2dvEXT")]
	public static void glProgramUniform2dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2f")]
	public static void glProgramUniform2f (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2fEXT")]
	public static void glProgramUniform2fEXT (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2fv")]
	public static void glProgramUniform2fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2fvEXT")]
	public static void glProgramUniform2fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2i")]
	public static void glProgramUniform2i (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2i64NV")]
	public static void glProgramUniform2i64NV (GL.GLuint program, GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2i64vNV")]
	public static void glProgramUniform2i64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2iEXT")]
	public static void glProgramUniform2iEXT (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2iv")]
	public static void glProgramUniform2iv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2ivEXT")]
	public static void glProgramUniform2ivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2ui")]
	public static void glProgramUniform2ui (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2ui64NV")]
	public static void glProgramUniform2ui64NV (GL.GLuint program, GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2ui64vNV")]
	public static void glProgramUniform2ui64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2uiEXT")]
	public static void glProgramUniform2uiEXT (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2uiv")]
	public static void glProgramUniform2uiv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform2uivEXT")]
	public static void glProgramUniform2uivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3d")]
	public static void glProgramUniform3d (GL.GLuint program, GL.GLint location, GL.GLdouble v0, GL.GLdouble v1, GL.GLdouble v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3dEXT")]
	public static void glProgramUniform3dEXT (GL.GLuint program, GL.GLint location, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3dv")]
	public static void glProgramUniform3dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3dvEXT")]
	public static void glProgramUniform3dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3f")]
	public static void glProgramUniform3f (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3fEXT")]
	public static void glProgramUniform3fEXT (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3fv")]
	public static void glProgramUniform3fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3fvEXT")]
	public static void glProgramUniform3fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3i")]
	public static void glProgramUniform3i (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3i64NV")]
	public static void glProgramUniform3i64NV (GL.GLuint program, GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3i64vNV")]
	public static void glProgramUniform3i64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3iEXT")]
	public static void glProgramUniform3iEXT (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3iv")]
	public static void glProgramUniform3iv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3ivEXT")]
	public static void glProgramUniform3ivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3ui")]
	public static void glProgramUniform3ui (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3ui64NV")]
	public static void glProgramUniform3ui64NV (GL.GLuint program, GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3ui64vNV")]
	public static void glProgramUniform3ui64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3uiEXT")]
	public static void glProgramUniform3uiEXT (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3uiv")]
	public static void glProgramUniform3uiv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform3uivEXT")]
	public static void glProgramUniform3uivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4d")]
	public static void glProgramUniform4d (GL.GLuint program, GL.GLint location, GL.GLdouble v0, GL.GLdouble v1, GL.GLdouble v2, GL.GLdouble v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4dEXT")]
	public static void glProgramUniform4dEXT (GL.GLuint program, GL.GLint location, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4dv")]
	public static void glProgramUniform4dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4dvEXT")]
	public static void glProgramUniform4dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4f")]
	public static void glProgramUniform4f (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2, GL.GLfloat v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4fEXT")]
	public static void glProgramUniform4fEXT (GL.GLuint program, GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2, GL.GLfloat v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4fv")]
	public static void glProgramUniform4fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4fvEXT")]
	public static void glProgramUniform4fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4i")]
	public static void glProgramUniform4i (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2, GL.GLint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4i64NV")]
	public static void glProgramUniform4i64NV (GL.GLuint program, GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z, GL.GLint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4i64vNV")]
	public static void glProgramUniform4i64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4iEXT")]
	public static void glProgramUniform4iEXT (GL.GLuint program, GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2, GL.GLint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4iv")]
	public static void glProgramUniform4iv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4ivEXT")]
	public static void glProgramUniform4ivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4ui")]
	public static void glProgramUniform4ui (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2, GL.GLuint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4ui64NV")]
	public static void glProgramUniform4ui64NV (GL.GLuint program, GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z, GL.GLuint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4ui64vNV")]
	public static void glProgramUniform4ui64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4uiEXT")]
	public static void glProgramUniform4uiEXT (GL.GLuint program, GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2, GL.GLuint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4uiv")]
	public static void glProgramUniform4uiv (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniform4uivEXT")]
	public static void glProgramUniform4uivEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2dv")]
	public static void glProgramUniformMatrix2dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2dvEXT")]
	public static void glProgramUniformMatrix2dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2fv")]
	public static void glProgramUniformMatrix2fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2fvEXT")]
	public static void glProgramUniformMatrix2fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x3dv")]
	public static void glProgramUniformMatrix2x3dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x3dvEXT")]
	public static void glProgramUniformMatrix2x3dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x3fv")]
	public static void glProgramUniformMatrix2x3fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x3fvEXT")]
	public static void glProgramUniformMatrix2x3fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x4dv")]
	public static void glProgramUniformMatrix2x4dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x4dvEXT")]
	public static void glProgramUniformMatrix2x4dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x4fv")]
	public static void glProgramUniformMatrix2x4fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix2x4fvEXT")]
	public static void glProgramUniformMatrix2x4fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3dv")]
	public static void glProgramUniformMatrix3dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3dvEXT")]
	public static void glProgramUniformMatrix3dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3fv")]
	public static void glProgramUniformMatrix3fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3fvEXT")]
	public static void glProgramUniformMatrix3fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x2dv")]
	public static void glProgramUniformMatrix3x2dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x2dvEXT")]
	public static void glProgramUniformMatrix3x2dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x2fv")]
	public static void glProgramUniformMatrix3x2fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x2fvEXT")]
	public static void glProgramUniformMatrix3x2fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x4dv")]
	public static void glProgramUniformMatrix3x4dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x4dvEXT")]
	public static void glProgramUniformMatrix3x4dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x4fv")]
	public static void glProgramUniformMatrix3x4fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix3x4fvEXT")]
	public static void glProgramUniformMatrix3x4fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4dv")]
	public static void glProgramUniformMatrix4dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4dvEXT")]
	public static void glProgramUniformMatrix4dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4fv")]
	public static void glProgramUniformMatrix4fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4fvEXT")]
	public static void glProgramUniformMatrix4fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x2dv")]
	public static void glProgramUniformMatrix4x2dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x2dvEXT")]
	public static void glProgramUniformMatrix4x2dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x2fv")]
	public static void glProgramUniformMatrix4x2fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x2fvEXT")]
	public static void glProgramUniformMatrix4x2fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x3dv")]
	public static void glProgramUniformMatrix4x3dv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x3dvEXT")]
	public static void glProgramUniformMatrix4x3dvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x3fv")]
	public static void glProgramUniformMatrix4x3fv (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformMatrix4x3fvEXT")]
	public static void glProgramUniformMatrix4x3fvEXT (GL.GLuint program, GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformui64NV")]
	public static void glProgramUniformui64NV (GL.GLuint program, GL.GLint location, GL.GLuint64EXT value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramUniformui64vNV")]
	public static void glProgramUniformui64vNV (GL.GLuint program, GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProgramVertexLimitNV")]
	public static void glProgramVertexLimitNV (GL.GLenum target, GL.GLint limit);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProvokingVertex")]
	public static void glProvokingVertex (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glProvokingVertexEXT")]
	public static void glProvokingVertexEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPushAttrib")]
	public static void glPushAttrib (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPushClientAttrib")]
	public static void glPushClientAttrib (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPushClientAttribDefaultEXT")]
	public static void glPushClientAttribDefaultEXT (GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glPushMatrix")]
	public static void glPushMatrix ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glPushName")]
	public static void glPushName (GL.GLuint name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glQueryCounter")]
	public static void glQueryCounter (GL.GLuint id, GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2d")]
	public static void glRasterPos2d (GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2dv")]
	public static void glRasterPos2dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2f")]
	public static void glRasterPos2f (GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2fv")]
	public static void glRasterPos2fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2i")]
	public static void glRasterPos2i (GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2iv")]
	public static void glRasterPos2iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2s")]
	public static void glRasterPos2s (GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos2sv")]
	public static void glRasterPos2sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3d")]
	public static void glRasterPos3d (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3dv")]
	public static void glRasterPos3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3f")]
	public static void glRasterPos3f (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3fv")]
	public static void glRasterPos3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3i")]
	public static void glRasterPos3i (GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3iv")]
	public static void glRasterPos3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3s")]
	public static void glRasterPos3s (GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos3sv")]
	public static void glRasterPos3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4d")]
	public static void glRasterPos4d (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4dv")]
	public static void glRasterPos4dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4f")]
	public static void glRasterPos4f (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4fv")]
	public static void glRasterPos4fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4i")]
	public static void glRasterPos4i (GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4iv")]
	public static void glRasterPos4iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4s")]
	public static void glRasterPos4s (GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRasterPos4sv")]
	public static void glRasterPos4sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReadBuffer")]
	public static void glReadBuffer (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReadInstrumentsSGIX")]
	public static void glReadInstrumentsSGIX (GL.GLint marker);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReadPixels")]
	public static void glReadPixels (GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReadnPixelsARB")]
	public static void glReadnPixelsARB (GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, GL.GLsizei bufSize, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] data);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectd")]
	public static void glRectd (GL.GLdouble x1, GL.GLdouble y1, GL.GLdouble x2, GL.GLdouble y2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectdv")]
	public static void glRectdv ([CCode (array_length = false)] GL.GLdouble[]? v1, [CCode (array_length = false)] GL.GLdouble[]? v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectf")]
	public static void glRectf (GL.GLfloat x1, GL.GLfloat y1, GL.GLfloat x2, GL.GLfloat y2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectfv")]
	public static void glRectfv ([CCode (array_length = false)] GL.GLfloat[]? v1, [CCode (array_length = false)] GL.GLfloat[]? v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRecti")]
	public static void glRecti (GL.GLint x1, GL.GLint y1, GL.GLint x2, GL.GLint y2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectiv")]
	public static void glRectiv ([CCode (array_length = false)] GL.GLint[]? v1, [CCode (array_length = false)] GL.GLint[]? v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRects")]
	public static void glRects (GL.GLshort x1, GL.GLshort y1, GL.GLshort x2, GL.GLshort y2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRectsv")]
	public static void glRectsv ([CCode (array_length = false)] GL.GLshort[]? v1, [CCode (array_length = false)] GL.GLshort[]? v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReferencePlaneSGIX")]
	public static void glReferencePlaneSGIX ([CCode (array_length = false)] GL.GLdouble[]? equation);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReleaseShaderCompiler")]
	public static void glReleaseShaderCompiler ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderMode")]
	public static GL.GLint glRenderMode (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderbufferStorage")]
	public static void glRenderbufferStorage (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderbufferStorageEXT")]
	public static void glRenderbufferStorageEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderbufferStorageMultisample")]
	public static void glRenderbufferStorageMultisample (GL.GLenum target, GL.GLsizei samples, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderbufferStorageMultisampleCoverageNV")]
	public static void glRenderbufferStorageMultisampleCoverageNV (GL.GLenum target, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRenderbufferStorageMultisampleEXT")]
	public static void glRenderbufferStorageMultisampleEXT (GL.GLenum target, GL.GLsizei samples, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodePointerSUN")]
	public static void glReplacementCodePointerSUN (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeubSUN")]
	public static void glReplacementCodeubSUN (GL.GLubyte code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeubvSUN")]
	public static void glReplacementCodeubvSUN ([CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor3fVertex3fSUN")]
	public static void glReplacementCodeuiColor3fVertex3fSUN (GL.GLuint rc, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor3fVertex3fvSUN")]
	public static void glReplacementCodeuiColor3fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor4fNormal3fVertex3fSUN")]
	public static void glReplacementCodeuiColor4fNormal3fVertex3fSUN (GL.GLuint rc, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat a, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor4fNormal3fVertex3fvSUN")]
	public static void glReplacementCodeuiColor4fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor4ubVertex3fSUN")]
	public static void glReplacementCodeuiColor4ubVertex3fSUN (GL.GLuint rc, GL.GLubyte r, GL.GLubyte g, GL.GLubyte b, GL.GLubyte a, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiColor4ubVertex3fvSUN")]
	public static void glReplacementCodeuiColor4ubVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLubyte[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiNormal3fVertex3fSUN")]
	public static void glReplacementCodeuiNormal3fVertex3fSUN (GL.GLuint rc, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiNormal3fVertex3fvSUN")]
	public static void glReplacementCodeuiNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiSUN")]
	public static void glReplacementCodeuiSUN (GL.GLuint code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN")]
	public static void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GL.GLuint rc, GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat a, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN")]
	public static void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN")]
	public static void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GL.GLuint rc, GL.GLfloat s, GL.GLfloat t, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN")]
	public static void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fVertex3fSUN")]
	public static void glReplacementCodeuiTexCoord2fVertex3fSUN (GL.GLuint rc, GL.GLfloat s, GL.GLfloat t, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiTexCoord2fVertex3fvSUN")]
	public static void glReplacementCodeuiTexCoord2fVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiVertex3fSUN")]
	public static void glReplacementCodeuiVertex3fSUN (GL.GLuint rc, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuiVertex3fvSUN")]
	public static void glReplacementCodeuiVertex3fvSUN ([CCode (array_length = false)] GL.GLuint[]? rc, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeuivSUN")]
	public static void glReplacementCodeuivSUN ([CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeusSUN")]
	public static void glReplacementCodeusSUN (GL.GLushort code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glReplacementCodeusvSUN")]
	public static void glReplacementCodeusvSUN ([CCode (array_length = false, array_null_terminated = true)] GL.GLushort[]? code);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRequestResidentProgramsNV")]
	public static void glRequestResidentProgramsNV (GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? programs);
	[CCode (cheader_filename = "GL/gl.h", cname = "glResetHistogram")]
	public static void glResetHistogram (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glResetHistogramEXT")]
	public static void glResetHistogramEXT (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glResetMinmax")]
	public static void glResetMinmax (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glResetMinmaxEXT")]
	public static void glResetMinmaxEXT (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glResizeBuffersMESA")]
	public static void glResizeBuffersMESA ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glResumeTransformFeedback")]
	public static void glResumeTransformFeedback ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glResumeTransformFeedbackNV")]
	public static void glResumeTransformFeedbackNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glRotated")]
	public static void glRotated (GL.GLdouble angle, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glRotatef")]
	public static void glRotatef (GL.GLfloat angle, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleCoverage")]
	public static void glSampleCoverage (GL.GLclampf value, GL.GLboolean invert);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleCoverageARB")]
	public static void glSampleCoverageARB (GL.GLclampf value, GL.GLboolean invert);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleMapATI")]
	public static void glSampleMapATI (GL.GLuint dst, GL.GLuint interp, GL.GLenum swizzle);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleMaskEXT")]
	public static void glSampleMaskEXT (GL.GLclampf value, GL.GLboolean invert);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleMaskIndexedNV")]
	public static void glSampleMaskIndexedNV (GL.GLuint index, GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleMaskSGIS")]
	public static void glSampleMaskSGIS (GL.GLclampf value, GL.GLboolean invert);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSampleMaski")]
	public static void glSampleMaski (GL.GLuint index, GL.GLbitfield mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplePatternEXT")]
	public static void glSamplePatternEXT (GL.GLenum pattern);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplePatternSGIS")]
	public static void glSamplePatternSGIS (GL.GLenum pattern);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameterIiv")]
	public static void glSamplerParameterIiv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameterIuiv")]
	public static void glSamplerParameterIuiv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameterf")]
	public static void glSamplerParameterf (GL.GLuint sampler, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameterfv")]
	public static void glSamplerParameterfv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameteri")]
	public static void glSamplerParameteri (GL.GLuint sampler, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSamplerParameteriv")]
	public static void glSamplerParameteriv (GL.GLuint sampler, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScaled")]
	public static void glScaled (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScalef")]
	public static void glScalef (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScissor")]
	public static void glScissor (GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScissorArrayv")]
	public static void glScissorArrayv (GL.GLuint first, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScissorIndexed")]
	public static void glScissorIndexed (GL.GLuint index, GL.GLint left, GL.GLint bottom, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glScissorIndexedv")]
	public static void glScissorIndexedv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3b")]
	public static void glSecondaryColor3b (GL.GLbyte red, GL.GLbyte green, GL.GLbyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3bEXT")]
	public static void glSecondaryColor3bEXT (GL.GLbyte red, GL.GLbyte green, GL.GLbyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3bv")]
	public static void glSecondaryColor3bv ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3bvEXT")]
	public static void glSecondaryColor3bvEXT ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3d")]
	public static void glSecondaryColor3d (GL.GLdouble red, GL.GLdouble green, GL.GLdouble blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3dEXT")]
	public static void glSecondaryColor3dEXT (GL.GLdouble red, GL.GLdouble green, GL.GLdouble blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3dv")]
	public static void glSecondaryColor3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3dvEXT")]
	public static void glSecondaryColor3dvEXT ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3f")]
	public static void glSecondaryColor3f (GL.GLfloat red, GL.GLfloat green, GL.GLfloat blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3fEXT")]
	public static void glSecondaryColor3fEXT (GL.GLfloat red, GL.GLfloat green, GL.GLfloat blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3fv")]
	public static void glSecondaryColor3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3fvEXT")]
	public static void glSecondaryColor3fvEXT ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3hNV")]
	public static void glSecondaryColor3hNV (GL.GLhalfNV red, GL.GLhalfNV green, GL.GLhalfNV blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3hvNV")]
	public static void glSecondaryColor3hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3i")]
	public static void glSecondaryColor3i (GL.GLint red, GL.GLint green, GL.GLint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3iEXT")]
	public static void glSecondaryColor3iEXT (GL.GLint red, GL.GLint green, GL.GLint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3iv")]
	public static void glSecondaryColor3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ivEXT")]
	public static void glSecondaryColor3ivEXT ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3s")]
	public static void glSecondaryColor3s (GL.GLshort red, GL.GLshort green, GL.GLshort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3sEXT")]
	public static void glSecondaryColor3sEXT (GL.GLshort red, GL.GLshort green, GL.GLshort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3sv")]
	public static void glSecondaryColor3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3svEXT")]
	public static void glSecondaryColor3svEXT ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ub")]
	public static void glSecondaryColor3ub (GL.GLubyte red, GL.GLubyte green, GL.GLubyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ubEXT")]
	public static void glSecondaryColor3ubEXT (GL.GLubyte red, GL.GLubyte green, GL.GLubyte blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ubv")]
	public static void glSecondaryColor3ubv ([CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ubvEXT")]
	public static void glSecondaryColor3ubvEXT ([CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3ui")]
	public static void glSecondaryColor3ui (GL.GLuint red, GL.GLuint green, GL.GLuint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3uiEXT")]
	public static void glSecondaryColor3uiEXT (GL.GLuint red, GL.GLuint green, GL.GLuint blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3uiv")]
	public static void glSecondaryColor3uiv ([CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3uivEXT")]
	public static void glSecondaryColor3uivEXT ([CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3us")]
	public static void glSecondaryColor3us (GL.GLushort red, GL.GLushort green, GL.GLushort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3usEXT")]
	public static void glSecondaryColor3usEXT (GL.GLushort red, GL.GLushort green, GL.GLushort blue);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3usv")]
	public static void glSecondaryColor3usv ([CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColor3usvEXT")]
	public static void glSecondaryColor3usvEXT ([CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorFormatNV")]
	public static void glSecondaryColorFormatNV (GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorP3ui")]
	public static void glSecondaryColorP3ui (GL.GLenum type, GL.GLuint color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorP3uiv")]
	public static void glSecondaryColorP3uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? color);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorPointer")]
	public static void glSecondaryColorPointer (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorPointerEXT")]
	public static void glSecondaryColorPointerEXT (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSecondaryColorPointerListIBM")]
	public static void glSecondaryColorPointerListIBM (GL.GLint size, GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSelectBuffer")]
	public static void glSelectBuffer (GL.GLsizei size, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSelectPerfMonitorCountersAMD")]
	public static void glSelectPerfMonitorCountersAMD (GL.GLuint monitor, GL.GLboolean enable, GL.GLuint group, GL.GLint numCounters, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLuint[] counterList);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSeparableFilter2D")]
	public static void glSeparableFilter2D (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? row, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? column);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSeparableFilter2DEXT")]
	public static void glSeparableFilter2DEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? row, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? column);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetFenceAPPLE")]
	public static void glSetFenceAPPLE (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetFenceNV")]
	public static void glSetFenceNV (GL.GLuint fence, GL.GLenum condition);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetFragmentShaderConstantATI")]
	public static void glSetFragmentShaderConstantATI (GL.GLuint dst, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetInvariantEXT")]
	public static void glSetInvariantEXT (GL.GLuint id, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetLocalConstantEXT")]
	public static void glSetLocalConstantEXT (GL.GLuint id, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSetMultisamplefvAMD")]
	public static void glSetMultisamplefvAMD (GL.GLenum pname, GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? val);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShadeModel")]
	public static void glShadeModel (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderBinary")]
	public static void glShaderBinary (GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? shaders, GL.GLenum binaryformat, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? binary, GL.GLsizei length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderOp1EXT")]
	public static void glShaderOp1EXT (GL.GLenum op, GL.GLuint res, GL.GLuint arg1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderOp2EXT")]
	public static void glShaderOp2EXT (GL.GLenum op, GL.GLuint res, GL.GLuint arg1, GL.GLuint arg2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderOp3EXT")]
	public static void glShaderOp3EXT (GL.GLenum op, GL.GLuint res, GL.GLuint arg1, GL.GLuint arg2, GL.GLuint arg3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderSource")]
	public static void glShaderSource (GL.GLuint shader, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? string, [CCode (array_length = false)] GL.GLint[]? length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glShaderSourceARB")]
	public static void glShaderSourceARB (GL.GLhandleARB shaderObj, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLcharARB[]? string, [CCode (array_length = false)] GL.GLint[]? length);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSharpenTexFuncSGIS")]
	public static void glSharpenTexFuncSGIS (GL.GLenum target, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? points);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSpriteParameterfSGIX")]
	public static void glSpriteParameterfSGIX (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSpriteParameterfvSGIX")]
	public static void glSpriteParameterfvSGIX (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSpriteParameteriSGIX")]
	public static void glSpriteParameteriSGIX (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSpriteParameterivSGIX")]
	public static void glSpriteParameterivSGIX (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStartInstrumentsSGIX")]
	public static void glStartInstrumentsSGIX ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilClearTagEXT")]
	public static void glStencilClearTagEXT (GL.GLsizei stencilTagBits, GL.GLuint stencilClearTag);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilFunc")]
	public static void glStencilFunc (GL.GLenum func, GL.GLint @ref, GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilFuncSeparate")]
	public static void glStencilFuncSeparate (GL.GLenum face, GL.GLenum func, GL.GLint @ref, GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilFuncSeparateATI")]
	public static void glStencilFuncSeparateATI (GL.GLenum frontfunc, GL.GLenum backfunc, GL.GLint @ref, GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilMask")]
	public static void glStencilMask (GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilMaskSeparate")]
	public static void glStencilMaskSeparate (GL.GLenum face, GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilOp")]
	public static void glStencilOp (GL.GLenum fail, GL.GLenum zfail, GL.GLenum zpass);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilOpSeparate")]
	public static void glStencilOpSeparate (GL.GLenum face, GL.GLenum sfail, GL.GLenum dpfail, GL.GLenum dppass);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStencilOpSeparateATI")]
	public static void glStencilOpSeparateATI (GL.GLenum face, GL.GLenum sfail, GL.GLenum dpfail, GL.GLenum dppass);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStopInstrumentsSGIX")]
	public static void glStopInstrumentsSGIX (GL.GLint marker);
	[CCode (cheader_filename = "GL/gl.h", cname = "glStringMarkerGREMEDY")]
	public static void glStringMarkerGREMEDY (GL.GLsizei len, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? string);
	[CCode (cheader_filename = "GL/gl.h", cname = "glSwizzleEXT")]
	public static void glSwizzleEXT (GL.GLuint res, GL.GLuint @in, GL.GLenum outX, GL.GLenum outY, GL.GLenum outZ, GL.GLenum outW);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTagSampleBufferSGIX")]
	public static void glTagSampleBufferSGIX ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3bEXT")]
	public static void glTangent3bEXT (GL.GLbyte tx, GL.GLbyte ty, GL.GLbyte tz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3bvEXT")]
	public static void glTangent3bvEXT ([CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3dEXT")]
	public static void glTangent3dEXT (GL.GLdouble tx, GL.GLdouble ty, GL.GLdouble tz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3dvEXT")]
	public static void glTangent3dvEXT ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3fEXT")]
	public static void glTangent3fEXT (GL.GLfloat tx, GL.GLfloat ty, GL.GLfloat tz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3fvEXT")]
	public static void glTangent3fvEXT ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3iEXT")]
	public static void glTangent3iEXT (GL.GLint tx, GL.GLint ty, GL.GLint tz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3ivEXT")]
	public static void glTangent3ivEXT ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3sEXT")]
	public static void glTangent3sEXT (GL.GLshort tx, GL.GLshort ty, GL.GLshort tz);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangent3svEXT")]
	public static void glTangent3svEXT ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTangentPointerEXT")]
	public static void glTangentPointerEXT (GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTbufferMask3DFX")]
	public static void glTbufferMask3DFX (GL.GLuint mask);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTessellationFactorAMD")]
	public static void glTessellationFactorAMD (GL.GLfloat factor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTessellationModeAMD")]
	public static void glTessellationModeAMD (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTestFenceAPPLE")]
	public static GL.GLboolean glTestFenceAPPLE (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTestFenceNV")]
	public static GL.GLboolean glTestFenceNV (GL.GLuint fence);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTestObjectAPPLE")]
	public static GL.GLboolean glTestObjectAPPLE (GL.GLenum object, GL.GLuint name);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexBuffer")]
	public static void glTexBuffer (GL.GLenum target, GL.GLenum internalformat, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexBufferARB")]
	public static void glTexBufferARB (GL.GLenum target, GL.GLenum internalformat, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexBufferEXT")]
	public static void glTexBufferEXT (GL.GLenum target, GL.GLenum internalformat, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexBumpParameterfvATI")]
	public static void glTexBumpParameterfvATI (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexBumpParameterivATI")]
	public static void glTexBumpParameterivATI (GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1d")]
	public static void glTexCoord1d (GL.GLdouble s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1dv")]
	public static void glTexCoord1dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1f")]
	public static void glTexCoord1f (GL.GLfloat s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1fv")]
	public static void glTexCoord1fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1hNV")]
	public static void glTexCoord1hNV (GL.GLhalfNV s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1hvNV")]
	public static void glTexCoord1hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1i")]
	public static void glTexCoord1i (GL.GLint s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1iv")]
	public static void glTexCoord1iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1s")]
	public static void glTexCoord1s (GL.GLshort s);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord1sv")]
	public static void glTexCoord1sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2d")]
	public static void glTexCoord2d (GL.GLdouble s, GL.GLdouble t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2dv")]
	public static void glTexCoord2dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2f")]
	public static void glTexCoord2f (GL.GLfloat s, GL.GLfloat t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor3fVertex3fSUN")]
	public static void glTexCoord2fColor3fVertex3fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor3fVertex3fvSUN")]
	public static void glTexCoord2fColor3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor4fNormal3fVertex3fSUN")]
	public static void glTexCoord2fColor4fNormal3fVertex3fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat a, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor4fNormal3fVertex3fvSUN")]
	public static void glTexCoord2fColor4fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor4ubVertex3fSUN")]
	public static void glTexCoord2fColor4ubVertex3fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLubyte r, GL.GLubyte g, GL.GLubyte b, GL.GLubyte a, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fColor4ubVertex3fvSUN")]
	public static void glTexCoord2fColor4ubVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLubyte[]? c, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fNormal3fVertex3fSUN")]
	public static void glTexCoord2fNormal3fVertex3fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fNormal3fVertex3fvSUN")]
	public static void glTexCoord2fNormal3fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fVertex3fSUN")]
	public static void glTexCoord2fVertex3fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fVertex3fvSUN")]
	public static void glTexCoord2fVertex3fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2fv")]
	public static void glTexCoord2fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2hNV")]
	public static void glTexCoord2hNV (GL.GLhalfNV s, GL.GLhalfNV t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2hvNV")]
	public static void glTexCoord2hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2i")]
	public static void glTexCoord2i (GL.GLint s, GL.GLint t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2iv")]
	public static void glTexCoord2iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2s")]
	public static void glTexCoord2s (GL.GLshort s, GL.GLshort t);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord2sv")]
	public static void glTexCoord2sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3d")]
	public static void glTexCoord3d (GL.GLdouble s, GL.GLdouble t, GL.GLdouble r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3dv")]
	public static void glTexCoord3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3f")]
	public static void glTexCoord3f (GL.GLfloat s, GL.GLfloat t, GL.GLfloat r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3fv")]
	public static void glTexCoord3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3hNV")]
	public static void glTexCoord3hNV (GL.GLhalfNV s, GL.GLhalfNV t, GL.GLhalfNV r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3hvNV")]
	public static void glTexCoord3hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3i")]
	public static void glTexCoord3i (GL.GLint s, GL.GLint t, GL.GLint r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3iv")]
	public static void glTexCoord3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3s")]
	public static void glTexCoord3s (GL.GLshort s, GL.GLshort t, GL.GLshort r);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord3sv")]
	public static void glTexCoord3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4d")]
	public static void glTexCoord4d (GL.GLdouble s, GL.GLdouble t, GL.GLdouble r, GL.GLdouble q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4dv")]
	public static void glTexCoord4dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4f")]
	public static void glTexCoord4f (GL.GLfloat s, GL.GLfloat t, GL.GLfloat r, GL.GLfloat q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4fColor4fNormal3fVertex4fSUN")]
	public static void glTexCoord4fColor4fNormal3fVertex4fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat p, GL.GLfloat q, GL.GLfloat r, GL.GLfloat g, GL.GLfloat b, GL.GLfloat a, GL.GLfloat nx, GL.GLfloat ny, GL.GLfloat nz, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4fColor4fNormal3fVertex4fvSUN")]
	public static void glTexCoord4fColor4fNormal3fVertex4fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? c, [CCode (array_length = false)] GL.GLfloat[]? n, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4fVertex4fSUN")]
	public static void glTexCoord4fVertex4fSUN (GL.GLfloat s, GL.GLfloat t, GL.GLfloat p, GL.GLfloat q, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4fVertex4fvSUN")]
	public static void glTexCoord4fVertex4fvSUN ([CCode (array_length = false)] GL.GLfloat[]? tc, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4fv")]
	public static void glTexCoord4fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4hNV")]
	public static void glTexCoord4hNV (GL.GLhalfNV s, GL.GLhalfNV t, GL.GLhalfNV r, GL.GLhalfNV q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4hvNV")]
	public static void glTexCoord4hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4i")]
	public static void glTexCoord4i (GL.GLint s, GL.GLint t, GL.GLint r, GL.GLint q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4iv")]
	public static void glTexCoord4iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4s")]
	public static void glTexCoord4s (GL.GLshort s, GL.GLshort t, GL.GLshort r, GL.GLshort q);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoord4sv")]
	public static void glTexCoord4sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordFormatNV")]
	public static void glTexCoordFormatNV (GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP1ui")]
	public static void glTexCoordP1ui (GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP1uiv")]
	public static void glTexCoordP1uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP2ui")]
	public static void glTexCoordP2ui (GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP2uiv")]
	public static void glTexCoordP2uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP3ui")]
	public static void glTexCoordP3ui (GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP3uiv")]
	public static void glTexCoordP3uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP4ui")]
	public static void glTexCoordP4ui (GL.GLenum type, GL.GLuint coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordP4uiv")]
	public static void glTexCoordP4uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordPointer")]
	public static void glTexCoordPointer (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordPointerEXT")]
	public static void glTexCoordPointerEXT (GL.GLint size, GL.GLenum type, GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordPointerListIBM")]
	public static void glTexCoordPointerListIBM (GL.GLint size, GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexCoordPointervINTEL")]
	public static void glTexCoordPointervINTEL (GL.GLint size, GL.GLenum type, [CCode (array_length = false)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexEnvf")]
	public static void glTexEnvf (GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexEnvfv")]
	public static void glTexEnvfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexEnvi")]
	public static void glTexEnvi (GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexEnviv")]
	public static void glTexEnviv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexFilterFuncSGIS")]
	public static void glTexFilterFuncSGIS (GL.GLenum target, GL.GLenum filter, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGend")]
	public static void glTexGend (GL.GLenum coord, GL.GLenum pname, GL.GLdouble param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGendv")]
	public static void glTexGendv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGenf")]
	public static void glTexGenf (GL.GLenum coord, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGenfv")]
	public static void glTexGenfv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGeni")]
	public static void glTexGeni (GL.GLenum coord, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexGeniv")]
	public static void glTexGeniv (GL.GLenum coord, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage1D")]
	public static void glTexImage1D (GL.GLenum target, GL.GLint level, GL.GLint internalformat, GL.GLsizei width, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage2D")]
	public static void glTexImage2D (GL.GLenum target, GL.GLint level, GL.GLint internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage2DMultisample")]
	public static void glTexImage2DMultisample (GL.GLenum target, GL.GLsizei samples, GL.GLint internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLboolean fixedsamplelocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage2DMultisampleCoverageNV")]
	public static void glTexImage2DMultisampleCoverageNV (GL.GLenum target, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage3D")]
	public static void glTexImage3D (GL.GLenum target, GL.GLint level, GL.GLint internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage3DEXT")]
	public static void glTexImage3DEXT (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage3DMultisample")]
	public static void glTexImage3DMultisample (GL.GLenum target, GL.GLsizei samples, GL.GLint internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLboolean fixedsamplelocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage3DMultisampleCoverageNV")]
	public static void glTexImage3DMultisampleCoverageNV (GL.GLenum target, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexImage4DSGIS")]
	public static void glTexImage4DSGIS (GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLsizei size4d, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterIiv")]
	public static void glTexParameterIiv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterIivEXT")]
	public static void glTexParameterIivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterIuiv")]
	public static void glTexParameterIuiv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterIuivEXT")]
	public static void glTexParameterIuivEXT (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterf")]
	public static void glTexParameterf (GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameterfv")]
	public static void glTexParameterfv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameteri")]
	public static void glTexParameteri (GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexParameteriv")]
	public static void glTexParameteriv (GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexRenderbufferNV")]
	public static void glTexRenderbufferNV (GL.GLenum target, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexStorage1D")]
	public static void glTexStorage1D (GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexStorage2D")]
	public static void glTexStorage2D (GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexStorage3D")]
	public static void glTexStorage3D (GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage1D")]
	public static void glTexSubImage1D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage1DEXT")]
	public static void glTexSubImage1DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage2D")]
	public static void glTexSubImage2D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage2DEXT")]
	public static void glTexSubImage2DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage3D")]
	public static void glTexSubImage3D (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage3DEXT")]
	public static void glTexSubImage3DEXT (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTexSubImage4DSGIS")]
	public static void glTexSubImage4DSGIS (GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLint woffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLsizei size4d, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureBarrierNV")]
	public static void glTextureBarrierNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureBufferEXT")]
	public static void glTextureBufferEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum internalformat, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureColorMaskSGIS")]
	public static void glTextureColorMaskSGIS (GL.GLboolean red, GL.GLboolean green, GL.GLboolean blue, GL.GLboolean alpha);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage1DEXT")]
	public static void glTextureImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage2DEXT")]
	public static void glTextureImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage2DMultisampleCoverageNV")]
	public static void glTextureImage2DMultisampleCoverageNV (GL.GLuint texture, GL.GLenum target, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage2DMultisampleNV")]
	public static void glTextureImage2DMultisampleNV (GL.GLuint texture, GL.GLenum target, GL.GLsizei samples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage3DEXT")]
	public static void glTextureImage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLint border, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage3DMultisampleCoverageNV")]
	public static void glTextureImage3DMultisampleCoverageNV (GL.GLuint texture, GL.GLenum target, GL.GLsizei coverageSamples, GL.GLsizei colorSamples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureImage3DMultisampleNV")]
	public static void glTextureImage3DMultisampleNV (GL.GLuint texture, GL.GLenum target, GL.GLsizei samples, GL.GLint internalFormat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLboolean fixedSampleLocations);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureLightEXT")]
	public static void glTextureLightEXT (GL.GLenum pname);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureMaterialEXT")]
	public static void glTextureMaterialEXT (GL.GLenum face, GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureNormalEXT")]
	public static void glTextureNormalEXT (GL.GLenum mode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameterIivEXT")]
	public static void glTextureParameterIivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameterIuivEXT")]
	public static void glTextureParameterIuivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameterfEXT")]
	public static void glTextureParameterfEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameterfvEXT")]
	public static void glTextureParameterfvEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameteriEXT")]
	public static void glTextureParameteriEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureParameterivEXT")]
	public static void glTextureParameterivEXT (GL.GLuint texture, GL.GLenum target, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureRangeAPPLE")]
	public static void glTextureRangeAPPLE (GL.GLenum target, GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureRenderbufferEXT")]
	public static void glTextureRenderbufferEXT (GL.GLuint texture, GL.GLenum target, GL.GLuint renderbuffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureStorage1DEXT")]
	public static void glTextureStorage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureStorage2DEXT")]
	public static void glTextureStorage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureStorage3DEXT")]
	public static void glTextureStorage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLsizei levels, GL.GLenum internalformat, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureSubImage1DEXT")]
	public static void glTextureSubImage1DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLsizei width, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureSubImage2DEXT")]
	public static void glTextureSubImage2DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLsizei width, GL.GLsizei height, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTextureSubImage3DEXT")]
	public static void glTextureSubImage3DEXT (GL.GLuint texture, GL.GLenum target, GL.GLint level, GL.GLint xoffset, GL.GLint yoffset, GL.GLint zoffset, GL.GLsizei width, GL.GLsizei height, GL.GLsizei depth, GL.GLenum format, GL.GLenum type, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pixels);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTrackMatrixNV")]
	public static void glTrackMatrixNV (GL.GLenum target, GL.GLuint address, GL.GLenum matrix, GL.GLenum transform);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTransformFeedbackAttribsNV")]
	public static void glTransformFeedbackAttribsNV (GL.GLuint count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? attribs, GL.GLenum bufferMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTransformFeedbackStreamAttribsNV")]
	public static void glTransformFeedbackStreamAttribsNV (GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? attribs, GL.GLsizei nbuffers, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? bufstreams, GL.GLenum bufferMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTransformFeedbackVaryings")]
	public static void glTransformFeedbackVaryings (GL.GLuint program, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? varyings, GL.GLenum bufferMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTransformFeedbackVaryingsEXT")]
	public static void glTransformFeedbackVaryingsEXT (GL.GLuint program, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLchar[]? varyings, GL.GLenum bufferMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTransformFeedbackVaryingsNV")]
	public static void glTransformFeedbackVaryingsNV (GL.GLuint program, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? locations, GL.GLenum bufferMode);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTranslated")]
	public static void glTranslated (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glTranslatef")]
	public static void glTranslatef (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1d")]
	public static void glUniform1d (GL.GLint location, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1dv")]
	public static void glUniform1dv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1f")]
	public static void glUniform1f (GL.GLint location, GL.GLfloat v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1fARB")]
	public static void glUniform1fARB (GL.GLint location, GL.GLfloat v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1fv")]
	public static void glUniform1fv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1fvARB")]
	public static void glUniform1fvARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1i")]
	public static void glUniform1i (GL.GLint location, GL.GLint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1i64NV")]
	public static void glUniform1i64NV (GL.GLint location, GL.GLint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1i64vNV")]
	public static void glUniform1i64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1iARB")]
	public static void glUniform1iARB (GL.GLint location, GL.GLint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1iv")]
	public static void glUniform1iv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1ivARB")]
	public static void glUniform1ivARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1ui")]
	public static void glUniform1ui (GL.GLint location, GL.GLuint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1ui64NV")]
	public static void glUniform1ui64NV (GL.GLint location, GL.GLuint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1ui64vNV")]
	public static void glUniform1ui64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1uiEXT")]
	public static void glUniform1uiEXT (GL.GLint location, GL.GLuint v0);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1uiv")]
	public static void glUniform1uiv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform1uivEXT")]
	public static void glUniform1uivEXT (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2d")]
	public static void glUniform2d (GL.GLint location, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2dv")]
	public static void glUniform2dv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2f")]
	public static void glUniform2f (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2fARB")]
	public static void glUniform2fARB (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2fv")]
	public static void glUniform2fv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2fvARB")]
	public static void glUniform2fvARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2i")]
	public static void glUniform2i (GL.GLint location, GL.GLint v0, GL.GLint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2i64NV")]
	public static void glUniform2i64NV (GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2i64vNV")]
	public static void glUniform2i64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2iARB")]
	public static void glUniform2iARB (GL.GLint location, GL.GLint v0, GL.GLint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2iv")]
	public static void glUniform2iv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2ivARB")]
	public static void glUniform2ivARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2ui")]
	public static void glUniform2ui (GL.GLint location, GL.GLuint v0, GL.GLuint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2ui64NV")]
	public static void glUniform2ui64NV (GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2ui64vNV")]
	public static void glUniform2ui64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2uiEXT")]
	public static void glUniform2uiEXT (GL.GLint location, GL.GLuint v0, GL.GLuint v1);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2uiv")]
	public static void glUniform2uiv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform2uivEXT")]
	public static void glUniform2uivEXT (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3d")]
	public static void glUniform3d (GL.GLint location, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3dv")]
	public static void glUniform3dv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3f")]
	public static void glUniform3f (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3fARB")]
	public static void glUniform3fARB (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3fv")]
	public static void glUniform3fv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3fvARB")]
	public static void glUniform3fvARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3i")]
	public static void glUniform3i (GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3i64NV")]
	public static void glUniform3i64NV (GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3i64vNV")]
	public static void glUniform3i64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3iARB")]
	public static void glUniform3iARB (GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3iv")]
	public static void glUniform3iv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3ivARB")]
	public static void glUniform3ivARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3ui")]
	public static void glUniform3ui (GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3ui64NV")]
	public static void glUniform3ui64NV (GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3ui64vNV")]
	public static void glUniform3ui64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3uiEXT")]
	public static void glUniform3uiEXT (GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3uiv")]
	public static void glUniform3uiv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform3uivEXT")]
	public static void glUniform3uivEXT (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4d")]
	public static void glUniform4d (GL.GLint location, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4dv")]
	public static void glUniform4dv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4f")]
	public static void glUniform4f (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2, GL.GLfloat v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4fARB")]
	public static void glUniform4fARB (GL.GLint location, GL.GLfloat v0, GL.GLfloat v1, GL.GLfloat v2, GL.GLfloat v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4fv")]
	public static void glUniform4fv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4fvARB")]
	public static void glUniform4fvARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4i")]
	public static void glUniform4i (GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2, GL.GLint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4i64NV")]
	public static void glUniform4i64NV (GL.GLint location, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z, GL.GLint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4i64vNV")]
	public static void glUniform4i64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4iARB")]
	public static void glUniform4iARB (GL.GLint location, GL.GLint v0, GL.GLint v1, GL.GLint v2, GL.GLint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4iv")]
	public static void glUniform4iv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4ivARB")]
	public static void glUniform4ivARB (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4ui")]
	public static void glUniform4ui (GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2, GL.GLuint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4ui64NV")]
	public static void glUniform4ui64NV (GL.GLint location, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z, GL.GLuint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4ui64vNV")]
	public static void glUniform4ui64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4uiEXT")]
	public static void glUniform4uiEXT (GL.GLint location, GL.GLuint v0, GL.GLuint v1, GL.GLuint v2, GL.GLuint v3);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4uiv")]
	public static void glUniform4uiv (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniform4uivEXT")]
	public static void glUniform4uivEXT (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformBlockBinding")]
	public static void glUniformBlockBinding (GL.GLuint program, GL.GLuint uniformBlockIndex, GL.GLuint uniformBlockBinding);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformBufferEXT")]
	public static void glUniformBufferEXT (GL.GLuint program, GL.GLint location, GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2dv")]
	public static void glUniformMatrix2dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2fv")]
	public static void glUniformMatrix2fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2fvARB")]
	public static void glUniformMatrix2fvARB (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2x3dv")]
	public static void glUniformMatrix2x3dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2x3fv")]
	public static void glUniformMatrix2x3fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2x4dv")]
	public static void glUniformMatrix2x4dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix2x4fv")]
	public static void glUniformMatrix2x4fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3dv")]
	public static void glUniformMatrix3dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3fv")]
	public static void glUniformMatrix3fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3fvARB")]
	public static void glUniformMatrix3fvARB (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3x2dv")]
	public static void glUniformMatrix3x2dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3x2fv")]
	public static void glUniformMatrix3x2fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3x4dv")]
	public static void glUniformMatrix3x4dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix3x4fv")]
	public static void glUniformMatrix3x4fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4dv")]
	public static void glUniformMatrix4dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4fv")]
	public static void glUniformMatrix4fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4fvARB")]
	public static void glUniformMatrix4fvARB (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4x2dv")]
	public static void glUniformMatrix4x2dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4x2fv")]
	public static void glUniformMatrix4x2fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4x3dv")]
	public static void glUniformMatrix4x3dv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformMatrix4x3fv")]
	public static void glUniformMatrix4x3fv (GL.GLint location, GL.GLsizei count, GL.GLboolean transpose, [CCode (array_length = false)] GL.GLfloat[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformSubroutinesuiv")]
	public static void glUniformSubroutinesuiv (GL.GLenum shadertype, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? indices);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformui64NV")]
	public static void glUniformui64NV (GL.GLint location, GL.GLuint64EXT value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUniformui64vNV")]
	public static void glUniformui64vNV (GL.GLint location, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint64EXT[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUnlockArraysEXT")]
	public static void glUnlockArraysEXT ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glUnmapBuffer")]
	public static GL.GLboolean glUnmapBuffer (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUnmapBufferARB")]
	public static GL.GLboolean glUnmapBufferARB (GL.GLenum target);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUnmapNamedBufferEXT")]
	public static GL.GLboolean glUnmapNamedBufferEXT (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUnmapObjectBufferATI")]
	public static void glUnmapObjectBufferATI (GL.GLuint buffer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUpdateObjectBufferATI")]
	public static void glUpdateObjectBufferATI (GL.GLuint buffer, GL.GLuint offset, GL.GLsizei size, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLenum preserve);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUseProgram")]
	public static void glUseProgram (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUseProgramObjectARB")]
	public static void glUseProgramObjectARB (GL.GLhandleARB programObj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUseProgramStages")]
	public static void glUseProgramStages (GL.GLuint pipeline, GL.GLbitfield stages, GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glUseShaderProgramEXT")]
	public static void glUseShaderProgramEXT (GL.GLenum type, GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUFiniNV")]
	public static void glVDPAUFiniNV ();
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUGetSurfaceivNV")]
	public static void glVDPAUGetSurfaceivNV (GL.GLvdpauSurfaceNV surface, GL.GLenum pname, GL.GLsizei bufSize, out GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLint[] values);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUInitNV")]
	public static void glVDPAUInitNV (GL.GLvoid vdpDevice, GL.GLvoid getProcAddress);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUIsSurfaceNV")]
	public static void glVDPAUIsSurfaceNV (GL.GLvdpauSurfaceNV surface);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUMapSurfacesNV")]
	public static void glVDPAUMapSurfacesNV (GL.GLsizei numSurfaces, [CCode (array_length = false, array_null_terminated = true)] GL.GLvdpauSurfaceNV[]? surfaces);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAURegisterOutputSurfaceNV")]
	public static GL.GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV (out GL.GLvoid vdpSurface, GL.GLenum target, GL.GLsizei numTextureNames, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textureNames);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAURegisterVideoSurfaceNV")]
	public static GL.GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV (out GL.GLvoid vdpSurface, GL.GLenum target, GL.GLsizei numTextureNames, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? textureNames);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUSurfaceAccessNV")]
	public static void glVDPAUSurfaceAccessNV (GL.GLvdpauSurfaceNV surface, GL.GLenum access);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUUnmapSurfacesNV")]
	public static void glVDPAUUnmapSurfacesNV (GL.GLsizei numSurface, [CCode (array_length = false, array_null_terminated = true)] GL.GLvdpauSurfaceNV[]? surfaces);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVDPAUUnregisterSurfaceNV")]
	public static void glVDPAUUnregisterSurfaceNV (GL.GLvdpauSurfaceNV surface);
	[CCode (cheader_filename = "GL/gl.h", cname = "glValidateProgram")]
	public static void glValidateProgram (GL.GLuint program);
	[CCode (cheader_filename = "GL/gl.h", cname = "glValidateProgramARB")]
	public static void glValidateProgramARB (GL.GLhandleARB programObj);
	[CCode (cheader_filename = "GL/gl.h", cname = "glValidateProgramPipeline")]
	public static void glValidateProgramPipeline (GL.GLuint pipeline);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantArrayObjectATI")]
	public static void glVariantArrayObjectATI (GL.GLuint id, GL.GLenum type, GL.GLsizei stride, GL.GLuint buffer, GL.GLuint offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantPointerEXT")]
	public static void glVariantPointerEXT (GL.GLuint id, GL.GLenum type, GL.GLuint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantbvEXT")]
	public static void glVariantbvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLbyte[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantdvEXT")]
	public static void glVariantdvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantfvEXT")]
	public static void glVariantfvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantivEXT")]
	public static void glVariantivEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantsvEXT")]
	public static void glVariantsvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantubvEXT")]
	public static void glVariantubvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantuivEXT")]
	public static void glVariantuivEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVariantusvEXT")]
	public static void glVariantusvEXT (GL.GLuint id, [CCode (array_length = false, array_null_terminated = true)] GL.GLushort[]? addr);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2d")]
	public static void glVertex2d (GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2dv")]
	public static void glVertex2dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2f")]
	public static void glVertex2f (GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2fv")]
	public static void glVertex2fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2hNV")]
	public static void glVertex2hNV (GL.GLhalfNV x, GL.GLhalfNV y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2hvNV")]
	public static void glVertex2hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2i")]
	public static void glVertex2i (GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2iv")]
	public static void glVertex2iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2s")]
	public static void glVertex2s (GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex2sv")]
	public static void glVertex2sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3d")]
	public static void glVertex3d (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3dv")]
	public static void glVertex3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3f")]
	public static void glVertex3f (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3fv")]
	public static void glVertex3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3hNV")]
	public static void glVertex3hNV (GL.GLhalfNV x, GL.GLhalfNV y, GL.GLhalfNV z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3hvNV")]
	public static void glVertex3hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3i")]
	public static void glVertex3i (GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3iv")]
	public static void glVertex3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3s")]
	public static void glVertex3s (GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex3sv")]
	public static void glVertex3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4d")]
	public static void glVertex4d (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4dv")]
	public static void glVertex4dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4f")]
	public static void glVertex4f (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4fv")]
	public static void glVertex4fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4hNV")]
	public static void glVertex4hNV (GL.GLhalfNV x, GL.GLhalfNV y, GL.GLhalfNV z, GL.GLhalfNV w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4hvNV")]
	public static void glVertex4hvNV ([CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4i")]
	public static void glVertex4i (GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4iv")]
	public static void glVertex4iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4s")]
	public static void glVertex4s (GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertex4sv")]
	public static void glVertex4sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexArrayParameteriAPPLE")]
	public static void glVertexArrayParameteriAPPLE (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexArrayRangeAPPLE")]
	public static void glVertexArrayRangeAPPLE (GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] out unowned GL.GLvoid[] pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexArrayRangeNV")]
	public static void glVertexArrayRangeNV (GL.GLsizei length, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexArrayVertexAttribLOffsetEXT")]
	public static void glVertexArrayVertexAttribLOffsetEXT (GL.GLuint vaobj, GL.GLuint buffer, GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride, GL.GLintptr offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1d")]
	public static void glVertexAttrib1d (GL.GLuint index, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1dARB")]
	public static void glVertexAttrib1dARB (GL.GLuint index, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1dNV")]
	public static void glVertexAttrib1dNV (GL.GLuint index, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1dv")]
	public static void glVertexAttrib1dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1dvARB")]
	public static void glVertexAttrib1dvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1dvNV")]
	public static void glVertexAttrib1dvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1f")]
	public static void glVertexAttrib1f (GL.GLuint index, GL.GLfloat x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1fARB")]
	public static void glVertexAttrib1fARB (GL.GLuint index, GL.GLfloat x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1fNV")]
	public static void glVertexAttrib1fNV (GL.GLuint index, GL.GLfloat x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1fv")]
	public static void glVertexAttrib1fv (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1fvARB")]
	public static void glVertexAttrib1fvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1fvNV")]
	public static void glVertexAttrib1fvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1hNV")]
	public static void glVertexAttrib1hNV (GL.GLuint index, GL.GLhalfNV x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1hvNV")]
	public static void glVertexAttrib1hvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1s")]
	public static void glVertexAttrib1s (GL.GLuint index, GL.GLshort x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1sARB")]
	public static void glVertexAttrib1sARB (GL.GLuint index, GL.GLshort x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1sNV")]
	public static void glVertexAttrib1sNV (GL.GLuint index, GL.GLshort x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1sv")]
	public static void glVertexAttrib1sv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1svARB")]
	public static void glVertexAttrib1svARB (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib1svNV")]
	public static void glVertexAttrib1svNV (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2d")]
	public static void glVertexAttrib2d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2dARB")]
	public static void glVertexAttrib2dARB (GL.GLuint index, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2dNV")]
	public static void glVertexAttrib2dNV (GL.GLuint index, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2dv")]
	public static void glVertexAttrib2dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2dvARB")]
	public static void glVertexAttrib2dvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2dvNV")]
	public static void glVertexAttrib2dvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2f")]
	public static void glVertexAttrib2f (GL.GLuint index, GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2fARB")]
	public static void glVertexAttrib2fARB (GL.GLuint index, GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2fNV")]
	public static void glVertexAttrib2fNV (GL.GLuint index, GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2fv")]
	public static void glVertexAttrib2fv (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2fvARB")]
	public static void glVertexAttrib2fvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2fvNV")]
	public static void glVertexAttrib2fvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2hNV")]
	public static void glVertexAttrib2hNV (GL.GLuint index, GL.GLhalfNV x, GL.GLhalfNV y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2hvNV")]
	public static void glVertexAttrib2hvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2s")]
	public static void glVertexAttrib2s (GL.GLuint index, GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2sARB")]
	public static void glVertexAttrib2sARB (GL.GLuint index, GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2sNV")]
	public static void glVertexAttrib2sNV (GL.GLuint index, GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2sv")]
	public static void glVertexAttrib2sv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2svARB")]
	public static void glVertexAttrib2svARB (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib2svNV")]
	public static void glVertexAttrib2svNV (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3d")]
	public static void glVertexAttrib3d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3dARB")]
	public static void glVertexAttrib3dARB (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3dNV")]
	public static void glVertexAttrib3dNV (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3dv")]
	public static void glVertexAttrib3dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3dvARB")]
	public static void glVertexAttrib3dvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3dvNV")]
	public static void glVertexAttrib3dvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3f")]
	public static void glVertexAttrib3f (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3fARB")]
	public static void glVertexAttrib3fARB (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3fNV")]
	public static void glVertexAttrib3fNV (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3fv")]
	public static void glVertexAttrib3fv (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3fvARB")]
	public static void glVertexAttrib3fvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3fvNV")]
	public static void glVertexAttrib3fvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3hNV")]
	public static void glVertexAttrib3hNV (GL.GLuint index, GL.GLhalfNV x, GL.GLhalfNV y, GL.GLhalfNV z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3hvNV")]
	public static void glVertexAttrib3hvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3s")]
	public static void glVertexAttrib3s (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3sARB")]
	public static void glVertexAttrib3sARB (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3sNV")]
	public static void glVertexAttrib3sNV (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3sv")]
	public static void glVertexAttrib3sv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3svARB")]
	public static void glVertexAttrib3svARB (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib3svNV")]
	public static void glVertexAttrib3svNV (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nbv")]
	public static void glVertexAttrib4Nbv (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NbvARB")]
	public static void glVertexAttrib4NbvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Niv")]
	public static void glVertexAttrib4Niv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NivARB")]
	public static void glVertexAttrib4NivARB (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nsv")]
	public static void glVertexAttrib4Nsv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NsvARB")]
	public static void glVertexAttrib4NsvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nub")]
	public static void glVertexAttrib4Nub (GL.GLuint index, GL.GLubyte x, GL.GLubyte y, GL.GLubyte z, GL.GLubyte w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NubARB")]
	public static void glVertexAttrib4NubARB (GL.GLuint index, GL.GLubyte x, GL.GLubyte y, GL.GLubyte z, GL.GLubyte w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nubv")]
	public static void glVertexAttrib4Nubv (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NubvARB")]
	public static void glVertexAttrib4NubvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nuiv")]
	public static void glVertexAttrib4Nuiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NuivARB")]
	public static void glVertexAttrib4NuivARB (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4Nusv")]
	public static void glVertexAttrib4Nusv (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4NusvARB")]
	public static void glVertexAttrib4NusvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4bv")]
	public static void glVertexAttrib4bv (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4bvARB")]
	public static void glVertexAttrib4bvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4d")]
	public static void glVertexAttrib4d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4dARB")]
	public static void glVertexAttrib4dARB (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4dNV")]
	public static void glVertexAttrib4dNV (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4dv")]
	public static void glVertexAttrib4dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4dvARB")]
	public static void glVertexAttrib4dvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4dvNV")]
	public static void glVertexAttrib4dvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4f")]
	public static void glVertexAttrib4f (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4fARB")]
	public static void glVertexAttrib4fARB (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4fNV")]
	public static void glVertexAttrib4fNV (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4fv")]
	public static void glVertexAttrib4fv (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4fvARB")]
	public static void glVertexAttrib4fvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4fvNV")]
	public static void glVertexAttrib4fvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4hNV")]
	public static void glVertexAttrib4hNV (GL.GLuint index, GL.GLhalfNV x, GL.GLhalfNV y, GL.GLhalfNV z, GL.GLhalfNV w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4hvNV")]
	public static void glVertexAttrib4hvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4iv")]
	public static void glVertexAttrib4iv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4ivARB")]
	public static void glVertexAttrib4ivARB (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4s")]
	public static void glVertexAttrib4s (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4sARB")]
	public static void glVertexAttrib4sARB (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4sNV")]
	public static void glVertexAttrib4sNV (GL.GLuint index, GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4sv")]
	public static void glVertexAttrib4sv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4svARB")]
	public static void glVertexAttrib4svARB (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4svNV")]
	public static void glVertexAttrib4svNV (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4ubNV")]
	public static void glVertexAttrib4ubNV (GL.GLuint index, GL.GLubyte x, GL.GLubyte y, GL.GLubyte z, GL.GLubyte w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4ubv")]
	public static void glVertexAttrib4ubv (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4ubvARB")]
	public static void glVertexAttrib4ubvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4ubvNV")]
	public static void glVertexAttrib4ubvNV (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4uiv")]
	public static void glVertexAttrib4uiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4uivARB")]
	public static void glVertexAttrib4uivARB (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4usv")]
	public static void glVertexAttrib4usv (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttrib4usvARB")]
	public static void glVertexAttrib4usvARB (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribArrayObjectATI")]
	public static void glVertexAttribArrayObjectATI (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLboolean normalized, GL.GLsizei stride, GL.GLuint buffer, GL.GLuint offset);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribDivisor")]
	public static void glVertexAttribDivisor (GL.GLuint index, GL.GLuint divisor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribDivisorARB")]
	public static void glVertexAttribDivisorARB (GL.GLuint index, GL.GLuint divisor);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribFormatNV")]
	public static void glVertexAttribFormatNV (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLboolean normalized, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1i")]
	public static void glVertexAttribI1i (GL.GLuint index, GL.GLint x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1iEXT")]
	public static void glVertexAttribI1iEXT (GL.GLuint index, GL.GLint x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1iv")]
	public static void glVertexAttribI1iv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1ivEXT")]
	public static void glVertexAttribI1ivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1ui")]
	public static void glVertexAttribI1ui (GL.GLuint index, GL.GLuint x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1uiEXT")]
	public static void glVertexAttribI1uiEXT (GL.GLuint index, GL.GLuint x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1uiv")]
	public static void glVertexAttribI1uiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI1uivEXT")]
	public static void glVertexAttribI1uivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2i")]
	public static void glVertexAttribI2i (GL.GLuint index, GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2iEXT")]
	public static void glVertexAttribI2iEXT (GL.GLuint index, GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2iv")]
	public static void glVertexAttribI2iv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2ivEXT")]
	public static void glVertexAttribI2ivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2ui")]
	public static void glVertexAttribI2ui (GL.GLuint index, GL.GLuint x, GL.GLuint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2uiEXT")]
	public static void glVertexAttribI2uiEXT (GL.GLuint index, GL.GLuint x, GL.GLuint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2uiv")]
	public static void glVertexAttribI2uiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI2uivEXT")]
	public static void glVertexAttribI2uivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3i")]
	public static void glVertexAttribI3i (GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3iEXT")]
	public static void glVertexAttribI3iEXT (GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3iv")]
	public static void glVertexAttribI3iv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3ivEXT")]
	public static void glVertexAttribI3ivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3ui")]
	public static void glVertexAttribI3ui (GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3uiEXT")]
	public static void glVertexAttribI3uiEXT (GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3uiv")]
	public static void glVertexAttribI3uiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI3uivEXT")]
	public static void glVertexAttribI3uivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4bv")]
	public static void glVertexAttribI4bv (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4bvEXT")]
	public static void glVertexAttribI4bvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLbyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4i")]
	public static void glVertexAttribI4i (GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4iEXT")]
	public static void glVertexAttribI4iEXT (GL.GLuint index, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4iv")]
	public static void glVertexAttribI4iv (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4ivEXT")]
	public static void glVertexAttribI4ivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4sv")]
	public static void glVertexAttribI4sv (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4svEXT")]
	public static void glVertexAttribI4svEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4ubv")]
	public static void glVertexAttribI4ubv (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4ubvEXT")]
	public static void glVertexAttribI4ubvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4ui")]
	public static void glVertexAttribI4ui (GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z, GL.GLuint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4uiEXT")]
	public static void glVertexAttribI4uiEXT (GL.GLuint index, GL.GLuint x, GL.GLuint y, GL.GLuint z, GL.GLuint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4uiv")]
	public static void glVertexAttribI4uiv (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4uivEXT")]
	public static void glVertexAttribI4uivEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLuint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4usv")]
	public static void glVertexAttribI4usv (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribI4usvEXT")]
	public static void glVertexAttribI4usvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLushort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribIFormatNV")]
	public static void glVertexAttribIFormatNV (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribIPointer")]
	public static void glVertexAttribIPointer (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribIPointerEXT")]
	public static void glVertexAttribIPointerEXT (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1d")]
	public static void glVertexAttribL1d (GL.GLuint index, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1dEXT")]
	public static void glVertexAttribL1dEXT (GL.GLuint index, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1dv")]
	public static void glVertexAttribL1dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1dvEXT")]
	public static void glVertexAttribL1dvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1i64NV")]
	public static void glVertexAttribL1i64NV (GL.GLuint index, GL.GLint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1i64vNV")]
	public static void glVertexAttribL1i64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1ui64NV")]
	public static void glVertexAttribL1ui64NV (GL.GLuint index, GL.GLuint64EXT x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL1ui64vNV")]
	public static void glVertexAttribL1ui64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLuint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2d")]
	public static void glVertexAttribL2d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2dEXT")]
	public static void glVertexAttribL2dEXT (GL.GLuint index, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2dv")]
	public static void glVertexAttribL2dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2dvEXT")]
	public static void glVertexAttribL2dvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2i64NV")]
	public static void glVertexAttribL2i64NV (GL.GLuint index, GL.GLint64EXT x, GL.GLint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2i64vNV")]
	public static void glVertexAttribL2i64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2ui64NV")]
	public static void glVertexAttribL2ui64NV (GL.GLuint index, GL.GLuint64EXT x, GL.GLuint64EXT y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL2ui64vNV")]
	public static void glVertexAttribL2ui64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLuint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3d")]
	public static void glVertexAttribL3d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3dEXT")]
	public static void glVertexAttribL3dEXT (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3dv")]
	public static void glVertexAttribL3dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3dvEXT")]
	public static void glVertexAttribL3dvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3i64NV")]
	public static void glVertexAttribL3i64NV (GL.GLuint index, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3i64vNV")]
	public static void glVertexAttribL3i64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3ui64NV")]
	public static void glVertexAttribL3ui64NV (GL.GLuint index, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL3ui64vNV")]
	public static void glVertexAttribL3ui64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLuint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4d")]
	public static void glVertexAttribL4d (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4dEXT")]
	public static void glVertexAttribL4dEXT (GL.GLuint index, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4dv")]
	public static void glVertexAttribL4dv (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4dvEXT")]
	public static void glVertexAttribL4dvEXT (GL.GLuint index, [CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4i64NV")]
	public static void glVertexAttribL4i64NV (GL.GLuint index, GL.GLint64EXT x, GL.GLint64EXT y, GL.GLint64EXT z, GL.GLint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4i64vNV")]
	public static void glVertexAttribL4i64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4ui64NV")]
	public static void glVertexAttribL4ui64NV (GL.GLuint index, GL.GLuint64EXT x, GL.GLuint64EXT y, GL.GLuint64EXT z, GL.GLuint64EXT w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribL4ui64vNV")]
	public static void glVertexAttribL4ui64vNV (GL.GLuint index, [CCode (array_length = false)] GL.GLuint64EXT[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribLFormatNV")]
	public static void glVertexAttribLFormatNV (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribLPointer")]
	public static void glVertexAttribLPointer (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribLPointerEXT")]
	public static void glVertexAttribLPointerEXT (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP1ui")]
	public static void glVertexAttribP1ui (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP1uiv")]
	public static void glVertexAttribP1uiv (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP2ui")]
	public static void glVertexAttribP2ui (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP2uiv")]
	public static void glVertexAttribP2uiv (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP3ui")]
	public static void glVertexAttribP3ui (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP3uiv")]
	public static void glVertexAttribP3uiv (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP4ui")]
	public static void glVertexAttribP4ui (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribP4uiv")]
	public static void glVertexAttribP4uiv (GL.GLuint index, GL.GLenum type, GL.GLboolean normalized, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribPointer")]
	public static void glVertexAttribPointer (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLboolean normalized, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribPointerARB")]
	public static void glVertexAttribPointerARB (GL.GLuint index, GL.GLint size, GL.GLenum type, GL.GLboolean normalized, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribPointerNV")]
	public static void glVertexAttribPointerNV (GL.GLuint index, GL.GLint fsize, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs1dvNV")]
	public static void glVertexAttribs1dvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs1fvNV")]
	public static void glVertexAttribs1fvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs1hvNV")]
	public static void glVertexAttribs1hvNV (GL.GLuint index, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs1svNV")]
	public static void glVertexAttribs1svNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs2dvNV")]
	public static void glVertexAttribs2dvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs2fvNV")]
	public static void glVertexAttribs2fvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs2hvNV")]
	public static void glVertexAttribs2hvNV (GL.GLuint index, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs2svNV")]
	public static void glVertexAttribs2svNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs3dvNV")]
	public static void glVertexAttribs3dvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs3fvNV")]
	public static void glVertexAttribs3fvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs3hvNV")]
	public static void glVertexAttribs3hvNV (GL.GLuint index, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs3svNV")]
	public static void glVertexAttribs3svNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs4dvNV")]
	public static void glVertexAttribs4dvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs4fvNV")]
	public static void glVertexAttribs4fvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs4hvNV")]
	public static void glVertexAttribs4hvNV (GL.GLuint index, GL.GLsizei n, [CCode (array_length = false, array_null_terminated = true)] GL.GLhalfNV[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs4svNV")]
	public static void glVertexAttribs4svNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexAttribs4ubvNV")]
	public static void glVertexAttribs4ubvNV (GL.GLuint index, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexBlendARB")]
	public static void glVertexBlendARB (GL.GLint count);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexBlendEnvfATI")]
	public static void glVertexBlendEnvfATI (GL.GLenum pname, GL.GLfloat param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexBlendEnviATI")]
	public static void glVertexBlendEnviATI (GL.GLenum pname, GL.GLint param);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexFormatNV")]
	public static void glVertexFormatNV (GL.GLint size, GL.GLenum type, GL.GLsizei stride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP2ui")]
	public static void glVertexP2ui (GL.GLenum type, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP2uiv")]
	public static void glVertexP2uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP3ui")]
	public static void glVertexP3ui (GL.GLenum type, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP3uiv")]
	public static void glVertexP3uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP4ui")]
	public static void glVertexP4ui (GL.GLenum type, GL.GLuint value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexP4uiv")]
	public static void glVertexP4uiv (GL.GLenum type, [CCode (array_length = false)] GL.GLuint[]? value);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexPointer")]
	public static void glVertexPointer (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexPointerEXT")]
	public static void glVertexPointerEXT (GL.GLint size, GL.GLenum type, GL.GLsizei stride, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexPointerListIBM")]
	public static void glVertexPointerListIBM (GL.GLint size, GL.GLenum type, GL.GLint stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer, GL.GLint ptrstride);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexPointervINTEL")]
	public static void glVertexPointervINTEL (GL.GLint size, GL.GLenum type, [CCode (array_length = false)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1dATI")]
	public static void glVertexStream1dATI (GL.GLenum stream, GL.GLdouble x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1dvATI")]
	public static void glVertexStream1dvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLdouble[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1fATI")]
	public static void glVertexStream1fATI (GL.GLenum stream, GL.GLfloat x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1fvATI")]
	public static void glVertexStream1fvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLfloat[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1iATI")]
	public static void glVertexStream1iATI (GL.GLenum stream, GL.GLint x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1ivATI")]
	public static void glVertexStream1ivATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1sATI")]
	public static void glVertexStream1sATI (GL.GLenum stream, GL.GLshort x);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream1svATI")]
	public static void glVertexStream1svATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLshort[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2dATI")]
	public static void glVertexStream2dATI (GL.GLenum stream, GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2dvATI")]
	public static void glVertexStream2dvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLdouble[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2fATI")]
	public static void glVertexStream2fATI (GL.GLenum stream, GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2fvATI")]
	public static void glVertexStream2fvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLfloat[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2iATI")]
	public static void glVertexStream2iATI (GL.GLenum stream, GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2ivATI")]
	public static void glVertexStream2ivATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2sATI")]
	public static void glVertexStream2sATI (GL.GLenum stream, GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream2svATI")]
	public static void glVertexStream2svATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLshort[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3dATI")]
	public static void glVertexStream3dATI (GL.GLenum stream, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3dvATI")]
	public static void glVertexStream3dvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLdouble[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3fATI")]
	public static void glVertexStream3fATI (GL.GLenum stream, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3fvATI")]
	public static void glVertexStream3fvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLfloat[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3iATI")]
	public static void glVertexStream3iATI (GL.GLenum stream, GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3ivATI")]
	public static void glVertexStream3ivATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3sATI")]
	public static void glVertexStream3sATI (GL.GLenum stream, GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream3svATI")]
	public static void glVertexStream3svATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLshort[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4dATI")]
	public static void glVertexStream4dATI (GL.GLenum stream, GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4dvATI")]
	public static void glVertexStream4dvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLdouble[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4fATI")]
	public static void glVertexStream4fATI (GL.GLenum stream, GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4fvATI")]
	public static void glVertexStream4fvATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLfloat[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4iATI")]
	public static void glVertexStream4iATI (GL.GLenum stream, GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4ivATI")]
	public static void glVertexStream4ivATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLint[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4sATI")]
	public static void glVertexStream4sATI (GL.GLenum stream, GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexStream4svATI")]
	public static void glVertexStream4svATI (GL.GLenum stream, [CCode (array_length = false)] GL.GLshort[]? coords);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexWeightPointerEXT")]
	public static void glVertexWeightPointerEXT (GL.GLsizei size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexWeightfEXT")]
	public static void glVertexWeightfEXT (GL.GLfloat weight);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexWeightfvEXT")]
	public static void glVertexWeightfvEXT ([CCode (array_length = false)] GL.GLfloat[]? weight);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexWeighthNV")]
	public static void glVertexWeighthNV (GL.GLhalfNV weight);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVertexWeighthvNV")]
	public static void glVertexWeighthvNV ([CCode (array_length = false)] GL.GLhalfNV[]? weight);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVideoCaptureNV")]
	public static GL.GLenum glVideoCaptureNV (GL.GLuint video_capture_slot, out GL.GLuint sequence_num, out GL.GLuint64EXT capture_time);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVideoCaptureStreamParameterdvNV")]
	public static void glVideoCaptureStreamParameterdvNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVideoCaptureStreamParameterfvNV")]
	public static void glVideoCaptureStreamParameterfvNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glVideoCaptureStreamParameterivNV")]
	public static void glVideoCaptureStreamParameterivNV (GL.GLuint video_capture_slot, GL.GLuint stream, GL.GLenum pname, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? @params);
	[CCode (cheader_filename = "GL/gl.h", cname = "glViewport")]
	public static void glViewport (GL.GLint x, GL.GLint y, GL.GLsizei width, GL.GLsizei height);
	[CCode (cheader_filename = "GL/gl.h", cname = "glViewportArrayv")]
	public static void glViewportArrayv (GL.GLuint first, GL.GLsizei count, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glViewportIndexedf")]
	public static void glViewportIndexedf (GL.GLuint index, GL.GLfloat x, GL.GLfloat y, GL.GLfloat w, GL.GLfloat h);
	[CCode (cheader_filename = "GL/gl.h", cname = "glViewportIndexedfv")]
	public static void glViewportIndexedfv (GL.GLuint index, [CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWaitSync")]
	public static void glWaitSync (GL.GLsync sync, GL.GLbitfield flags, GL.GLuint64 timeout);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightPointerARB")]
	public static void glWeightPointerARB (GL.GLint size, GL.GLenum type, GL.GLsizei stride, [CCode (array_length = false, array_null_terminated = true)] GL.GLvoid[]? pointer);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightbvARB")]
	public static void glWeightbvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLbyte[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightdvARB")]
	public static void glWeightdvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLdouble[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightfvARB")]
	public static void glWeightfvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLfloat[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightivARB")]
	public static void glWeightivARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLint[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightsvARB")]
	public static void glWeightsvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLshort[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightubvARB")]
	public static void glWeightubvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLubyte[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightuivARB")]
	public static void glWeightuivARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLuint[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWeightusvARB")]
	public static void glWeightusvARB (GL.GLint size, [CCode (array_length = false, array_null_terminated = true)] GL.GLushort[]? weights);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2d")]
	public static void glWindowPos2d (GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2dARB")]
	public static void glWindowPos2dARB (GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2dMESA")]
	public static void glWindowPos2dMESA (GL.GLdouble x, GL.GLdouble y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2dv")]
	public static void glWindowPos2dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2dvARB")]
	public static void glWindowPos2dvARB ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2dvMESA")]
	public static void glWindowPos2dvMESA ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2f")]
	public static void glWindowPos2f (GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2fARB")]
	public static void glWindowPos2fARB (GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2fMESA")]
	public static void glWindowPos2fMESA (GL.GLfloat x, GL.GLfloat y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2fv")]
	public static void glWindowPos2fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2fvARB")]
	public static void glWindowPos2fvARB ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2fvMESA")]
	public static void glWindowPos2fvMESA ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2i")]
	public static void glWindowPos2i (GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2iARB")]
	public static void glWindowPos2iARB (GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2iMESA")]
	public static void glWindowPos2iMESA (GL.GLint x, GL.GLint y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2iv")]
	public static void glWindowPos2iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2ivARB")]
	public static void glWindowPos2ivARB ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2ivMESA")]
	public static void glWindowPos2ivMESA ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2s")]
	public static void glWindowPos2s (GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2sARB")]
	public static void glWindowPos2sARB (GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2sMESA")]
	public static void glWindowPos2sMESA (GL.GLshort x, GL.GLshort y);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2sv")]
	public static void glWindowPos2sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2svARB")]
	public static void glWindowPos2svARB ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos2svMESA")]
	public static void glWindowPos2svMESA ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3d")]
	public static void glWindowPos3d (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3dARB")]
	public static void glWindowPos3dARB (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3dMESA")]
	public static void glWindowPos3dMESA (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3dv")]
	public static void glWindowPos3dv ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3dvARB")]
	public static void glWindowPos3dvARB ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3dvMESA")]
	public static void glWindowPos3dvMESA ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3f")]
	public static void glWindowPos3f (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3fARB")]
	public static void glWindowPos3fARB (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3fMESA")]
	public static void glWindowPos3fMESA (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3fv")]
	public static void glWindowPos3fv ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3fvARB")]
	public static void glWindowPos3fvARB ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3fvMESA")]
	public static void glWindowPos3fvMESA ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3i")]
	public static void glWindowPos3i (GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3iARB")]
	public static void glWindowPos3iARB (GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3iMESA")]
	public static void glWindowPos3iMESA (GL.GLint x, GL.GLint y, GL.GLint z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3iv")]
	public static void glWindowPos3iv ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3ivARB")]
	public static void glWindowPos3ivARB ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3ivMESA")]
	public static void glWindowPos3ivMESA ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3s")]
	public static void glWindowPos3s (GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3sARB")]
	public static void glWindowPos3sARB (GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3sMESA")]
	public static void glWindowPos3sMESA (GL.GLshort x, GL.GLshort y, GL.GLshort z);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3sv")]
	public static void glWindowPos3sv ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3svARB")]
	public static void glWindowPos3svARB ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos3svMESA")]
	public static void glWindowPos3svMESA ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4dMESA")]
	public static void glWindowPos4dMESA (GL.GLdouble x, GL.GLdouble y, GL.GLdouble z, GL.GLdouble w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4dvMESA")]
	public static void glWindowPos4dvMESA ([CCode (array_length = false)] GL.GLdouble[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4fMESA")]
	public static void glWindowPos4fMESA (GL.GLfloat x, GL.GLfloat y, GL.GLfloat z, GL.GLfloat w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4fvMESA")]
	public static void glWindowPos4fvMESA ([CCode (array_length = false)] GL.GLfloat[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4iMESA")]
	public static void glWindowPos4iMESA (GL.GLint x, GL.GLint y, GL.GLint z, GL.GLint w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4ivMESA")]
	public static void glWindowPos4ivMESA ([CCode (array_length = false)] GL.GLint[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4sMESA")]
	public static void glWindowPos4sMESA (GL.GLshort x, GL.GLshort y, GL.GLshort z, GL.GLshort w);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWindowPos4svMESA")]
	public static void glWindowPos4svMESA ([CCode (array_length = false)] GL.GLshort[]? v);
	[CCode (cheader_filename = "GL/gl.h", cname = "glWriteMaskEXT")]
	public static void glWriteMaskEXT (GL.GLuint res, GL.GLuint @in, GL.GLenum outX, GL.GLenum outY, GL.GLenum outZ, GL.GLenum outW);
}
